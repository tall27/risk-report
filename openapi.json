{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Venafi as a Service API for Outage Detection Service Operations",
    "description" : "Api for Venafi as a Service",
    "version" : "v1"
  },
  "paths" : {
    "/v1/applications/certificates" : {
      "patch" : {
        "tags" : [ "Applications" ],
        "summary" : "Manage application assignments for a set of certificates",
        "description" : "Update one or more application assignments for one or more certificates.  Valid actions are ADD, REPLACE and DELETE.",
        "operationId" : "applications_assignToCertificates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationsAssignRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Certificate application assignments were updated; details in response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationsAssignResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/applications/{name}/certificateissuingtemplates/{alias}" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Get the details of an issuing template by its alias",
        "description" : "Retrieves the details of the certificate issuing template identified by the specified `alias` assigned to the application that has the specified `name`.",
        "operationId" : "certificateissuingtemplates_getByAlias",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "Name of an Application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "alias",
          "in" : "path",
          "description" : "Alias of an Issuing Template for the specified Application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Issuing Template was found; details in response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateIssuingTemplateInformation"
                }
              }
            }
          },
          "404" : {
            "description" : "Issuing Template not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/applications" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Get the details of applications",
        "description" : "Returns the details of applications matching the below provided criteria.",
        "operationId" : "applications_getAll",
        "parameters" : [ {
          "name" : "ownerDetails",
          "in" : "query",
          "description" : "Indicates whether or not the response should include the `owningUsers` and `owningTeams` details.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "ownershipCheck",
          "in" : "query",
          "description" : "Indicates whether or not the response should exclude applications that are not editable by the current user.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "issuingTemplateAssigned",
          "in" : "query",
          "description" : "Indicates whether or not the response should exclude applications with no issuing templates assigned to them.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "ownershipTree",
          "in" : "query",
          "description" : "This parameter is deprecated for Application endpoints.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of applications in response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Applications" ],
        "summary" : "Add an application",
        "description" : "Creates an application.",
        "operationId" : "applications_create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Application was created; details in response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Application already exists.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/applications/{id}" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Get an application's details",
        "description" : "Retrieves the details of the application that has the specified `id`.",
        "operationId" : "applications_getById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "UUID of an Application.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "UUID of an Application.",
            "format" : "uuid"
          }
        }, {
          "name" : "ownershipTree",
          "in" : "query",
          "description" : "Indicates whether response should include nested ownership data (e.g., `owningContainers`).",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Application Information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationInformation"
                }
              }
            }
          },
          "404" : {
            "description" : "Application not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request Conditions Failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request Conditions Failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "Update an application's details",
        "description" : "Updates (replaces) all details of the application that has the specified `id`.",
        "operationId" : "applications_update",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "UUID of an Application.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "UUID of an Application.",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : " Application was updated; details in response body",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationInformation"
                }
              }
            }
          },
          "404" : {
            "description" : "Application not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Applications" ],
        "summary" : "Remove an application",
        "description" : "Deletes the application that has the specified `id`.",
        "operationId" : "applications_delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "UUID of an Application.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "UUID of an Application.",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Application was deleted."
          },
          "404" : {
            "description" : "Application not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/applications/name/{name}" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Get an application's details by its name",
        "description" : "Retrieves the details of the application that has the specified `name`.",
        "operationId" : "applications_getByName",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "Name of an Application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ownershipTree",
          "in" : "query",
          "description" : "Indicates whether response should include nested ownership data (e.g., `owningContainers`).",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Application was found; details in response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationInformation"
                }
              }
            }
          },
          "404" : {
            "description" : "Application not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/applications/{id}/scanaficonfiguration" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Get the Basic Discovery configuration for an application",
        "description" : "Retrieves the *Basic Discovery* (Scanafi) configuration for the application that has the specified `id`.",
        "operationId" : "applications_getScanafiConfigById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "UUID of an Application.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "UUID of an Application.",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Basic Discovery configuration in response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScanafiConfigResponseV1"
                }
              }
            }
          },
          "404" : {
            "description" : "Application not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/applications/{id}/invitations" : {
      "post" : {
        "tags" : [ "Applications" ],
        "summary" : "Creates an invitation link for an application.",
        "description" : "Activates a URL that invites new users to become owners of the application with the specified `id`. The invitation link remains valid for 10 minutes.",
        "operationId" : "applications_invitations_create",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "UUID of an Application.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "UUID of an Application.",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InvitationRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "If successful, this operation returns a User Invitation link in the response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvitationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificateaggregates/{name}" : {
      "get" : {
        "tags" : [ "Certificate Aggregations" ],
        "summary" : "Retrieve aggregates for certificate expiration",
        "description" : "This endpoint retrieves aggregates for certificates per application, organized by risk level based on expiration date. It provides a quick snapshot of your current certificate landscape, from healthy to high-risk certificates, and gives you the data you need to make informed decisions.",
        "operationId" : "certificateaggregates_getCertificateAggregates",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "This parameter only accepts \"application\"",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Certificate aggregates response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateAggregatesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificateaggregates/range" : {
      "get" : {
        "tags" : [ "Certificate Aggregations" ],
        "summary" : "Retrieve expiration aggregates for a time range",
        "description" : "This endpoint retrieves certificate expiration aggregates for the number certificates that expired in the previous 30 days and the number that will expire in the next 60 days. It returns a list of dates and the number of certificates that expire on that date.",
        "operationId" : "certificateaggregates_getCertificateAggregatesForRange",
        "responses" : {
          "200" : {
            "description" : "Certificate aggregates response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateAggregatesRangeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificateaggregates" : {
      "post" : {
        "tags" : [ "Certificate Aggregations" ],
        "summary" : "Retrieve certificate aggregates",
        "description" : "This endpoint retrieves aggregates for certificates according to specified criteria. This API is often used to determine newly discovered certificates, expired certificates, as well as other criteria so you can easily manage your certificate lifecycle.",
        "operationId" : "certificateaggregates_getCertificateAggregations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateAggregationsRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Certificate aggregates response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacetResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificateaggregates/quota" : {
      "get" : {
        "tags" : [ "Certificate Aggregations" ],
        "summary" : "Retrieve aggregates for certificate installations",
        "description" : "Retrieve certificate installations usage for company.",
        "operationId" : "certificateaggregates_getCertificateInstallationsQuota",
        "responses" : {
          "200" : {
            "description" : "Certificate aggregates response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateInstallationsUsageResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificateaggregates/unassigned" : {
      "get" : {
        "tags" : [ "Certificate Aggregations" ],
        "summary" : "Retrieve expiration aggregates for unassigned certificates",
        "description" : "This endpoint retrieves aggregates for certificates that have not been assigned to an application and are not assigned to an application, and groups them into risk categories based on their expiration date. This API helps you determine your unassigned certificates risk so you can assign certificates to their appropriate applications.",
        "operationId" : "certificateaggregates_getUnassignedCertificateAggregates",
        "responses" : {
          "200" : {
            "description" : "Unassigned certificate aggregates response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnassignedCertificateAggregatesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificateinstancesearch" : {
      "post" : {
        "tags" : [ "Certificate Instance" ],
        "summary" : "Retrieve certificate instance data matching search criteria",
        "description" : "Use this endpoint to retrieve certificate instance data according to specified search criteria based on commonly used field search parameters. Some examples are `signatureHashAlgorithm`, `validityEnd`, and `issuerCN`. For more information, see [common search parameters](https://docs.venafi.cloud/api/about-api-search-fields/#common-search-parameters)",
        "operationId" : "certificateinstances_search_getByExpression",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Filter"
              },
              "examples" : {
                "Certificate instance search request by expression" : {
                  "summary" : "Certificate instance search by expression",
                  "description" : "Certificate instance search request by expression",
                  "value" : {
                    "expression" : {
                      "operator" : "OR",
                      "operands" : [ {
                        "field" : "ipAddress",
                        "operator" : "EQ",
                        "value" : "127.0.0.1"
                      }, {
                        "field" : "hostname",
                        "operator" : "EQ",
                        "value" : "venafi.com"
                      } ]
                    },
                    "ordering" : {
                      "orders" : [ {
                        "direction" : "ASC",
                        "field" : "certificatInstanceModificationDate"
                      } ]
                    },
                    "paging" : {
                      "pageNumber" : 0,
                      "pageSize" : 10
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Certificate Instances Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedCertificateInstanceResponse"
                },
                "examples" : {
                  "Certificate instance details response" : {
                    "summary" : "Certificate instance details",
                    "description" : "Certificate instance details response",
                    "value" : {
                      "count" : 1,
                      "instances" : [ {
                        "certificateInstanceId" : "7ec1bc50-9051-11ed-8e50-b994b27d2ece",
                        "certificateId" : "7ec12010-9051-11ed-8e50-b994b27d2ece",
                        "certificateSource" : "USER_SCAN",
                        "ipAddress" : "23.185.0.2",
                        "hostname" : "venafi.com",
                        "port" : 443,
                        "instanceChainValidationStatus" : [ "OK" ],
                        "sslValidationStatus" : "OK",
                        "sslProtocols" : [ "TLSv1.3", "TLSv1.2" ],
                        "lastScanDate" : "2023-01-10T21:38:02.886+00:00",
                        "lastValidatedAttempt" : "2023-01-10T21:38:03.090+00:00",
                        "modificationDate" : "2023-01-10T21:38:03.140+00:00",
                        "serviceIds" : [ "1d61e9e0-9046-11ed-bf12-53a1b041cf25" ],
                        "deploymentStatus" : "IN_USE",
                        "certificate" : {
                          "id" : "7ec12010-9051-11ed-8e50-b994b27d2ece",
                          "companyId" : "85595df0-8e14-11ed-87e3-755db050f29d",
                          "managedCertificateId" : "7f0aac30-9051-11ed-8ab8-19e0a618d9cd",
                          "fingerprint" : "4027AEDB24237BB632DA4FB733345F6445959105",
                          "certificateName" : "www.venafi.com",
                          "issuerCertificateIds" : [ "7ebed620-9051-11ed-8e50-b994b27d2ece", "d50a4410-297e-11eb-bc4c-8b24e5a66fb6" ],
                          "certificateStatus" : "ACTIVE",
                          "modificationDate" : "2023-01-10T21:38:03.140+00:00",
                          "validityStart" : "2022-03-14T19:29:38.000+00:00",
                          "validityEnd" : "2023-03-14T19:39:00.000+00:00",
                          "selfSigned" : false,
                          "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                          "signatureHashAlgorithm" : "SHA256",
                          "encryptionType" : "RSA",
                          "keyStrength" : 2048,
                          "subjectKeyIdentifierHash" : "32EC9FAC232FA74EBFFD7E63FE8F92233CAA965B",
                          "authorityKeyIdentifierHash" : "294C87C811C70BD19AB7E0F2D910570198160EE1",
                          "serialNumber" : "278B5FBB3DA7A3E7E58C2BD3894C70ACBC1C66F9",
                          "subjectDN" : "cn=www.venafi.com,o=Venafi, Inc.,c=US,st=Utah,l=Salt Lake City",
                          "subjectCN" : [ "www.venafi.com" ],
                          "subjectO" : "Venafi, Inc.",
                          "subjectST" : "Utah",
                          "subjectL" : "Salt Lake City",
                          "subjectC" : "US",
                          "subjectAlternativeNamesByType" : {
                            "otherName" : [ ],
                            "rfc822Name" : [ ],
                            "dNSName" : [ "www.venafi.com", "venafi.com" ]
                          },
                          "subjectAlternativeNameDns" : [ "www.venafi.com", "venafi.com" ],
                          "issuerDN" : "cn=HydrantID SSL CA G3,o=HydrantID (Avalanche Cloud Corporation),c=US",
                          "issuerCN" : [ "HydrantID SSL CA G3" ],
                          "issuerC" : "US",
                          "keyUsage" : [ "digitalSignature", "keyEncipherment" ],
                          "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.2", "1.3.6.1.5.5.7.3.1" ],
                          "ocspNoCheck" : false,
                          "versionType" : "CURRENT"
                        }
                      } ]
                    }
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedCertificateInstanceResponse"
                },
                "examples" : {
                  "Certificate instance details response" : {
                    "summary" : "Certificate instance details",
                    "description" : "Certificate instance details response",
                    "value" : {
                      "count" : 1,
                      "instances" : [ {
                        "certificateInstanceId" : "7ec1bc50-9051-11ed-8e50-b994b27d2ece",
                        "certificateId" : "7ec12010-9051-11ed-8e50-b994b27d2ece",
                        "certificateSource" : "USER_SCAN",
                        "ipAddress" : "23.185.0.2",
                        "hostname" : "venafi.com",
                        "port" : 443,
                        "instanceChainValidationStatus" : [ "OK" ],
                        "sslValidationStatus" : "OK",
                        "sslProtocols" : [ "TLSv1.3", "TLSv1.2" ],
                        "lastScanDate" : "2023-01-10T21:38:02.886+00:00",
                        "lastValidatedAttempt" : "2023-01-10T21:38:03.090+00:00",
                        "modificationDate" : "2023-01-10T21:38:03.140+00:00",
                        "serviceIds" : [ "1d61e9e0-9046-11ed-bf12-53a1b041cf25" ],
                        "deploymentStatus" : "IN_USE",
                        "certificate" : {
                          "id" : "7ec12010-9051-11ed-8e50-b994b27d2ece",
                          "companyId" : "85595df0-8e14-11ed-87e3-755db050f29d",
                          "managedCertificateId" : "7f0aac30-9051-11ed-8ab8-19e0a618d9cd",
                          "fingerprint" : "4027AEDB24237BB632DA4FB733345F6445959105",
                          "certificateName" : "www.venafi.com",
                          "issuerCertificateIds" : [ "7ebed620-9051-11ed-8e50-b994b27d2ece", "d50a4410-297e-11eb-bc4c-8b24e5a66fb6" ],
                          "certificateStatus" : "ACTIVE",
                          "modificationDate" : "2023-01-10T21:38:03.140+00:00",
                          "validityStart" : "2022-03-14T19:29:38.000+00:00",
                          "validityEnd" : "2023-03-14T19:39:00.000+00:00",
                          "selfSigned" : false,
                          "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                          "signatureHashAlgorithm" : "SHA256",
                          "encryptionType" : "RSA",
                          "keyStrength" : 2048,
                          "subjectKeyIdentifierHash" : "32EC9FAC232FA74EBFFD7E63FE8F92233CAA965B",
                          "authorityKeyIdentifierHash" : "294C87C811C70BD19AB7E0F2D910570198160EE1",
                          "serialNumber" : "278B5FBB3DA7A3E7E58C2BD3894C70ACBC1C66F9",
                          "subjectDN" : "cn=www.venafi.com,o=Venafi, Inc.,c=US,st=Utah,l=Salt Lake City",
                          "subjectCN" : [ "www.venafi.com" ],
                          "subjectO" : "Venafi, Inc.",
                          "subjectST" : "Utah",
                          "subjectL" : "Salt Lake City",
                          "subjectC" : "US",
                          "subjectAlternativeNamesByType" : {
                            "otherName" : [ ],
                            "rfc822Name" : [ ],
                            "dNSName" : [ "www.venafi.com", "venafi.com" ]
                          },
                          "subjectAlternativeNameDns" : [ "www.venafi.com", "venafi.com" ],
                          "issuerDN" : "cn=HydrantID SSL CA G3,o=HydrantID (Avalanche Cloud Corporation),c=US",
                          "issuerCN" : [ "HydrantID SSL CA G3" ],
                          "issuerC" : "US",
                          "keyUsage" : [ "digitalSignature", "keyEncipherment" ],
                          "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.2", "1.3.6.1.5.5.7.3.1" ],
                          "ocspNoCheck" : false,
                          "versionType" : "CURRENT"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request Conditions Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request Conditions Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificateinstances" : {
      "get" : {
        "tags" : [ "Certificate Instance" ],
        "summary" : "Retrieve Certificate Instances",
        "description" : "Use this endpoint allows you to retrieve certificate instances according to specified criteria. Total certificate instances are the sum of the number of certificate installations, plus the total number of certificates that have no installations. Trusted CA certificates are not counted. For more information, see [certificate instances](https://docs.venafi.cloud/CSH_view_instances).\n\nUse query parameters to limit your search based on certificate criteria.",
        "operationId" : "certificateinstances_getAll",
        "parameters" : [ {
          "name" : "source",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "USER_PROVIDED", "USER_IMPORTED", "USER_SCAN", "TRUSTNET_SCAN", "ON_PREM_CA_IMPORT", "EXTERNAL_CA_IMPORT", "FILE_IMPORT", "EXTERNAL_SCAN", "DOMAIN_SCAN", "SMART_SCAN_INTERNAL", "SMART_SCAN_EXTERNAL", "SMART_VALIDATION_INTERNAL", "SMART_VALIDATION_EXTERNAL", "MACHINE_DISCOVERY", "KUBERNETES_DISCOVERY", "AWS_DISCOVERY", "AKAMAI_DISCOVERY", "AZURE_DISCOVERY", "GCP_DISCOVERY" ]
          }
        }, {
          "name" : "ipAddress",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hostname",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Certificate response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedCertificateInstanceResponse"
                },
                "examples" : {
                  "Certificate instances details response" : {
                    "summary" : "Certificate instance details",
                    "description" : "Certificate instances details response",
                    "value" : {
                      "count" : 2,
                      "instances" : [ {
                        "certificateInstanceId" : "d2522ff0-dsd7-11ed-9c90-87a729edc082",
                        "certificateId" : "d2516ca0-8dd7-11ed-9c90-87a729edc082",
                        "certificateSource" : "USER_SCAN",
                        "ipAddress" : "76.76.21.22",
                        "hostname" : "venafi.com",
                        "port" : 443,
                        "instanceChainValidationStatus" : [ "OK" ],
                        "sslValidationStatus" : "OK",
                        "sslValidationErrorArguments" : [ ],
                        "sslProtocols" : [ "TLSv1.3", "TLSv1.2" ],
                        "lastScanDate" : "2023-02-10T00:14:05.854+00:00",
                        "lastValidatedAttempt" : "2023-02-10T00:14:05.922+00:00",
                        "modificationDate" : "2023-02-10T00:14:07.509+00:00",
                        "serviceIds" : [ "be7447c0-a8e3-11ed-bdca-d5b837a24ba9" ],
                        "deploymentStatus" : "IN_USE",
                        "certificate" : {
                          "id" : "d2516ca0-a8d7-12ed-9c90-87a729edc082",
                          "companyId" : "062a5e50-a8d6-11ed-afc9-45c12cf499bf",
                          "managedCertificateId" : "d3fgafd0-a8d7-11ed-96b6-1778d4537ec7",
                          "fingerprint" : "99D89424CAF4AF24147898276FAF2AD1C360B540",
                          "certificateName" : "www.venafi.com",
                          "issuerCertificateIds" : [ "d24ed490-a8d7-11ed-9t90-87a729edc082", "d5636090-297e-11ea-bc4c-8b24e5a66fb6" ],
                          "certificateStatus" : "ACTIVE",
                          "modificationDate" : "2023-02-10T00:14:07.509+00:00",
                          "validityStart" : "2023-01-11T21:07:58.000+00:00",
                          "validityEnd" : "2024-01-06T21:06:58.000+00:00",
                          "selfSigned" : false,
                          "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                          "signatureHashAlgorithm" : "SHA256",
                          "encryptionType" : "RSA",
                          "keyStrength" : 2048,
                          "subjectKeyIdentifierHash" : "75FFED443D57C47D3C0ED43EFC4CF82217AB729A",
                          "authorityKeyIdentifierHash" : "3CD6AEAA77686C3B677FF6CBBE8BD051CC0AEB8A",
                          "serialNumber" : "440185A2A93E676BEA5BBC65619B333D",
                          "subjectDN" : "cn=www.venafi.com,o=Venafi Inc,c=US,st=Utah,l=Salt Lake City",
                          "subjectCN" : [ "www.venafi.com" ],
                          "subjectO" : "Venafi Inc",
                          "subjectST" : "Utah",
                          "subjectL" : "Salt Lake City",
                          "subjectC" : "US",
                          "subjectAlternativeNamesByType" : {
                            "dNSName" : [ "venafi.com", "www.venafi.com" ]
                          },
                          "subjectAlternativeNameDns" : [ "venafi.com", "www.venafi.com" ],
                          "issuerDN" : "cn=HydrantID Server CA O1,ou=HydrantID Trusted Certificate Service,o=IdenTrust,c=US",
                          "issuerCN" : [ "HydrantID Server CA O1" ],
                          "issuerOU" : [ "HydrantID Trusted Certificate Service" ],
                          "issuerC" : "US",
                          "keyUsage" : [ "digitalSignature", "keyEncipherment" ],
                          "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.1", "1.3.6.1.5.5.7.3.2" ],
                          "ocspNoCheck" : false,
                          "versionType" : "CURRENT"
                        }
                      }, {
                        "certificateInstanceId" : "d233e820-a8d7-11ed-9c90-87a729edc082",
                        "certificateId" : "d21f8790-a8d7-11ed-9c90-87a729edc082",
                        "certificateSource" : "USER_SCAN",
                        "ipAddress" : "11.35.125.124",
                        "hostname" : "venafi.cloud",
                        "port" : 443,
                        "instanceChainValidationStatus" : [ "OK" ],
                        "sslValidationStatus" : "OK",
                        "sslValidationErrorArguments" : [ ],
                        "sslProtocols" : [ "TLSv1.3", "TLSv1.2" ],
                        "lastScanDate" : "2023-02-10T00:14:03.302+00:00",
                        "lastValidatedAttempt" : "2023-02-10T00:14:04.014+00:00",
                        "modificationDate" : "2023-02-10T00:14:06.011+00:00",
                        "serviceIds" : [ "be7447c0-a8d8-11ed-bdca-d5b837a24ba9" ],
                        "deploymentStatus" : "IN_USE",
                        "certificate" : {
                          "id" : "d21f8730-a8d7-11ed-9c90-87a729edc082",
                          "companyId" : "06285e50-a8d6-11ed-afc9-45c12cf499bf",
                          "managedCertificateId" : "d2cRfc30-a8d7-11ed-96b6-1778d4537ec7",
                          "fingerprint" : "8BB7A7669BD689F98FFE90B0992D90C006A005A6",
                          "certificateName" : "venafi.cloud",
                          "issuerCertificateIds" : [ "d21a7e20-a8d3-11ed-9c90-87a729edc082", "d58eb650-2972-11eb-bc4c-8b24e5a66fb6" ],
                          "certificateStatus" : "ACTIVE",
                          "modificationDate" : "2023-02-10T00:14:06.011+00:00",
                          "validityStart" : "2023-01-01T00:00:00.000+00:00",
                          "validityEnd" : "2024-01-30T23:59:59.000+00:00",
                          "selfSigned" : false,
                          "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                          "signatureHashAlgorithm" : "SHA256",
                          "encryptionType" : "RSA",
                          "keyStrength" : 2048,
                          "subjectKeyIdentifierHash" : "BBCDA66901E1F7EE4723DD347643E7F2079DC14D",
                          "authorityKeyIdentifierHash" : "DD3C9ABA215BCA96FB8C1CDA555B7D1BFC26DF3D",
                          "serialNumber" : "047LL5D239595A32F91E83D94C8FFF7B",
                          "subjectDN" : "cn=venafi.cloud",
                          "subjectCN" : [ "venafi.cloud" ],
                          "subjectAlternativeNamesByType" : {
                            "dNSName" : [ "venafi.cloud", "www.venafi.cloud", "ui.venafi.cloud", "us1.venafi.cloud", "ui.us1.venafi.cloud" ]
                          },
                          "subjectAlternativeNameDns" : [ "venafi.cloud", "www.venafi.cloud", "ui.venafi.cloud", "us1.venafi.cloud", "ui.us1.venafi.cloud" ],
                          "issuerDN" : "cn=Amazon,ou=Server CA 1B,o=Amazon,c=US",
                          "issuerCN" : [ "Amazon" ],
                          "issuerOU" : [ "Server CA 1B" ],
                          "issuerC" : "US",
                          "keyUsage" : [ "digitalSignature", "keyEncipherment" ],
                          "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.1", "1.3.6.1.5.5.7.3.2" ],
                          "ocspNoCheck" : false,
                          "versionType" : "CURRENT"
                        }
                      } ]
                    }
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedCertificateInstanceResponse"
                },
                "examples" : {
                  "Certificate instances details response" : {
                    "summary" : "Certificate instance details",
                    "description" : "Certificate instances details response",
                    "value" : {
                      "count" : 2,
                      "instances" : [ {
                        "certificateInstanceId" : "d2522ff0-dsd7-11ed-9c90-87a729edc082",
                        "certificateId" : "d2516ca0-8dd7-11ed-9c90-87a729edc082",
                        "certificateSource" : "USER_SCAN",
                        "ipAddress" : "76.76.21.22",
                        "hostname" : "venafi.com",
                        "port" : 443,
                        "instanceChainValidationStatus" : [ "OK" ],
                        "sslValidationStatus" : "OK",
                        "sslValidationErrorArguments" : [ ],
                        "sslProtocols" : [ "TLSv1.3", "TLSv1.2" ],
                        "lastScanDate" : "2023-02-10T00:14:05.854+00:00",
                        "lastValidatedAttempt" : "2023-02-10T00:14:05.922+00:00",
                        "modificationDate" : "2023-02-10T00:14:07.509+00:00",
                        "serviceIds" : [ "be7447c0-a8e3-11ed-bdca-d5b837a24ba9" ],
                        "deploymentStatus" : "IN_USE",
                        "certificate" : {
                          "id" : "d2516ca0-a8d7-12ed-9c90-87a729edc082",
                          "companyId" : "062a5e50-a8d6-11ed-afc9-45c12cf499bf",
                          "managedCertificateId" : "d3fgafd0-a8d7-11ed-96b6-1778d4537ec7",
                          "fingerprint" : "99D89424CAF4AF24147898276FAF2AD1C360B540",
                          "certificateName" : "www.venafi.com",
                          "issuerCertificateIds" : [ "d24ed490-a8d7-11ed-9t90-87a729edc082", "d5636090-297e-11ea-bc4c-8b24e5a66fb6" ],
                          "certificateStatus" : "ACTIVE",
                          "modificationDate" : "2023-02-10T00:14:07.509+00:00",
                          "validityStart" : "2023-01-11T21:07:58.000+00:00",
                          "validityEnd" : "2024-01-06T21:06:58.000+00:00",
                          "selfSigned" : false,
                          "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                          "signatureHashAlgorithm" : "SHA256",
                          "encryptionType" : "RSA",
                          "keyStrength" : 2048,
                          "subjectKeyIdentifierHash" : "75FFED443D57C47D3C0ED43EFC4CF82217AB729A",
                          "authorityKeyIdentifierHash" : "3CD6AEAA77686C3B677FF6CBBE8BD051CC0AEB8A",
                          "serialNumber" : "440185A2A93E676BEA5BBC65619B333D",
                          "subjectDN" : "cn=www.venafi.com,o=Venafi Inc,c=US,st=Utah,l=Salt Lake City",
                          "subjectCN" : [ "www.venafi.com" ],
                          "subjectO" : "Venafi Inc",
                          "subjectST" : "Utah",
                          "subjectL" : "Salt Lake City",
                          "subjectC" : "US",
                          "subjectAlternativeNamesByType" : {
                            "dNSName" : [ "venafi.com", "www.venafi.com" ]
                          },
                          "subjectAlternativeNameDns" : [ "venafi.com", "www.venafi.com" ],
                          "issuerDN" : "cn=HydrantID Server CA O1,ou=HydrantID Trusted Certificate Service,o=IdenTrust,c=US",
                          "issuerCN" : [ "HydrantID Server CA O1" ],
                          "issuerOU" : [ "HydrantID Trusted Certificate Service" ],
                          "issuerC" : "US",
                          "keyUsage" : [ "digitalSignature", "keyEncipherment" ],
                          "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.1", "1.3.6.1.5.5.7.3.2" ],
                          "ocspNoCheck" : false,
                          "versionType" : "CURRENT"
                        }
                      }, {
                        "certificateInstanceId" : "d233e820-a8d7-11ed-9c90-87a729edc082",
                        "certificateId" : "d21f8790-a8d7-11ed-9c90-87a729edc082",
                        "certificateSource" : "USER_SCAN",
                        "ipAddress" : "11.35.125.124",
                        "hostname" : "venafi.cloud",
                        "port" : 443,
                        "instanceChainValidationStatus" : [ "OK" ],
                        "sslValidationStatus" : "OK",
                        "sslValidationErrorArguments" : [ ],
                        "sslProtocols" : [ "TLSv1.3", "TLSv1.2" ],
                        "lastScanDate" : "2023-02-10T00:14:03.302+00:00",
                        "lastValidatedAttempt" : "2023-02-10T00:14:04.014+00:00",
                        "modificationDate" : "2023-02-10T00:14:06.011+00:00",
                        "serviceIds" : [ "be7447c0-a8d8-11ed-bdca-d5b837a24ba9" ],
                        "deploymentStatus" : "IN_USE",
                        "certificate" : {
                          "id" : "d21f8730-a8d7-11ed-9c90-87a729edc082",
                          "companyId" : "06285e50-a8d6-11ed-afc9-45c12cf499bf",
                          "managedCertificateId" : "d2cRfc30-a8d7-11ed-96b6-1778d4537ec7",
                          "fingerprint" : "8BB7A7669BD689F98FFE90B0992D90C006A005A6",
                          "certificateName" : "venafi.cloud",
                          "issuerCertificateIds" : [ "d21a7e20-a8d3-11ed-9c90-87a729edc082", "d58eb650-2972-11eb-bc4c-8b24e5a66fb6" ],
                          "certificateStatus" : "ACTIVE",
                          "modificationDate" : "2023-02-10T00:14:06.011+00:00",
                          "validityStart" : "2023-01-01T00:00:00.000+00:00",
                          "validityEnd" : "2024-01-30T23:59:59.000+00:00",
                          "selfSigned" : false,
                          "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                          "signatureHashAlgorithm" : "SHA256",
                          "encryptionType" : "RSA",
                          "keyStrength" : 2048,
                          "subjectKeyIdentifierHash" : "BBCDA66901E1F7EE4723DD347643E7F2079DC14D",
                          "authorityKeyIdentifierHash" : "DD3C9ABA215BCA96FB8C1CDA555B7D1BFC26DF3D",
                          "serialNumber" : "047LL5D239595A32F91E83D94C8FFF7B",
                          "subjectDN" : "cn=venafi.cloud",
                          "subjectCN" : [ "venafi.cloud" ],
                          "subjectAlternativeNamesByType" : {
                            "dNSName" : [ "venafi.cloud", "www.venafi.cloud", "ui.venafi.cloud", "us1.venafi.cloud", "ui.us1.venafi.cloud" ]
                          },
                          "subjectAlternativeNameDns" : [ "venafi.cloud", "www.venafi.cloud", "ui.venafi.cloud", "us1.venafi.cloud", "ui.us1.venafi.cloud" ],
                          "issuerDN" : "cn=Amazon,ou=Server CA 1B,o=Amazon,c=US",
                          "issuerCN" : [ "Amazon" ],
                          "issuerOU" : [ "Server CA 1B" ],
                          "issuerC" : "US",
                          "keyUsage" : [ "digitalSignature", "keyEncipherment" ],
                          "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.1", "1.3.6.1.5.5.7.3.2" ],
                          "ocspNoCheck" : false,
                          "versionType" : "CURRENT"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificateinstances/{id}" : {
      "get" : {
        "tags" : [ "Certificate Instance" ],
        "summary" : "Get a certificate installation's details",
        "description" : "Retrieves the details of the certificate installation that has the specified `id`.",
        "operationId" : "certificateinstances_getById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "UUID of a certificate installation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Certificate installation was found; details in response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedCertificateInstanceInformation"
                },
                "examples" : {
                  "Certificate instance details response" : {
                    "summary" : "Certificate instance details",
                    "description" : "Certificate instance details response",
                    "value" : {
                      "count" : 1,
                      "instances" : [ {
                        "certificateInstanceId" : "7ec1bc43-9051-11ed-8e50-b994b27d2ece",
                        "certificateId" : "7ec12010-4151-11ed-8e50-b994b27d2ece",
                        "certificateSource" : "USER_SCAN",
                        "ipAddress" : "23.185.0.2",
                        "hostname" : "venafi.com",
                        "port" : 443,
                        "instanceChainValidationStatus" : [ "OK" ],
                        "sslValidationStatus" : "OK",
                        "sslProtocols" : [ "TLSv1.3", "TLSv1.2" ],
                        "lastScanDate" : "2023-01-10T19:12:05.015+00:00",
                        "lastValidatedAttempt" : "2023-01-10T19:12:10.225+00:00",
                        "modificationDate" : "2023-01-10T19:12:25.948+00:00",
                        "serviceIds" : [ "1d61e9e0-9046-11ed-bf54-53a1b041cf25" ],
                        "deploymentStatus" : "IN_USE",
                        "certificate" : {
                          "id" : "7ec12010-9051-34ew-8e50-b994b27d2ece",
                          "companyId" : "85595df0-8e14-wq12-87e3-755db050f29d",
                          "managedCertificateId" : "7f0aac30-7420-11ed-8ab8-19e0a618d9cd",
                          "fingerprint" : "4027AEDB24237BB634DA4FB733345F6445959105",
                          "certificateName" : "www.venafi.com",
                          "issuerCertificateIds" : [ "7ebed620-9051-11ed-32ew-b994b27d2ece", "d50a4410-297e-11eb-32sa-8b24e5a66fb6" ],
                          "certificateStatus" : "ACTIVE",
                          "modificationDate" : "2023-01-10T19:12:25.948+00:00",
                          "validityStart" : "2022-03-14T19:29:38.000+00:00",
                          "validityEnd" : "2023-03-14T19:39:00.000+00:00",
                          "selfSigned" : false,
                          "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                          "signatureHashAlgorithm" : "SHA256",
                          "encryptionType" : "RSA",
                          "keyStrength" : 2048,
                          "subjectKeyIdentifierHash" : "44EC9FAC232FA74EBFFD7E63FE8F92233CAA965B",
                          "authorityKeyIdentifierHash" : "654C87C811C70BD19AB7E0F2D910570198160EE1",
                          "serialNumber" : "289B5FBB3DA7A3E7E58C2BD3894C70ACBC1C66F9",
                          "subjectDN" : "cn=www.venafi.com,o=Venafi, Inc.,c=US,st=Utah,l=Salt Lake City",
                          "subjectCN" : [ "www.venafi.com" ],
                          "subjectO" : "Venafi, Inc.",
                          "subjectST" : "Utah",
                          "subjectL" : "Salt Lake City",
                          "subjectC" : "US",
                          "subjectAlternativeNamesByType" : {
                            "dNSName" : [ "www.venafi.com", "venafi.com" ]
                          },
                          "subjectAlternativeNameDns" : [ "www.venafi.com", "venafi.com" ],
                          "issuerDN" : "cn=HydrantID SSL CA G3,o=HydrantID (Avalanche Cloud Corporation),c=US",
                          "issuerCN" : [ "HydrantID SSL CA G3" ],
                          "issuerC" : "US",
                          "keyUsage" : [ "digitalSignature", "keyEncipherment" ],
                          "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.2", "1.3.6.1.5.5.7.3.1" ],
                          "ocspNoCheck" : false,
                          "versionType" : "CURRENT"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Certificate installation not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificateinstances/validation" : {
      "post" : {
        "tags" : [ "Certificate Instance" ],
        "summary" : "Request validation for a set of certificate installations",
        "description" : "Submits one or more certificate installation for TLS validation.",
        "operationId" : "certificateinstances_validation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateInstanceValidationRequest"
              },
              "examples" : {
                "Certificate instance validation request" : {
                  "summary" : "Certificate instance validation",
                  "description" : "Certificate instance validation request",
                  "value" : {
                    "instanceIds" : [ "7ec1bc50-9051-11ed-8e50-b994b27d2ece" ]
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Certificate installations were submitted for validation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificaterequestssearch" : {
      "post" : {
        "tags" : [ "Certificate Request" ],
        "summary" : "Get the details of certificate requests matching custom search criteria",
        "description" : "Retrieves the details of certificate requests that match the specified [search expression](https://docs.venafi.cloud/CSH_api_search).",
        "operationId" : "getCertificateRequestsByExpression",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Filter"
              },
              "examples" : {
                "Certificate request search request by expression" : {
                  "summary" : "Certificate request search by expression",
                  "description" : "Certificate request search request by expression",
                  "value" : {
                    "ordering" : {
                      "orders" : [ {
                        "field" : "subjectCN",
                        "direction" : "ASC"
                      } ]
                    },
                    "paging" : {
                      "pageSize" : 10,
                      "pageNumber" : 0
                    },
                    "expression" : {
                      "operator" : "OR",
                      "operands" : [ {
                        "field" : "subjectCN",
                        "operator" : "EQ",
                        "value" : "venafi.cloud"
                      }, {
                        "field" : "subjectCN",
                        "operator" : "EQ",
                        "value" : "localhost"
                      } ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The response body contains the details of the certificate requests.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateRequestDocumentResponse"
                },
                "examples" : {
                  "Certificate request details response" : {
                    "summary" : "Certificate request details",
                    "description" : "Certificate request details response",
                    "value" : {
                      "numFound" : 2,
                      "certificateRequests" : [ {
                        "id" : "c6d8dbd0-d279-11ed-b5e4-151222cdc24b",
                        "companyId" : "b11fc270-cff1-11ed-97d2-21317ab83359",
                        "applicationId" : "eff7cb30-cff3-11ed-977d-f9a657c2c463",
                        "status" : "ISSUED",
                        "certificateOwnerUserId" : "b29cec90-cff1-11ed-97d2-21317ab83359",
                        "certificateIssuingTemplateId" : "e47ea120-cff3-11ed-9ece-cf965f609bfb",
                        "caOrderId" : "5b:f7:ff:02:86:d0:1f:ed:90:81:02:bb:5a:6b:8b:23:b8:0d:f7:e9",
                        "certificateIds" : [ "c6e89340-d279-11ed-861a-5154a94578eb", "602cec00-cff4-11ed-b7e2-bb3d5adf81ba", "602794d0-cff4-11ed-b7e2-bb3d5adf81ba" ],
                        "subjectDN" : "cn=localhost,ou=dev,o=Venafi,c=US,st=Utah,l=Salt Lake City",
                        "subjectCN" : "localhost",
                        "keyLength" : 4096,
                        "keyType" : "RSA",
                        "creationDate" : "2023-04-03T23:46:38.771+00:00",
                        "modificationDate" : "2023-04-03T23:46:38.890+00:00",
                        "subjectAlternativeNamesByType" : {
                          "dNSName" : [ "venafi.com" ]
                        },
                        "validityPeriod" : "P2M19D"
                      }, {
                        "id" : "253ae320-d27b-11ed-b5e4-151222cdc24b",
                        "companyId" : "b11fc270-cff1-11ed-97d2-21317ab83359",
                        "applicationId" : "eff7cb30-cff3-11ed-977d-f9a657c2c463",
                        "status" : "ISSUED",
                        "certificateOwnerUserId" : "b29cec90-cff1-11ed-97d2-21317ab83359",
                        "certificateIssuingTemplateId" : "e47ea120-cff3-11ed-9ece-cf965f609bfb",
                        "caOrderId" : "20:04:49:dc:de:54:2a:99:90:8f:d7:04:97:e2:69:39:2f:1a:04:7a",
                        "certificateIds" : [ "254bac00-d27b-11ed-861a-5154a94578eb", "602cec00-cff4-11ed-b7e2-bb3d5adf81ba", "602794d0-cff4-11ed-b7e2-bb3d5adf81ba" ],
                        "subjectDN" : "cn=venafi.cloud,ou=dev,o=Venafi,c=US,st=Utah,l=Salt Lake City",
                        "subjectCN" : "venafi.cloud",
                        "keyLength" : 4096,
                        "keyType" : "RSA",
                        "creationDate" : "2023-04-03T23:56:26.630+00:00",
                        "modificationDate" : "2023-04-03T23:56:26.748+00:00",
                        "subjectAlternativeNamesByType" : {
                          "dNSName" : [ "venafi.com" ]
                        },
                        "validityPeriod" : "P2M19D"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The request is either incomplete or malformed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "The request is either incomplete or malformed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/certificaterequests" : {
      "get" : {
        "tags" : [ "Certificate Request" ],
        "summary" : "Get the details of all certificate requests",
        "description" : "Retrieves the details of all certificate requests.",
        "operationId" : "certificaterequests_getAll",
        "responses" : {
          "200" : {
            "description" : "The response body contains the details of the certificate requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateRequestResponse"
                },
                "examples" : {
                  "All certificate requests details response" : {
                    "summary" : "All certificate requests details",
                    "description" : "All certificate requests details response",
                    "value" : {
                      "numFound" : 2,
                      "certificateRequests" : [ {
                        "id" : "a78e25a0-d279-11ed-b5e4-151222cdc24b",
                        "companyId" : "b11fc270-cff1-11ed-97d2-21317ab83359",
                        "applicationId" : "eff7cb30-cff3-11ed-977d-f9a657c2c463",
                        "status" : "ISSUED",
                        "certificateOwnerUserId" : "b29cec90-cff1-11ed-97d2-21317ab83359",
                        "certificateIssuingTemplateId" : "e47ea120-cff3-11ed-9ece-cf965f609bfb",
                        "caOrderId" : "41:29:e5:3f:44:4d:59:1a:58:f6:8f:a7:ab:39:5d:56:ae:8f:e3:37",
                        "certificateIds" : [ "a7a0ea50-d279-11ed-861a-5154a94578eb", "602cec00-cff4-11ed-b7e2-bb3d5adf81ba", "602794d0-cff4-11ed-b7e2-bb3d5adf81ba" ],
                        "subjectDN" : "cn=venafi.com,ou=dev,o=Venafi,c=US,st=Utah,l=Salt Lake City",
                        "subjectCN" : "venafi.com",
                        "keyLength" : 4096,
                        "keyType" : "RSA",
                        "creationDate" : "2023-04-03T23:45:46.278+00:00",
                        "modificationDate" : "2023-04-03T23:45:46.423+00:00",
                        "subjectAlternativeNamesByType" : {
                          "dNSName" : [ "venafi.com" ]
                        },
                        "validityPeriod" : "P2M19D"
                      }, {
                        "id" : "c6d8dbd0-d279-11ed-b5e4-151222cdc24b",
                        "companyId" : "b11fc270-cff1-11ed-97d2-21317ab83359",
                        "applicationId" : "eff7cb30-cff3-11ed-977d-f9a657c2c463",
                        "status" : "ISSUED",
                        "certificateOwnerUserId" : "b29cec90-cff1-11ed-97d2-21317ab83359",
                        "certificateIssuingTemplateId" : "e47ea120-cff3-11ed-9ece-cf965f609bfb",
                        "caOrderId" : "5b:f7:ff:02:86:d0:1f:ed:90:81:02:bb:5a:6b:8b:23:b8:0d:f7:e9",
                        "certificateIds" : [ "c6e89340-d279-11ed-861a-5154a94578eb", "602cec00-cff4-11ed-b7e2-bb3d5adf81ba", "602794d0-cff4-11ed-b7e2-bb3d5adf81ba" ],
                        "subjectDN" : "cn=localhost,ou=dev,o=Venafi,c=US,st=Utah,l=Salt Lake City",
                        "subjectCN" : "localhost",
                        "keyLength" : 4096,
                        "keyType" : "RSA",
                        "creationDate" : "2023-04-03T23:46:38.771+00:00",
                        "modificationDate" : "2023-04-03T23:46:38.890+00:00",
                        "subjectAlternativeNamesByType" : {
                          "dNSName" : [ "venafi.com" ]
                        },
                        "validityPeriod" : "P2M19D"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Certificate Request" ],
        "summary" : "Create a certificate request",
        "description" : "Creates a certificate request for the specified `applicationId` and using the specified `certificateIssuingTemplateId`.  Indicate a renewal by specifying `existingCertificateId`. Set `isVaaSGenerated` to true, specify `csrAttributes` to request a certificate using *Automated Secure Keypair*. The `validityPeriod` value must be in the ISO8601 format for time duration. Examples of ISO8601 format time duration include _P1Y_ for one year, _P10D_ for ten days, and _PT12H_ for twelve hours.",
        "operationId" : "certificaterequests_create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateRequestRequest"
              },
              "examples" : {
                "Certificate request's request" : {
                  "summary" : "Certificate request details",
                  "description" : "Certificate request's request",
                  "value" : {
                    "applicationId" : "b00701b0-886f-11ed-9f39-3d586ab80cf2",
                    "certificateIssuingTemplateId" : "a305d810-886f-11ed-9ccf-dbf748eb1ae0",
                    "existingCertificateId" : "b305d810-886f-11ed-9ccf-dbf748eb1ae0",
                    "apiClientInformation" : {
                      "type" : "Venafi VCert CLI",
                      "identifier" : "192.168.1.68"
                    },
                    "validityPeriod" : "PT2880H",
                    "certificateSigningRequest" : "-----BEGIN CERTIFICATE REQUEST-----\nMIIE2TCCAsECAQAwbDELMAkGA1UEBhMCVVMxDTALBgNVBAgTBFV0YWgxFzAVBgNV\nBAcTDlNhbHQgTGFrZSBDaXR5MQ8wDQYDVQQKEwZWZW5hZmkxDzANBgNVBAsTBmRl\ndm9wczETMBEGA1UEAxMKdmVuYWZpLmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIP\nADCCAgoCggIBAKSzq7hSn7on+YhRmt+4ojhfMzd/NVCIXaq+UG4wjyh5QqkZsGAK\n1u82gLvuZXc8i1iKStj5DnVEVBNAydynGztz+ZLaAGuIhx75yl36YrqIV3LyLjxc\nqZMsaJuZi2f0Lxy3bA8Huw/puNZwTBhJNcj2ov00FgGt7DTHdhl0z4nL5keADBMD\nIcYWcH+o2pHBEvDfjmE0yS9MYLQBcek1gKMPMGAjqj8VtbdwKdTQ6LYzkU34Vbp1\nHGD6lhwfkr5wlMnlNOoX658UnXNhgkulcZv3jS2hOhrJzhX6bEK8XvKQevv5d3Tu\nsdk74zyumoe4edwM6wkphjWtXGE4CVBWongzpG08zvDbzdkN31g/u+Isp2mJHfi/\n7rPySj6NzV14GOHnR16zwQB6cpEwzwPigl1lSL0Qv/xjysV0yFaRycZceT0TNj3b\n0ezgV+sSHXwI84IO+9hH5JXOn+llY3gniVxNbgdb8yK3tOPfT9ig3pW3Vcdh02XF\nocmP1/eM6/WYh+ipKqNXpvhW9jf56CEmVSg9sWzyqZ2rCj4i+JC/IxwxANy4vGuX\ny+XHkWJOMt7sSZaiOAel/TVEcA3XA0HV/hEPkakZK5blls2d5IyJUhvOZB1QxpDE\nECemCZ/ZsJR3Bao0JQNABhmnammMRQolfBE5z659+E4pXPIJP+a/UaRtAgMBAAGg\nKDAmBgkqhkiG9w0BCQ4xGTAXMBUGA1UdEQQOMAyCCnZlbmFmaS5jb20wDQYJKoZI\nhvcNAQELBQADggIBAH2oEcLdtRay+EPAky0ly/UM7pEFG9RCs1RoLqGMGeLurxqH\nPvzA7BayOp1TfkxxaLnGzTREFhnEJQhDMyOn52RDrOkHYEBj/hfqi2bKO+mXpJS8\n3n1Hn7H0+aqJXOguG9/L6jmEmEBDCBir8FJuSeHBnG+5A//pXWdivkyjjlY0XlZj\nJI4GqoFAFqDAY/8WFe5A7bEsiLu+vEVEgzhFyDXUYBkZ6DutpOA2cgMN0J+wDP2X\nAsd7KJY1QUB/JX/zUIW57aCHAyntfv+hQ0oDgQV4+p+gNHHrZNLrk9eYyHrqcQA+\n7bEfgbUWUMJjYw0YPwTM801rt/8wHBdOjFgpve6pnC1Xk3hY6i/RKRXCKnEgkloO\nyOc1/WQLVT5sq0hJSJ6JKHY0Z4ZhieiPpUM+CuQu7KBrxkp9DwV23Ttu7pA4FOz4\nAroLuwvVEdi16Hu61kR/BW5WDNvIUox4pttCx77+laTxjJZ+1owNRFtzyMBWi07d\n4p6Xp3WTPSp+rYEJwX3Z4bLKCZUCUkbBFEXMDheK4detAW0qHpE7YvJu0/FiTzVV\n76l+z9p1cI5l0+vKp2lx5pAp7mkiCvrUuBMl78eGE4UtNo1Aa3Y8ccUlC+wYr0+b\nrn7e5SYFU3hTt4nsGurfV5+YyQn0x0kjiS0g7zGGGchFGcVBaeZIDZijA54i\n-----END CERTIFICATE REQUEST-----\n",
                    "isVaaSGenerated" : false,
                    "csrAttributes" : {
                      "commonName" : "venafi.com",
                      "organization" : "Venafi",
                      "organizationalUnits" : [ "devops" ],
                      "locality" : "Salt Lake City",
                      "state" : "Utah",
                      "country" : "US",
                      "subjectAlternativeNamesByType" : {
                        "dnsNames" : [ "venafi.com" ]
                      },
                      "keyTypeParameters" : {
                        "keyType" : "RSA",
                        "keyLength" : 4096,
                        "keyCurve" : "P256"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "A certificate request has been created, and its details can be found in the response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateRequestResponse"
                },
                "examples" : {
                  "Certificate request response" : {
                    "summary" : "Certificate request details",
                    "description" : "Certificate request response",
                    "value" : {
                      "certificateRequests" : [ {
                        "id" : "4ce82070-d26e-11ed-b5e4-151222cdc24b",
                        "companyId" : "b11fc270-cff1-11ed-97d2-21317ab83359",
                        "applicationId" : "eff7cb30-cff3-11ed-977d-f9a657c2c463",
                        "creationDate" : "2023-04-03T22:24:29.739+00:00",
                        "modificationDate" : "2023-04-03T22:24:29.874+00:00",
                        "status" : "ISSUED",
                        "certificateOwnerUserId" : "b29cec90-cff1-11ed-97d2-21317ab83359",
                        "certificateIssuingTemplateId" : "e47ea120-cff3-11ed-9ece-cf965f609bfb",
                        "certificateIds" : [ "4cfbcf80-d26e-11ed-861a-5154a94578eb", "602794d0-cff4-11ed-b7e2-bb3d5adf81ba" ],
                        "certificateSigningRequest" : "-----BEGIN CERTIFICATE REQUEST-----\nMIIE2TCCAsECAQAwbDELMAkGA1UEBhMCVVMxDTALBgNVBAgTBFV0YWgxFzAVBgNV\nBAcTDlNhbHQgTGFrZSBDaXR5MQ8wDQYDVQQKEwZWZW5hZmkxDzANBgNVBAsTBmRl\ndm9wczETMBEGA1UEAxMKdmVuYWZpLmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIP\nADCCAgoCggIBAKSzq7hSn7on+YhRmt+4ojhfMzd/NVCIXaq+UG4wjyh5QqkZsGAK\n1u82gLvuZXc8i1iKStj5DnVEVBNAydynGztz+ZLaAGuIhx75yl36YrqIV3LyLjxc\nqZMsaJuZi2f0Lxy3bA8Huw/puNZwTBhJNcj2ov00FgGt7DTHdhl0z4nL5keADBMD\nIcYWcH+o2pHBEvDfjmE0yS9MYLQBcek1gKMPMGAjqj8VtbdwKdTQ6LYzkU34Vbp1\nHGD6lhwfkr5wlMnlNOoX658UnXNhgkulcZv3jS2hOhrJzhX6bEK8XvKQevv5d3Tu\nsdk74zyumoe4edwM6wkphjWtXGE4CVBWongzpG08zvDbzdkN31g/u+Isp2mJHfi/\n7rPySj6NzV14GOHnR16zwQB6cpEwzwPigl1lSL0Qv/xjysV0yFaRycZceT0TNj3b\n0ezgV+sSHXwI84IO+9hH5JXOn+llY3gniVxNbgdb8yK3tOPfT9ig3pW3Vcdh02XF\nocmP1/eM6/WYh+ipKqNXpvhW9jf56CEmVSg9sWzyqZ2rCj4i+JC/IxwxANy4vGuX\ny+XHkWJOMt7sSZaiOAel/TVEcA3XA0HV/hEPkakZK5blls2d5IyJUhvOZB1QxpDE\nECemCZ/ZsJR3Bao0JQNABhmnammMRQolfBE5z659+E4pXPIJP+a/UaRtAgMBAAGg\nKDAmBgkqhkiG9w0BCQ4xGTAXMBUGA1UdEQQOMAyCCnZlbmFmaS5jb20wDQYJKoZI\nhvcNAQELBQADggIBAH2oEcLdtRay+EPAky0ly/UM7pEFG9RCs1RoLqGMGeLurxqH\nPvzA7BayOp1TfkxxaLnGzTREFhnEJQhDMyOn52RDrOkHYEBj/hfqi2bKO+mXpJS8\n3n1Hn7H0+aqJXOguG9/L6jmEmEBDCBir8FJuSeHBnG+5A//pXWdivkyjjlY0XlZj\nJI4GqoFAFqDAY/8WFe5A7bEsiLu+vEVEgzhFyDXUYBkZ6DutpOA2cgMN0J+wDP2X\nAsd7KJY1QUB/JX/zUIW57aCHAyntfv+hQ0oDgQV4+p+gNHHrZNLrk9eYyHrqcQA+\n7bEfgbUWUMJjYw0YPwTM801rt/8wHBdOjFgpve6pnC1Xk3hY6i/RKRXCKnEgkloO\nyOc1/WQLVT5sq0hJSJ6JKHY0Z4ZhieiPpUM+CuQu7KBrxkp9DwV23Ttu7pA4FOz4\nAroLuwvVEdi16Hu61kR/BW5WDNvIUox4pttCx77+laTxjJZ+1owNRFtzyMBWi07d\n4p6Xp3WTPSp+rYEJwX3Z4bLKCZUCUkbBFEXMDheK4detAW0qHpE7YvJu0/FiTzVV\n76l+z9p1cI5l0+vKp2lx5pAp7mkiCvrUuBMl78eGE4UtNo1Aa3Y8ccUlC+wYr0+b\nrn7e5SYFU3hTt4nsGurfV5+YyQn0x0kjiS0g7zGGGchFGcVBaeZIDZijA54i\n-----END CERTIFICATE REQUEST-----\n",
                        "subjectDN" : "cn=venafi.com,ou=devops,o=Venafi,c=US,st=Utah,l=Salt Lake City",
                        "keyLength" : 4096,
                        "keyType" : "RSA",
                        "keyCurve" : "P256",
                        "subjectAlternativeNamesByType" : {
                          "dNSName" : [ "venafi.com" ]
                        },
                        "apiClientInformation" : {
                          "type" : "Venafi VCert CLI",
                          "identifier" : "192.168.1.68"
                        },
                        "validityPeriod" : "PT1920H"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The request is either incomplete or malformed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "The request is either incomplete or malformed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificaterequests/{id}" : {
      "get" : {
        "tags" : [ "Certificate Request" ],
        "summary" : "Get a certificate request's details",
        "description" : "Retrieves the details of the certificate request with the specified `id`.",
        "operationId" : "certificaterequests_getById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "UUID of a Certificate Request",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "UUID of a Certificate Request",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A certificate request has been found, and its details are in the response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateRequestInformation"
                },
                "examples" : {
                  "Certificate request details response" : {
                    "summary" : "Certificate request details",
                    "description" : "Certificate request details response",
                    "value" : {
                      "id" : "601e9420-cff4-11ed-9ece-cf965f609bfb",
                      "companyId" : "b11fc270-cff1-11ed-97d2-21317ab83359",
                      "applicationId" : "eff7cb30-cff3-11ed-977d-f9a657c2c463",
                      "creationDate" : "2023-03-31T18:46:41.039+00:00",
                      "modificationDate" : "2023-03-31T18:46:41.160+00:00",
                      "status" : "ISSUED",
                      "certificateOwnerUserId" : "b29cec90-cff1-11ed-97d2-21317ab83359",
                      "certificateIssuingTemplateId" : "e47ea120-cff3-11ed-9ece-cf965f609bfb",
                      "certificateIds" : [ "602fab20-cff4-11ed-b7e2-bb3d5adf81ba", "602794d0-cff4-11ed-b7e2-bb3d5adf81ba" ],
                      "certificateSigningRequest" : "-----BEGIN CERTIFICATE REQUEST-----\nMIIE1DCCArwCAQAwZzELMAkGA1UEBhMCTVgxEDAOBgNVBAgTB1l1Y2F0YW4xDzAN\nBgNVBAcTBk1lcmlkYTEPMA0GA1UEChMGdmVuYWZpMQ8wDQYDVQQLEwZkZXZvcHMx\nEzARBgNVBAMTCnZlbmFmaS5jb20wggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIK\nAoICAQC74YXA0Wj9xR6qjd46t/9Zt2KJj63hiZdIHhFKdnOweJ1JLL8EWihuC2kt\nSS6Fa6gU7kig7ktKTX70hmtsrh18h5a6zPWcne+pxnFlcYpmvJFp6loO8SWuvBIh\nHCSUMV+3Miak3xZi7cmgH1RFYJpwwZBQclGnJgyJeqCmqPu5TgA2wpvRFCmL5h10\nuXBBZI2b1Ia7F9J8t7dp6+k3cpm6st93WsEY/212rDF1S1eM3paUKGxhE2bk7jx+\n6LgqqzgRE0AoUUoNEC8Dc9tABQNPckDHETl8kg30Udur9KAPeMhoMfQ4pfK2kGx9\nkf5JmzO5LS/wALZydey03Sa+Ie4oeQG2i980rXmBkXLHNZkRoLZAbk7UQKF/n2Dz\n8CGBD3dYVjxn8czj+7iNrdBllloiJgQUjupBZF82IYUO6ghfxzPZRMl4E3ezT9AD\nndM8bGolZVYqzwcVRaSKlsva8HL9c6S5jfhFTxl+Uxn84GyPS1fh73c+cV9/NWFE\nuQF80iQ0I0XB9BKf2haYa5e0KOeM0gOIn/3oQPvIDy5wEVrV8LMOwGYWSSM87l9B\nEWEo2cjSQetQpjxtmY3WmZ0ghYVzLveUd3wbOmfBn6ahcW9pdVl0M/lcqcZM1UyT\nbxyL8eeUcG9eWHHXteJv6iIRyjBDM8jiXm9gdVKKL3sw9xIwXQIDAQABoCgwJgYJ\nKoZIhvcNAQkOMRkwFzAVBgNVHREEDjAMggp2ZW5hZmkuY29tMA0GCSqGSIb3DQEB\nCwUAA4ICAQB5jyiR+nzULt77rye33E6q7rAj8TwXl9yuFELT6YgigrAAAerUU2IU\n0hHZdc2WYfTT5sPc+WkZGXqbGZUOckkBpl++Ch4gpigj45ccoMZCdiMay8Xdbjte\nz+ixY4Jr1XTcjO67BG2xrKxFIOJh9nRMN1sdsowCGBUUeEMCuqudX5hs7eQNupcr\nyiNzyWyn/vWtsFVTdXmr9i40LBmcS/d2GYk+0/sHYQysO46Ff2xW7UXbNMnN2O4s\n8MN9vYmuGpEzXpUZZwU1UaE/bOSlwruLSRaoSh3PvXMEQeDrChklKgEiFb/wnQ2/\nsHI94QT1K63jW+vjfRDeRDTiF2+77P6dPQCTl+SaVcQ+76sLpyDE9P2SxCTv+TLS\nYVWy4DEBilf7Vu3NqAElclBVPLQNNsYALS79E1CPSp5McEWeAignL66ti/itSq7L\nm1YfIfSNdyJGyhxoZjL/qRjjYBzCwIHFvl3Qg8VzF3SIgSRyiTsrP9fcsfFQXrBB\nUMhhjWNTPaIf+v2/fgNYOU4G7dic+DyaNjNUB4FHwtD1f7rZ9cUhp103QVvm4vT6\nsjOjjJ1neovhvtnkekflZ/tYDimSLhFCeaQV0ioc2lk+08XuTZyJ9OyteL4lbCIT\nmVoJFSIz0mTgwv71K76+Jk+VX8je3szfF9aPsd1seTrMyaMtf+NJeA==\n-----END CERTIFICATE REQUEST-----\n",
                      "subjectDN" : "cn=venafi.com,ou=devops,o=venafi,c=MX,st=Yucatan,l=Merida",
                      "keyLength" : 4096,
                      "keyType" : "RSA",
                      "subjectAlternativeNamesByType" : {
                        "dNSName" : [ "venafi.com" ]
                      },
                      "apiClientInformation" : {
                        "type" : "Venafi VCert CLI",
                        "identifier" : "192.168.1.68"
                      },
                      "validityPeriod" : "PT288H"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The certificate request was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "The request is either incomplete or malformed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "The request is either incomplete or malformed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificaterequests/{id}/resubmission" : {
      "post" : {
        "tags" : [ "Certificate Request" ],
        "summary" : "Resubmit a certificate request",
        "description" : "Resubmits the certificate request that has the specified `id`.",
        "operationId" : "certificaterequests_resubmitById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "UUID of a Certificate Request",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "UUID of a Certificate Request",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateRequestResubmissionRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Certificate Request was resubmitted; details in response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateRequestResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Certificate Request not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificaterequests/validation" : {
      "post" : {
        "tags" : [ "Certificate Request" ],
        "summary" : "Validate a certificate request",
        "description" : "This operation validates a proposed certificate request without actually submitting it.Checks for compliance with the specified issuing template and verifies all other references are valid (e.g., `existingCertificateId` is the UUID of an inventory certificate).",
        "operationId" : "certificaterequests_validation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateRequestRequest"
              },
              "examples" : {
                "Certificate request validation request" : {
                  "summary" : "Certificate request validation",
                  "description" : "Certificate request validation request",
                  "value" : {
                    "applicationId" : "b00701b0-886f-11ed-9f39-3d586ab80ce2",
                    "certificateIssuingTemplateId" : "a305d810-886f-11ed-9ccf-dbf748eb1aa9",
                    "existingCertificateId" : "a14c9ea0-c370-11ed-8b33-b3654a9c754f",
                    "apiClientInformation" : {
                      "type" : "Venafi VCert CLI",
                      "identifier" : "192.168.1.68"
                    },
                    "certificateSigningRequest" : "-----BEGIN CERTIFICATE REQUEST-----\nMIIE2TCCAsECAQAwbDELMAkGA1UEBhMCVVMxDTALBgNVBAgTBFV0YWgxFzAVBgNV\nBAcTDlNhbHQgTGFrZSBDaXR5MQ8wDQYDVQQKEwZWZW5hZmkxDzANBgNVBAsTBmRl\ndm9wczETMBEGA1UEAxMKdmVuYWZpLmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIP\nADCCAgoCggIBAKSzq7hSn7on+YhRmt+4ojhfMzd/NVCIXaq+UG4wjyh5QqkZsGAK\n1u82gLvuZXc8i1iKStj5DnVEVBNAydynGztz+ZLaAGuIhx75yl36YrqIV3LyLjxc\nqZMsaJuZi2f0Lxy3bA8Huw/puNZwTBhJNcj2ov00FgGt7DTHdhl0z4nL5keADBMD\nIcYWcH+o2pHBEvDfjmE0yS9MYLQBcek1gKMPMGAjqj8VtbdwKdTQ6LYzkU34Vbp1\nHGD6lhwfkr5wlMnlNOoX658UnXNhgkulcZv3jS2hOhrJzhX6bEK8XvKQevv5d3Tu\nsdk74zyumoe4edwM6wkphjWtXGE4CVBWongzpG08zvDbzdkN31g/u+Isp2mJHfi/\n7rPySj6NzV14GOHnR16zwQB6cpEwzwPigl1lSL0Qv/xjysV0yFaRycZceT0TNj3b\n0ezgV+sSHXwI84IO+9hH5JXOn+llY3gniVxNbgdb8yK3tOPfT9ig3pW3Vcdh02XF\nocmP1/eM6/WYh+ipKqNXpvhW9jf56CEmVSg9sWzyqZ2rCj4i+JC/IxwxANy4vGuX\ny+XHkWJOMt7sSZaiOAel/TVEcA3XA0HV/hEPkakZK5blls2d5IyJUhvOZB1QxpDE\nECemCZ/ZsJR3Bao0JQNABhmnammMRQolfBE5z659+E4pXPIJP+a/UaRtAgMBAAGg\nKDAmBgkqhkiG9w0BCQ4xGTAXMBUGA1UdEQQOMAyCCnZlbmFmaS5jb20wDQYJKoZI\nhvcNAQELBQADggIBAH2oEcLdtRay+EPAky0ly/UM7pEFG9RCs1RoLqGMGeLurxqH\nPvzA7BayOp1TfkxxaLnGzTREFhnEJQhDMyOn52RDrOkHYEBj/hfqi2bKO+mXpJS8\n3n1Hn7H0+aqJXOguG9/L6jmEmEBDCBir8FJuSeHBnG+5A//pXWdivkyjjlY0XlZj\nJI4GqoFAFqDAY/8WFe5A7bEsiLu+vEVEgzhFyDXUYBkZ6DutpOA2cgMN0J+wDP2X\nAsd7KJY1QUB/JX/zUIW57aCHAyntfv+hQ0oDgQV4+p+gNHHrZNLrk9eYyHrqcQA+\n7bEfgbUWUMJjYw0YPwTM801rt/8wHBdOjFgpve6pnC1Xk3hY6i/RKRXCKnEgkloO\nyOc1/WQLVT5sq0hJSJ6JKHY0Z4ZhieiPpUM+CuQu7KBrxkp9DwV23Ttu7pA4FOz4\nAroLuwvVEdi16Hu61kR/BW5WDNvIUox4pttCx77+laTxjJZ+1owNRFtzyMBWi07d\n4p6Xp3WTPSp+rYEJwX3Z4bLKCZUCUkbBFEXMDheK4detAW0qHpE7YvJu0/FiTzVV\n76l+z9p1cI5l0+vKp2lx5pAp7mkiCvrUuBMl78eGE4UtNo1Aa3Y8ccUlC+wYr0+b\nrn7e5SYFU3hTt4nsGurfV5+YyQn0x0kjiS0g7zGGGchFGcVBaeZIDZijA54i\n-----END CERTIFICATE REQUEST-----\n",
                    "isVaaSGenerated" : false,
                    "csrAttributes" : {
                      "commonName" : "Venafi.com",
                      "organization" : "venafi",
                      "organizationalUnits" : [ "devops" ],
                      "locality" : "Merida",
                      "state" : "Yucatan",
                      "country" : "MX",
                      "subjectAlternativeNamesByType" : {
                        "dnsNames" : [ "localhost" ]
                      },
                      "keyTypeParameters" : {
                        "keyType" : "RSA",
                        "keyLength" : 2048,
                        "keyCurve" : "P256"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Certificate Request was validated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificationRequestInformation"
                },
                "examples" : {
                  "Certificate request validation details response" : {
                    "summary" : "Certificate request validation details",
                    "description" : "Certificate request validation details response",
                    "value" : {
                      "subjectDN" : "C=MX,ST=Yucatan,L=Merida,O=venafi,OU=devops,CN=Venafi.com",
                      "keyLength" : 2048,
                      "keyType" : "RSA",
                      "subjectAlternativeNamesByType" : {
                        "dNSName" : [ "localhost" ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificatesearch" : {
      "post" : {
        "tags" : [ "Certificates" ],
        "summary" : "Retrieve certificate data matching search criteria",
        "description" : "This endpoint retrieves certificate data according to specified search criteria based on commonly used field search parameters. Some examples are `signatureHashAlgorithm`, `validityEnd`, and `issuerCN`. For more information, see [common search parameters](https://docs.venafi.cloud/api/about-api-search-fields/).\n",
        "operationId" : "certificates_search_getByExpression",
        "parameters" : [ {
          "name" : "ownershipTree",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "excludeSupersededInstances",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Filter"
              },
              "examples" : {
                "Certificate search request by expression" : {
                  "summary" : "Certificate search by expression",
                  "description" : "Certificate search request by expression",
                  "value" : {
                    "ordering" : {
                      "orders" : [ {
                        "field" : "certificateName",
                        "direction" : "DESC"
                      } ]
                    },
                    "paging" : {
                      "pageSize" : 10,
                      "pageNumber" : 0
                    },
                    "expression" : {
                      "operator" : "AND",
                      "operands" : [ {
                        "field" : "certificateName",
                        "operator" : "EQ",
                        "value" : "venafi.cloud"
                      }, {
                        "field" : "certificateStatus",
                        "operator" : "EQ",
                        "value" : "RETIRED"
                      } ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Certificate response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateResponse"
                },
                "examples" : {
                  "Certificate details response" : {
                    "summary" : "Certificate details",
                    "description" : "Certificate details response",
                    "value" : {
                      "count" : 1,
                      "certificates" : [ {
                        "id" : "3fb83440-dfd8-11ed-b8ab-4788d83ace9f",
                        "companyId" : "2d558b30-da16-11ed-8e4f-8339a1bc8d58",
                        "managedCertificateId" : "3f3e7060-dfd8-11ed-8850-f18176fc5513",
                        "certificateRequestId" : "3f675520-dfd8-11ed-82b4-074391f91f8b",
                        "certificateAuthorityAccountId" : "2ed72220-da16-11ed-b080-e795c8859d29",
                        "fingerprint" : "F3CDE0F7539C331D9EF006092161EC8387320B4B",
                        "certificateName" : "venafi.cloud",
                        "issuerCertificateIds" : [ "73ff23b0-da21-11ed-befa-05892b4b966e", "73e38560-da21-11ed-befa-05892b4b966e" ],
                        "certificateStatus" : "RETIRED",
                        "statusModificationUserId" : "309e4d90-da16-11ed-8e4f-8339a1bc8d58",
                        "modificationDate" : "2023-04-24T17:36:04.451+00:00",
                        "statusModificationDate" : "2023-04-24T17:36:04.451+00:00",
                        "validityStart" : "2023-04-21T00:05:09.000+00:00",
                        "validityEnd" : "2023-07-10T00:05:39.000+00:00",
                        "selfSigned" : false,
                        "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                        "signatureHashAlgorithm" : "SHA256",
                        "encryptionType" : "RSA",
                        "keyStrength" : 4096,
                        "subjectKeyIdentifierHash" : "C1EBF01EB166455AAFB6B8D7EFB5CDF78E7A930B",
                        "authorityKeyIdentifierHash" : "27811CFCA803A90E617FA5D47441649608417DD4",
                        "serialNumber" : "173B8702B939C6E3FF702A1DE8386BF35A24A8B7",
                        "subjectDN" : "cn=venafi.cloud,ou=dev,o=Venafi,c=US,st=Utah,l=Salt Lake City",
                        "subjectCN" : [ "venafi.cloud" ],
                        "subjectO" : "Venafi",
                        "subjectOU" : [ "dev" ],
                        "subjectST" : "Utah",
                        "subjectL" : "Salt Lake City",
                        "subjectC" : "US",
                        "subjectAlternativeNamesByType" : {
                          "dNSName" : [ "venafi.com" ]
                        },
                        "subjectAlternativeNameDns" : [ "venafi.com" ],
                        "issuerDN" : "cn=Dedicated - Venafi Cloud Built-In Intermediate CA - G1,ou=Built-in,o=Venafi, Inc.,c=US",
                        "issuerCN" : [ "Dedicated - Venafi Cloud Built-In Intermediate CA - G1" ],
                        "issuerOU" : [ "Built-in" ],
                        "issuerC" : "US",
                        "keyUsage" : [ "digitalSignature", "keyEncipherment", "keyAgreement" ],
                        "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.1", "1.3.6.1.5.5.7.3.2" ],
                        "ocspNoCheck" : false,
                        "versionType" : "CURRENT",
                        "totalInstanceCount" : 1,
                        "totalActiveInstanceCount" : 0,
                        "instances" : [ {
                          "certificateInstanceId" : "3fba3010-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateId" : "3fb83440-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateSource" : "USER_PROVIDED",
                          "ipAddress" : "254.254.254.254",
                          "hostname" : " ",
                          "port" : 443,
                          "instanceChainValidationStatus" : [ ],
                          "modificationDate" : "2023-04-24T17:36:04.576+00:00",
                          "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ],
                          "deploymentStatus" : "SUPERSEDED"
                        } ],
                        "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ]
                      } ]
                    }
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateResponse"
                },
                "examples" : {
                  "Certificate details response" : {
                    "summary" : "Certificate details",
                    "description" : "Certificate details response",
                    "value" : {
                      "count" : 1,
                      "certificates" : [ {
                        "id" : "3fb83440-dfd8-11ed-b8ab-4788d83ace9f",
                        "companyId" : "2d558b30-da16-11ed-8e4f-8339a1bc8d58",
                        "managedCertificateId" : "3f3e7060-dfd8-11ed-8850-f18176fc5513",
                        "certificateRequestId" : "3f675520-dfd8-11ed-82b4-074391f91f8b",
                        "certificateAuthorityAccountId" : "2ed72220-da16-11ed-b080-e795c8859d29",
                        "fingerprint" : "F3CDE0F7539C331D9EF006092161EC8387320B4B",
                        "certificateName" : "venafi.cloud",
                        "issuerCertificateIds" : [ "73ff23b0-da21-11ed-befa-05892b4b966e", "73e38560-da21-11ed-befa-05892b4b966e" ],
                        "certificateStatus" : "RETIRED",
                        "statusModificationUserId" : "309e4d90-da16-11ed-8e4f-8339a1bc8d58",
                        "modificationDate" : "2023-04-24T17:36:04.451+00:00",
                        "statusModificationDate" : "2023-04-24T17:36:04.451+00:00",
                        "validityStart" : "2023-04-21T00:05:09.000+00:00",
                        "validityEnd" : "2023-07-10T00:05:39.000+00:00",
                        "selfSigned" : false,
                        "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                        "signatureHashAlgorithm" : "SHA256",
                        "encryptionType" : "RSA",
                        "keyStrength" : 4096,
                        "subjectKeyIdentifierHash" : "C1EBF01EB166455AAFB6B8D7EFB5CDF78E7A930B",
                        "authorityKeyIdentifierHash" : "27811CFCA803A90E617FA5D47441649608417DD4",
                        "serialNumber" : "173B8702B939C6E3FF702A1DE8386BF35A24A8B7",
                        "subjectDN" : "cn=venafi.cloud,ou=dev,o=Venafi,c=US,st=Utah,l=Salt Lake City",
                        "subjectCN" : [ "venafi.cloud" ],
                        "subjectO" : "Venafi",
                        "subjectOU" : [ "dev" ],
                        "subjectST" : "Utah",
                        "subjectL" : "Salt Lake City",
                        "subjectC" : "US",
                        "subjectAlternativeNamesByType" : {
                          "dNSName" : [ "venafi.com" ]
                        },
                        "subjectAlternativeNameDns" : [ "venafi.com" ],
                        "issuerDN" : "cn=Dedicated - Venafi Cloud Built-In Intermediate CA - G1,ou=Built-in,o=Venafi, Inc.,c=US",
                        "issuerCN" : [ "Dedicated - Venafi Cloud Built-In Intermediate CA - G1" ],
                        "issuerOU" : [ "Built-in" ],
                        "issuerC" : "US",
                        "keyUsage" : [ "digitalSignature", "keyEncipherment", "keyAgreement" ],
                        "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.1", "1.3.6.1.5.5.7.3.2" ],
                        "ocspNoCheck" : false,
                        "versionType" : "CURRENT",
                        "totalInstanceCount" : 1,
                        "totalActiveInstanceCount" : 0,
                        "instances" : [ {
                          "certificateInstanceId" : "3fba3010-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateId" : "3fb83440-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateSource" : "USER_PROVIDED",
                          "ipAddress" : "254.254.254.254",
                          "hostname" : " ",
                          "port" : 443,
                          "instanceChainValidationStatus" : [ ],
                          "modificationDate" : "2023-04-24T17:36:04.576+00:00",
                          "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ],
                          "deploymentStatus" : "SUPERSEDED"
                        } ],
                        "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ]
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificates" : {
      "get" : {
        "tags" : [ "Certificates" ],
        "summary" : "Retrieve all certificate data",
        "description" : "This endpoint allows you to retrieve all your certificates according to a specified criteria. This API provides a quick way to gather certificate details in order to install the certificates where they are needed.\n\nUse the `subject` query parameter to limit the search based on the certificate subject common name.",
        "operationId" : "certificates_getAll",
        "parameters" : [ {
          "name" : "ownershipTree",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "excludeSupersededInstances",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "subject",
          "in" : "query",
          "description" : "Ability to enter regular expression to match specific criteria.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Indicates the maximum integer number of certificates returned.",
          "schema" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "number",
            "default" : 1000
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Certificate(s) response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateResponse"
                },
                "examples" : {
                  "Certificates details response" : {
                    "summary" : "Certificates details",
                    "description" : "Certificates details response",
                    "value" : {
                      "count" : 2,
                      "certificates" : [ {
                        "id" : "3fb83440-dfd8-11ed-b8ab-4788d83ace9f",
                        "companyId" : "2d558b30-da16-11ed-8e4f-8339a1bc8d58",
                        "managedCertificateId" : "3f3e7060-dfd8-11ed-8850-f18176fc5513",
                        "certificateRequestId" : "3f675520-dfd8-11ed-82b4-074391f91f8b",
                        "certificateAuthorityAccountId" : "2ed72220-da16-11ed-b080-e795c8859d29",
                        "fingerprint" : "F3CDE0F7539C331D9EF006092161EC8387320B4B",
                        "certificateName" : "venafi.cloud",
                        "issuerCertificateIds" : [ "73ff23b0-da21-11ed-befa-05892b4b966e", "73e38560-da21-11ed-befa-05892b4b966e" ],
                        "certificateStatus" : "ACTIVE",
                        "modificationDate" : "2023-04-21T00:05:39.397+00:00",
                        "validityStart" : "2023-04-21T00:05:09.000+00:00",
                        "validityEnd" : "2023-07-10T00:05:39.000+00:00",
                        "selfSigned" : false,
                        "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                        "signatureHashAlgorithm" : "SHA256",
                        "encryptionType" : "RSA",
                        "keyStrength" : 4096,
                        "subjectKeyIdentifierHash" : "C1EBF01EB166455AAFB6B8D7EFB5CDF78E7A930B",
                        "authorityKeyIdentifierHash" : "27811CFCA803A90E617FA5D47441649608417DD4",
                        "serialNumber" : "173B8702B939C6E3FF702A1DE8386BF35A24A8B7",
                        "subjectDN" : "cn=venafi.cloud,ou=dev,o=Venafi,c=US,st=Utah,l=Salt Lake City",
                        "subjectCN" : [ "venafi.cloud" ],
                        "subjectO" : "Venafi",
                        "subjectOU" : [ "dev" ],
                        "subjectST" : "Utah",
                        "subjectL" : "Salt Lake City",
                        "subjectC" : "US",
                        "subjectAlternativeNamesByType" : {
                          "dNSName" : [ "venafi.com" ]
                        },
                        "subjectAlternativeNameDns" : [ "venafi.com" ],
                        "issuerDN" : "cn=Dedicated - Venafi Cloud Built-In Intermediate CA - G1,ou=Built-in,o=Venafi, Inc.,c=US",
                        "issuerCN" : [ "Dedicated - Venafi Cloud Built-In Intermediate CA - G1" ],
                        "issuerOU" : [ "Built-in" ],
                        "issuerC" : "US",
                        "keyUsage" : [ "digitalSignature", "keyEncipherment", "keyAgreement" ],
                        "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.1", "1.3.6.1.5.5.7.3.2" ],
                        "ocspNoCheck" : false,
                        "versionType" : "CURRENT",
                        "totalInstanceCount" : 1,
                        "totalActiveInstanceCount" : 0,
                        "instances" : [ {
                          "certificateInstanceId" : "3fba3010-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateId" : "3fb83440-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateSource" : "USER_PROVIDED",
                          "ipAddress" : "254.254.254.254",
                          "hostname" : "",
                          "port" : 443,
                          "modificationDate" : "2023-04-21T00:05:39.397+00:00",
                          "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ],
                          "deploymentStatus" : "SUPERSEDED"
                        } ],
                        "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ]
                      }, {
                        "id" : "568a0810-dfd8-11ed-b8ab-4788d83ace9f",
                        "companyId" : "2d558b30-da16-11ed-8e4f-8339a1bc8d58",
                        "managedCertificateId" : "5677dfa0-dfd8-11ed-8850-f18176fc5513",
                        "certificateRequestId" : "567c4c70-dfd8-11ed-82b4-074391f91f8b",
                        "certificateAuthorityAccountId" : "2ed72220-da16-11ed-b080-e795c8859d29",
                        "fingerprint" : "E8635EE689F6DB249CAA284FD8DDE7E09DEE6F00",
                        "certificateName" : "venafi.cloud",
                        "issuerCertificateIds" : [ "73ff23b0-da21-11ed-befa-05892b4b966e", "73e38560-da21-11ed-befa-05892b4b966e" ],
                        "certificateStatus" : "ACTIVE",
                        "modificationDate" : "2023-04-21T00:06:17.669+00:00",
                        "validityStart" : "2023-04-21T00:05:47.000+00:00",
                        "validityEnd" : "2023-07-10T00:06:17.000+00:00",
                        "selfSigned" : false,
                        "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                        "signatureHashAlgorithm" : "SHA256",
                        "encryptionType" : "RSA",
                        "keyStrength" : 4096,
                        "subjectKeyIdentifierHash" : "ACCCCB504BF86D1FD94F6D9DA2230A2B454EB5FC",
                        "authorityKeyIdentifierHash" : "27811CFCA803A90E617FA5D47441649608417DD4",
                        "serialNumber" : "6CC8CB1433B57D10353284EEC09E5D2D2153F4DC",
                        "subjectDN" : "cn=venafi.cloud,ou=qa,o=Venafi,c=US,st=Utah,l=Salt Lake City",
                        "subjectCN" : [ "venafi.cloud" ],
                        "subjectO" : "Venafi",
                        "subjectOU" : [ "qa" ],
                        "subjectST" : "Utah",
                        "subjectL" : "Salt Lake City",
                        "subjectC" : "US",
                        "subjectAlternativeNamesByType" : {
                          "dNSName" : [ "venafi.cloud" ]
                        },
                        "subjectAlternativeNameDns" : [ "venafi.cloud" ],
                        "issuerDN" : "cn=Dedicated - Venafi Cloud Built-In Intermediate CA - G1,ou=Built-in,o=Venafi, Inc.,c=US",
                        "issuerCN" : [ "Dedicated - Venafi Cloud Built-In Intermediate CA - G1" ],
                        "issuerOU" : [ "Built-in" ],
                        "issuerC" : "US",
                        "keyUsage" : [ "digitalSignature", "keyEncipherment", "keyAgreement" ],
                        "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.1", "1.3.6.1.5.5.7.3.2" ],
                        "ocspNoCheck" : false,
                        "versionType" : "CURRENT",
                        "totalInstanceCount" : 1,
                        "totalActiveInstanceCount" : 0,
                        "instances" : [ {
                          "certificateInstanceId" : "568af270-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateId" : "568a0810-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateSource" : "USER_PROVIDED",
                          "ipAddress" : "254.254.254.254",
                          "hostname" : " ",
                          "port" : 443,
                          "instanceChainValidationStatus" : [ ],
                          "modificationDate" : "2023-04-21T00:06:17.669+00:00",
                          "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ],
                          "deploymentStatus" : "SUPERSEDED"
                        } ],
                        "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ]
                      } ]
                    }
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateResponse"
                },
                "examples" : {
                  "Certificates details response" : {
                    "summary" : "Certificates details",
                    "description" : "Certificates details response",
                    "value" : {
                      "count" : 2,
                      "certificates" : [ {
                        "id" : "3fb83440-dfd8-11ed-b8ab-4788d83ace9f",
                        "companyId" : "2d558b30-da16-11ed-8e4f-8339a1bc8d58",
                        "managedCertificateId" : "3f3e7060-dfd8-11ed-8850-f18176fc5513",
                        "certificateRequestId" : "3f675520-dfd8-11ed-82b4-074391f91f8b",
                        "certificateAuthorityAccountId" : "2ed72220-da16-11ed-b080-e795c8859d29",
                        "fingerprint" : "F3CDE0F7539C331D9EF006092161EC8387320B4B",
                        "certificateName" : "venafi.cloud",
                        "issuerCertificateIds" : [ "73ff23b0-da21-11ed-befa-05892b4b966e", "73e38560-da21-11ed-befa-05892b4b966e" ],
                        "certificateStatus" : "ACTIVE",
                        "modificationDate" : "2023-04-21T00:05:39.397+00:00",
                        "validityStart" : "2023-04-21T00:05:09.000+00:00",
                        "validityEnd" : "2023-07-10T00:05:39.000+00:00",
                        "selfSigned" : false,
                        "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                        "signatureHashAlgorithm" : "SHA256",
                        "encryptionType" : "RSA",
                        "keyStrength" : 4096,
                        "subjectKeyIdentifierHash" : "C1EBF01EB166455AAFB6B8D7EFB5CDF78E7A930B",
                        "authorityKeyIdentifierHash" : "27811CFCA803A90E617FA5D47441649608417DD4",
                        "serialNumber" : "173B8702B939C6E3FF702A1DE8386BF35A24A8B7",
                        "subjectDN" : "cn=venafi.cloud,ou=dev,o=Venafi,c=US,st=Utah,l=Salt Lake City",
                        "subjectCN" : [ "venafi.cloud" ],
                        "subjectO" : "Venafi",
                        "subjectOU" : [ "dev" ],
                        "subjectST" : "Utah",
                        "subjectL" : "Salt Lake City",
                        "subjectC" : "US",
                        "subjectAlternativeNamesByType" : {
                          "dNSName" : [ "venafi.com" ]
                        },
                        "subjectAlternativeNameDns" : [ "venafi.com" ],
                        "issuerDN" : "cn=Dedicated - Venafi Cloud Built-In Intermediate CA - G1,ou=Built-in,o=Venafi, Inc.,c=US",
                        "issuerCN" : [ "Dedicated - Venafi Cloud Built-In Intermediate CA - G1" ],
                        "issuerOU" : [ "Built-in" ],
                        "issuerC" : "US",
                        "keyUsage" : [ "digitalSignature", "keyEncipherment", "keyAgreement" ],
                        "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.1", "1.3.6.1.5.5.7.3.2" ],
                        "ocspNoCheck" : false,
                        "versionType" : "CURRENT",
                        "totalInstanceCount" : 1,
                        "totalActiveInstanceCount" : 0,
                        "instances" : [ {
                          "certificateInstanceId" : "3fba3010-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateId" : "3fb83440-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateSource" : "USER_PROVIDED",
                          "ipAddress" : "254.254.254.254",
                          "hostname" : "",
                          "port" : 443,
                          "modificationDate" : "2023-04-21T00:05:39.397+00:00",
                          "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ],
                          "deploymentStatus" : "SUPERSEDED"
                        } ],
                        "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ]
                      }, {
                        "id" : "568a0810-dfd8-11ed-b8ab-4788d83ace9f",
                        "companyId" : "2d558b30-da16-11ed-8e4f-8339a1bc8d58",
                        "managedCertificateId" : "5677dfa0-dfd8-11ed-8850-f18176fc5513",
                        "certificateRequestId" : "567c4c70-dfd8-11ed-82b4-074391f91f8b",
                        "certificateAuthorityAccountId" : "2ed72220-da16-11ed-b080-e795c8859d29",
                        "fingerprint" : "E8635EE689F6DB249CAA284FD8DDE7E09DEE6F00",
                        "certificateName" : "venafi.cloud",
                        "issuerCertificateIds" : [ "73ff23b0-da21-11ed-befa-05892b4b966e", "73e38560-da21-11ed-befa-05892b4b966e" ],
                        "certificateStatus" : "ACTIVE",
                        "modificationDate" : "2023-04-21T00:06:17.669+00:00",
                        "validityStart" : "2023-04-21T00:05:47.000+00:00",
                        "validityEnd" : "2023-07-10T00:06:17.000+00:00",
                        "selfSigned" : false,
                        "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                        "signatureHashAlgorithm" : "SHA256",
                        "encryptionType" : "RSA",
                        "keyStrength" : 4096,
                        "subjectKeyIdentifierHash" : "ACCCCB504BF86D1FD94F6D9DA2230A2B454EB5FC",
                        "authorityKeyIdentifierHash" : "27811CFCA803A90E617FA5D47441649608417DD4",
                        "serialNumber" : "6CC8CB1433B57D10353284EEC09E5D2D2153F4DC",
                        "subjectDN" : "cn=venafi.cloud,ou=qa,o=Venafi,c=US,st=Utah,l=Salt Lake City",
                        "subjectCN" : [ "venafi.cloud" ],
                        "subjectO" : "Venafi",
                        "subjectOU" : [ "qa" ],
                        "subjectST" : "Utah",
                        "subjectL" : "Salt Lake City",
                        "subjectC" : "US",
                        "subjectAlternativeNamesByType" : {
                          "dNSName" : [ "venafi.cloud" ]
                        },
                        "subjectAlternativeNameDns" : [ "venafi.cloud" ],
                        "issuerDN" : "cn=Dedicated - Venafi Cloud Built-In Intermediate CA - G1,ou=Built-in,o=Venafi, Inc.,c=US",
                        "issuerCN" : [ "Dedicated - Venafi Cloud Built-In Intermediate CA - G1" ],
                        "issuerOU" : [ "Built-in" ],
                        "issuerC" : "US",
                        "keyUsage" : [ "digitalSignature", "keyEncipherment", "keyAgreement" ],
                        "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.1", "1.3.6.1.5.5.7.3.2" ],
                        "ocspNoCheck" : false,
                        "versionType" : "CURRENT",
                        "totalInstanceCount" : 1,
                        "totalActiveInstanceCount" : 0,
                        "instances" : [ {
                          "certificateInstanceId" : "568af270-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateId" : "568a0810-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateSource" : "USER_PROVIDED",
                          "ipAddress" : "254.254.254.254",
                          "hostname" : " ",
                          "port" : 443,
                          "instanceChainValidationStatus" : [ ],
                          "modificationDate" : "2023-04-21T00:06:17.669+00:00",
                          "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ],
                          "deploymentStatus" : "SUPERSEDED"
                        } ],
                        "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ]
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Certificates" ],
        "summary" : "Import a set of raw certificates",
        "description" : "Adds to the inventory one or more certificates to the inventory.the certificates are specified in raw base64-encoded format (PEM without header/footer). Chain CA certificates are optional but may be provided using `issuerCertificates`.",
        "operationId" : "certificateimports_create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateImportRequest"
              },
              "examples" : {
                "Certificate import request" : {
                  "summary" : "Certificate Import",
                  "description" : "Certificate import request",
                  "value" : {
                    "certificates" : [ {
                      "certificate" : "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUlKekNDQmcrZ0F3SUJBZ0lVWlM1bm5PMEZDemowN3lyYkpyUXZzRTVDbDNBd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1hURUxNQWtHQTFVRUJoTUNWVk14TURBdUJnTlZCQW9NSjBoNVpISmhiblJKUkNBb1FYWmhiR0Z1WTJobApJRU5zYjNWa0lFTnZjbkJ2Y21GMGFXOXVLVEVjTUJvR0ExVUVBd3dUU0hsa2NtRnVkRWxFSUZOVFRDQkRRU0JICk16QWVGdzB5TWpBME1qZ3dOVEE0TURCYUZ3MHlNekEwTWpnd05URTNNREJhTUdZeEN6QUpCZ05WQkFZVEFsVlQKTVEwd0N3WURWUVFJREFSVmRHRm9NUmN3RlFZRFZRUUhEQTVUWVd4MElFeGhhMlVnUTJsMGVURVZNQk1HQTFVRQpDZ3dNVm1WdVlXWnBMQ0JKYm1NdU1SZ3dGZ1lEVlFRRERBOWtiMk56TG5abGJtRm1hUzVqYjIwd2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFESTdpYW9yK2U1VFlEQmZwR0tvOCs1eGc0a2F4aWQKUld5a0NDWDloOG04SGU4cU1iTDBNWHk5K2FVYlIxRHFZQVhqU1lBQWx0YzBPS0FvNGY4K0laU3hVY0tNSkpRNAo3UzlPZjhBOW43cU85cVB2RTZzYjltMXovQnZlRWhlYjVBbDNyWEFnWFd0OTE1YTlaV0lCcjRlWHNLeVFYZGJhCk9WVG9SeUVGMndma0UzZVlTdThXckFGSXZPcFl5RExKampENXV3UHpGNGp4eXFvSWh5eVpDU2tnUDl2TVc2Zk8KbXhRdGhST2JaOEJyaTdlQm5EaWgvNyt6YTVXTk1wNm13Q3pDdjJsYWVBc3hHMVJnYnBwZjY4dnBFV1B3ZUh3cwp2VUk0ODFsMUtLUjgwSkZId2UycDJHNDE0Mzk0ZVNnNlVOR0NoZEtrQ3N0bkJadzgvbGxpbzZQVkFnTUJBQUdqCmdnUFVNSUlEMERBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRk15aTh6aXQ5c1ZVSnpKR3hUbGYKU1hJVEU0QjVNSHdHQ0NzR0FRVUZCd0VCQkhBd2JqQkFCZ2dyQmdFRkJRY3dBb1kwYUhSMGNEb3ZMM1J5ZFhOMApMbkYxYjNaaFpHbHpaMnh2WW1Gc0xtTnZiUzlvZVdSeVlXNTBhV1J6YzJ4allXY3pMbU55ZERBcUJnZ3JCZ0VGCkJRY3dBWVllYUhSMGNEb3ZMMjlqYzNBdWNYVnZkbUZrYVhObmJHOWlZV3d1WTI5dE1EUUdBMVVkRVFRdE1DdUMKRDJSdlkzTXVkbVZ1WVdacExtTnZiWUlZWkc5amRXMWxiblJoZEdsdmJpNTJaVzVoWm1rdVkyOXRNRjRHQTFVZApJQVJYTUZVd0NBWUdaNEVNQVFJQ01Fa0dEQ3NHQVFRQnZsZ0FBNGNFQURBNU1EY0dDQ3NHQVFVRkJ3SUJGaXRvCmRIUndPaTh2ZDNkM0xtaDVaSEpoYm5ScFpDNWpiMjB2YzNWd2NHOXlkQzl5WlhCdmMybDBiM0o1TUIwR0ExVWQKSlFRV01CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEJEQmdOVkhSOEVQREE2TURpZ05xQTBoakpvZEhSdwpPaTh2WTNKc0xuRjFiM1poWkdseloyeHZZbUZzTG1OdmJTOW9lV1J5WVc1MGFXUnpjMnhqWVdjekxtTnliREFkCkJnTlZIUTRFRmdRVXlZSWc4WTVMUnMrZDFyblBuUWVZRXVLb2FqQXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01JSUIKOWdZS0t3WUJCQUhXZVFJRUFnU0NBZVlFZ2dIaUFlQUFkZ0N6YzNjSDRZUlErR09HMWdXcDNCRUpTbmt0c1djTQpDNGZjOEFNT2VUYWxtZ0FBQVlCdW1zNjlBQUFFQXdCSE1FVUNJQVROQmM5ZFBZaVl2SnVGcmxFVzh6ZzNSNnhJClJsUG1BWHhMNlpsa21TNVJBaUVBa241TGQzLzR5MzZLa2R6MzBMb25EQThuSWY0Y1NpY09JdzFrRXQ2dUduY0EKZGdCNk1veFUyTGN0dGlEcU9PQlNIdW1FRm5BeUU0Vk5POUlyd1RwWG8xTHJVZ0FBQVlCdW10RzRBQUFFQXdCSApNRVVDSUF2MURBNjdsY25KZDNpNE5XRVp0ckVOUzlxYVhLb3k2V2tmOUY0SFV3cVhBaUVBOEUwWDlmQW9EcGkvCk9QVnkzL05RdU9OcnFnR08wU0FGaFl5OW41LzY5L0VBZGdDdDk3NzZmUDhReUl1ZFBad2VQaGhxdEdjcFhjK3gKRENUS2hZWTA2OXlDaWdBQUFZQnVtczF2QUFBRUF3QkhNRVVDSVFDUEtjT05jcGVBVjZPSkRLRzhxbW1ic1NUZwo1K25CL09DQ3lOOWRwOFptc2dJZ1lmVVBEL3FrMEdmQkY0dTlVNC9taFo4c1k1b2c1dWZwQjdPRENwd2kwMm9BCmRnQTF6eGtidjdGc1Y3OFByVXh0UXN1N3RpY2dKbEhxUCtFcTc2Z0R3enZXVEFBQUFZQnVtczllQUFBRUF3QkgKTUVVQ0lHQ3owUjR6bUFkc3FXWTBRRVVMc283REpRbEdGanMyS2sxY1g3a3Q3WlcwQWlFQXVuUkRQTENEcG1qNApnQUhSYy9vb1J1c0VNMXdwYXdRQWdJUE14UVk0eUhVd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFDYTZnWDBxCjF0V3k5dlFTeGJPSjl4UFNtY3hYN3RjdkhsbEtjWDRoc1dWaVgxS0EvZlJhblBTNFlHOTd6QnQ0aWZEOWNXaTYKcjBzNWpjTUxwcEhENm04WkxDVkNzZjY3Qnk5WUNWUW04dCtoNFI2YS9DZnJBNWUvaU1wZjhwMVhCS0tjNmZTNgpna0QwSjRDejNyZ2RseGdTWWZONi9HaXVDQk02NHRsTllHWWhXNHF2WEp2R3ZWUjJCeXg2cDNvVlJPbG5TUk5UCmFkTkg5bURHN3R6RzErTW1TMmh3YU5aT04waVNYR2dTTXU0M2thSkhCdllEb2lzL2w1MzBxcEV3R2dLTnlyNncKV2lHWEQ1bEVQUmVvRmh5UWZqWFpxajg5RlIxMGdsSHpudTNCaitEcjFldUp3cytxZWpZc0JHQ3krcDJFTURDcgo0ZUdjUWFZWGIzR1lpOHpnQU9laTRGSFlHQlZ3UU5zeFpPN29EOXZlZmRYQnMxVmxYNU8yYmhldVdpUnd6ZnJjClJEZlc4dGhzWmpxMmpScHEzMXBVWjBIUEJhUjFmaDNSSUFhNTFISTJ6RnVUWWV1V29BcHhiUUoyVjZUZ2UzQkoKSVhQWUkwVnJZQWhvcDZIdHl3RThvRFpvZjZOUHBlSmhJeS96Q0tHTVZLZVJob2FscmtrNnR1emNFL1RQbm1wNApjZXV2T0JNZjZpSlM0S1ZTWGFpeERNSlNRMnJjMnJoS2htaHliQnBveDkyclZ5bWdENEdYckdVZFkvZUVQb2FoCmtyYWVzQlA3cjlXZ09xR2ptNFJKaGZkV29tZHFpSTkzQTBBalZna1BZQ1hpOXp3UGNKS2pkai95b09WSStmQnUKQzJ5YXF4UEJCeGZKZVp2OHpMRVAwbjFKdHRpaFVkcXpaeHJCCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                      "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ],
                      "apiClientInformation" : {
                        "type" : "Venafi VCert CLI",
                        "identifier" : "192.168.1.63"
                      },
                      "certificateUsageMetadata" : [ {
                        "appName" : "venafi app1",
                        "nodeName" : "venafi node 007",
                        "automationMetadata" : "automation data 008"
                      } ]
                    } ],
                    "overrideBlocklist" : true
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Certificates were imported; details in response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateImportResponse"
                },
                "examples" : {
                  "Certificate import response" : {
                    "summary" : "Certificate import",
                    "description" : "Certificate import response",
                    "value" : {
                      "certificateInformations" : [ {
                        "id" : "4d4e1c30-e2eb-11ed-a644-4fab0ea00b60",
                        "managedCertificateId" : "4d515080-e2eb-11ed-aed6-79d407efea73",
                        "companyId" : "2d558b30-da16-11ed-8e4f-8339a1bc8d58",
                        "fingerprint" : "D9D4965F9A116D457FA43FF23605CFCB5277BE38",
                        "base64Certificate" : "MIIIJzCCBg+gAwIBAgIUZS5nnO0FCzj07yrbJrQvsE5Cl3AwDQYJKoZIhvcNAQELBQAwXTELMAkGA1UEBhMCVVMxMDAuBgNVBAoMJ0h5ZHJhbnRJRCAoQXZhbGFuY2hlIENsb3VkIENvcnBvcmF0aW9uKTEcMBoGA1UEAwwTSHlkcmFudElEIFNTTCBDQSBHMzAeFw0yMjA0MjgwNTA4MDBaFw0yMzA0MjgwNTE3MDBaMGYxCzAJBgNVBAYTAlVTMQ0wCwYDVQQIDARVdGFoMRcwFQYDVQQHDA5TYWx0IExha2UgQ2l0eTEVMBMGA1UECgwMVmVuYWZpLCBJbmMuMRgwFgYDVQQDDA9kb2NzLnZlbmFmaS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDI7iaor+e5TYDBfpGKo8+5xg4kaxidRWykCCX9h8m8He8qMbL0MXy9+aUbR1DqYAXjSYAAltc0OKAo4f8+IZSxUcKMJJQ47S9Of8A9n7qO9qPvE6sb9m1z/BveEheb5Al3rXAgXWt915a9ZWIBr4eXsKyQXdbaOVToRyEF2wfkE3eYSu8WrAFIvOpYyDLJjjD5uwPzF4jxyqoIhyyZCSkgP9vMW6fOmxQthRObZ8Bri7eBnDih/7+za5WNMp6mwCzCv2laeAsxG1Rgbppf68vpEWPweHwsvUI481l1KKR80JFHwe2p2G414394eSg6UNGChdKkCstnBZw8/llio6PVAgMBAAGjggPUMIID0DAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFMyi8zit9sVUJzJGxTlfSXITE4B5MHwGCCsGAQUFBwEBBHAwbjBABggrBgEFBQcwAoY0aHR0cDovL3RydXN0LnF1b3ZhZGlzZ2xvYmFsLmNvbS9oeWRyYW50aWRzc2xjYWczLmNydDAqBggrBgEFBQcwAYYeaHR0cDovL29jc3AucXVvdmFkaXNnbG9iYWwuY29tMDQGA1UdEQQtMCuCD2RvY3MudmVuYWZpLmNvbYIYZG9jdW1lbnRhdGlvbi52ZW5hZmkuY29tMF4GA1UdIARXMFUwCAYGZ4EMAQICMEkGDCsGAQQBvlgAA4cEADA5MDcGCCsGAQUFBwIBFitodHRwOi8vd3d3Lmh5ZHJhbnRpZC5jb20vc3VwcG9ydC9yZXBvc2l0b3J5MB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATBDBgNVHR8EPDA6MDigNqA0hjJodHRwOi8vY3JsLnF1b3ZhZGlzZ2xvYmFsLmNvbS9oeWRyYW50aWRzc2xjYWczLmNybDAdBgNVHQ4EFgQUyYIg8Y5LRs+d1rnPnQeYEuKoajAwDgYDVR0PAQH/BAQDAgWgMIIB9gYKKwYBBAHWeQIEAgSCAeYEggHiAeAAdgCzc3cH4YRQ+GOG1gWp3BEJSnktsWcMC4fc8AMOeTalmgAAAYBums69AAAEAwBHMEUCIATNBc9dPYiYvJuFrlEW8zg3R6xIRlPmAXxL6ZlkmS5RAiEAkn5Ld3/4y36Kkdz30LonDA8nIf4cSicOIw1kEt6uGncAdgB6MoxU2LcttiDqOOBSHumEFnAyE4VNO9IrwTpXo1LrUgAAAYBumtG4AAAEAwBHMEUCIAv1DA67lcnJd3i4NWEZtrENS9qaXKoy6Wkf9F4HUwqXAiEA8E0X9fAoDpi/OPVy3/NQuONrqgGO0SAFhYy9n5/69/EAdgCt9776fP8QyIudPZwePhhqtGcpXc+xDCTKhYY069yCigAAAYBums1vAAAEAwBHMEUCIQCPKcONcpeAV6OJDKG8qmmbsSTg5+nB/OCCyN9dp8ZmsgIgYfUPD/qk0GfBF4u9U4/mhZ8sY5og5ufpB7ODCpwi02oAdgA1zxkbv7FsV78PrUxtQsu7ticgJlHqP+Eq76gDwzvWTAAAAYBums9eAAAEAwBHMEUCIGCz0R4zmAdsqWY0QEULso7DJQlGFjs2Kk1cX7kt7ZW0AiEAunRDPLCDpmj4gAHRc/ooRusEM1wpawQAgIPMxQY4yHUwDQYJKoZIhvcNAQELBQADggIBACa6gX0q1tWy9vQSxbOJ9xPSmcxX7tcvHllKcX4hsWViX1KA/fRanPS4YG97zBt4ifD9cWi6r0s5jcMLppHD6m8ZLCVCsf67By9YCVQm8t+h4R6a/CfrA5e/iMpf8p1XBKKc6fS6gkD0J4Cz3rgdlxgSYfN6/GiuCBM64tlNYGYhW4qvXJvGvVR2Byx6p3oVROlnSRNTadNH9mDG7tzG1+MmS2hwaNZON0iSXGgSMu43kaJHBvYDois/l530qpEwGgKNyr6wWiGXD5lEPReoFhyQfjXZqj89FR10glHznu3Bj+Dr1euJws+qejYsBGCy+p2EMDCr4eGcQaYXb3GYi8zgAOei4FHYGBVwQNsxZO7oD9vefdXBs1VlX5O2bheuWiRwzfrcRDfW8thsZjq2jRpq31pUZ0HPBaR1fh3RIAa51HI2zFuTYeuWoApxbQJ2V6Tge3BJIXPYI0VrYAhop6HtywE8oDZof6NPpeJhIy/zCKGMVKeRhoalrkk6tuzcE/TPnmp4ceuvOBMf6iJS4KVSXaixDMJSQ2rc2rhKhmhybBpox92rVymgD4GXrGUdY/eEPoahkraesBP7r9WgOqGjm4RJhfdWomdqiI93A0AjVgkPYCXi9zwPcJKjdj/yoOVI+fBuC2yaqxPBBxfJeZv8zLEP0n1JttihUdqzZxrB",
                        "issuerCertificateIds" : [ "4d4b8420-e2eb-11ed-a644-4fab0ea00b60", "d50a4410-297e-11eb-bc4c-8b24e5a66fb6" ],
                        "certificateSource" : "USER_IMPORTED"
                      } ],
                      "statistics" : {
                        "ignored" : 0,
                        "imported" : 1,
                        "failed" : 0,
                        "existed" : 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificates/deletion" : {
      "post" : {
        "tags" : [ "Certificates" ],
        "summary" : "Delete a set of retired certificates",
        "description" : "Permanently deletes the retired certificates specified by `certificateIds` from the inventory.",
        "operationId" : "certificateretirement_deleteCertificates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateDeletionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Certificates were deleted."
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificates/{id}" : {
      "get" : {
        "tags" : [ "Certificates" ],
        "summary" : "Get a certificate's details",
        "description" : "Retrieves the details of the certificate that has the specified `id`.",
        "operationId" : "certificates_getById",
        "parameters" : [ {
          "name" : "ownershipTree",
          "in" : "query",
          "description" : "Indicates whether response should include nested ownership data (e.g., `owningContainers`).",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "excludeSupersededInstances",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "UUID of a Certificate.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Certificate was found; details in response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedCertificateInformation"
                },
                "examples" : {
                  "Certificate details response" : {
                    "summary" : "Certificate details",
                    "description" : "Certificate details response",
                    "value" : {
                      "id" : "3fb83440-dfd8-11ed-b8ab-4788d83ace9f",
                      "companyId" : "2d558b30-da16-11ed-8e4f-8339a1bc8d58",
                      "managedCertificateId" : "3f3e7060-dfd8-11ed-8850-f18176fc5513",
                      "certificateRequestId" : "3f675520-dfd8-11ed-82b4-074391f91f8b",
                      "certificateAuthorityAccountId" : "2ed72220-da16-11ed-b080-e795c8859d29",
                      "fingerprint" : "F3CDE0F7539C331D9EF006092161EC8387320B4B",
                      "certificateName" : "venafi.cloud",
                      "issuerCertificateIds" : [ "73ff23b0-da21-11ed-befa-05892b4b966e", "73e38560-da21-11ed-befa-05892b4b966e" ],
                      "certificateStatus" : "ACTIVE",
                      "modificationDate" : "2023-04-21T00:05:39.397+00:00",
                      "validityStart" : "2023-04-21T00:05:09.000+00:00",
                      "validityEnd" : "2023-07-10T00:05:39.000+00:00",
                      "selfSigned" : false,
                      "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                      "signatureHashAlgorithm" : "SHA256",
                      "encryptionType" : "RSA",
                      "keyStrength" : 4096,
                      "subjectKeyIdentifierHash" : "C1EBF01EB166455AAFB6B8D7EFB5CDF78E7A930B",
                      "authorityKeyIdentifierHash" : "27811CFCA803A90E617FA5D47441649608417DD4",
                      "serialNumber" : "173B8702B939C6E3FF702A1DE8386BF35A24A8B7",
                      "subjectDN" : "cn=venafi.cloud,ou=dev,o=Venafi,c=US,st=Utah,l=Salt Lake City",
                      "subjectCN" : [ "venafi.cloud" ],
                      "subjectO" : "Venafi",
                      "subjectOU" : [ "dev" ],
                      "subjectST" : "Utah",
                      "subjectL" : "Salt Lake City",
                      "subjectC" : "US",
                      "subjectAlternativeNamesByType" : {
                        "dNSName" : [ "venafi.com" ]
                      },
                      "subjectAlternativeNameDns" : [ "venafi.com" ],
                      "issuerDN" : "cn=Dedicated - Venafi Cloud Built-In Intermediate CA - G1,ou=Built-in,o=Venafi, Inc.,c=US",
                      "issuerCN" : [ "Dedicated - Venafi Cloud Built-In Intermediate CA - G1" ],
                      "issuerOU" : [ "Built-in" ],
                      "issuerC" : "US",
                      "keyUsage" : [ "digitalSignature", "keyEncipherment", "keyAgreement" ],
                      "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.1", "1.3.6.1.5.5.7.3.2" ],
                      "ocspNoCheck" : false,
                      "versionType" : "CURRENT",
                      "totalInstanceCount" : 1,
                      "totalActiveInstanceCount" : 0,
                      "instances" : [ {
                        "certificateInstanceId" : "3fba3010-dfd8-11ed-b8ab-4788d83ace9f",
                        "certificateId" : "3fb83440-dfd8-11ed-b8ab-4788d83ace9f",
                        "certificateSource" : "USER_PROVIDED",
                        "ipAddress" : "254.254.254.254",
                        "hostname" : " ",
                        "port" : 443,
                        "instanceChainValidationStatus" : [ ],
                        "modificationDate" : "2023-04-21T00:05:39.397+00:00",
                        "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ],
                        "serviceIds" : [ ],
                        "deploymentStatus" : "SUPERSEDED"
                      } ],
                      "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ],
                      "issuerCertificates" : [ {
                        "id" : "73ff23b0-da21-11ed-befa-05892b4b966e",
                        "companyId" : "85d375a0-8038-11e5-bf87-317fe88bb23a",
                        "managedCertificateId" : "74463ed0-da21-11ed-a63c-d508f08eeaa0",
                        "fingerprint" : "5B8E151A0D23B0E72505C09F0563108ACCD64B24",
                        "certificateName" : "Dedicated - Venafi Cloud Built-In Intermediate CA - G1",
                        "issuerCertificateIds" : [ "73e38560-da21-11ed-befa-05892b4b966e" ],
                        "certificateStatus" : "ACTIVE",
                        "modificationDate" : "2023-04-21T00:06:17.625+00:00",
                        "validityStart" : "2023-04-13T16:13:22.000+00:00",
                        "validityEnd" : "2028-04-11T16:13:52.000+00:00",
                        "selfSigned" : false,
                        "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                        "signatureHashAlgorithm" : "SHA256",
                        "encryptionType" : "RSA",
                        "keyStrength" : 2048,
                        "subjectKeyIdentifierHash" : "27811CFCA803A90E617FA5D47441649608417DD4",
                        "authorityKeyIdentifierHash" : "EF4E4297B08CCB96978B672FCD52E166B3DC1DE3",
                        "serialNumber" : "1E3DB051E62ACD3FCC15ED326299C692A8F7ECDB",
                        "subjectDN" : "cn=Dedicated - Venafi Cloud Built-In Intermediate CA - G1,ou=Built-in,o=Venafi, Inc.,c=US",
                        "subjectCN" : [ "Dedicated - Venafi Cloud Built-In Intermediate CA - G1" ],
                        "subjectO" : "Venafi, Inc.",
                        "subjectOU" : [ "Built-in" ],
                        "subjectC" : "US",
                        "issuerDN" : "cn=Dedicated - Venafi Cloud Built-In CA,ou=Built-in,o=Venafi, Inc.,c=US",
                        "issuerCN" : [ "Dedicated - Venafi Cloud Built-In CA" ],
                        "issuerOU" : [ "Built-in" ],
                        "issuerC" : "US",
                        "keyUsage" : [ "keyCertSign", "cRLSign" ],
                        "ocspNoCheck" : false,
                        "versionType" : "CURRENT",
                        "totalInstanceCount" : 1,
                        "totalActiveInstanceCount" : 0,
                        "instances" : [ {
                          "certificateInstanceId" : "7401e2d0-da21-11ed-befa-05892b4b966e",
                          "certificateId" : "73ff23b0-da21-11ed-befa-05892b4b966e",
                          "ipAddress" : "254.254.254.254",
                          "hostname" : " ",
                          "port" : 443,
                          "instanceChainValidationStatus" : [ ],
                          "modificationDate" : "2023-04-21T00:06:17.625+00:00",
                          "deploymentStatus" : "SUPERSEDED"
                        } ]
                      }, {
                        "id" : "73e38560-da21-11ed-befa-05892b4b966e",
                        "companyId" : "85d375a0-8038-11e5-bf87-317fe88bb23a",
                        "managedCertificateId" : "740f5050-da21-11ed-a63c-d508f08eeaa0",
                        "fingerprint" : "AE38ABFB40DBB9309E1A6D9F08CF8C02C06F6D85",
                        "certificateName" : "Dedicated - Venafi Cloud Built-In CA",
                        "issuerCertificateIds" : [ ],
                        "certificateStatus" : "ACTIVE",
                        "modificationDate" : "2023-04-21T00:06:17.601+00:00",
                        "validityStart" : "2023-04-13T16:13:21.000+00:00",
                        "validityEnd" : "2033-04-10T16:13:51.000+00:00",
                        "selfSigned" : true,
                        "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                        "signatureHashAlgorithm" : "SHA256",
                        "encryptionType" : "RSA",
                        "keyStrength" : 2048,
                        "subjectKeyIdentifierHash" : "EF4E4297B08CCB96978B672FCD52E166B3DC1DE3",
                        "authorityKeyIdentifierHash" : "EF4E4297B08CCB96978B672FCD52E166B3DC1DE3",
                        "serialNumber" : "080C053247AEFCA09FFF2FE6B4B5AEE6DDA65269",
                        "subjectDN" : "cn=Dedicated - Venafi Cloud Built-In CA,ou=Built-in,o=Venafi, Inc.,c=US",
                        "subjectCN" : [ "Dedicated - Venafi Cloud Built-In CA" ],
                        "subjectO" : "Venafi, Inc.",
                        "subjectOU" : [ "Built-in" ],
                        "subjectC" : "US",
                        "issuerDN" : "cn=Dedicated - Venafi Cloud Built-In CA,ou=Built-in,o=Venafi, Inc.,c=US",
                        "issuerCN" : [ "Dedicated - Venafi Cloud Built-In CA" ],
                        "issuerOU" : [ "Built-in" ],
                        "issuerC" : "US",
                        "keyUsage" : [ "keyCertSign", "cRLSign" ],
                        "ocspNoCheck" : false,
                        "versionType" : "CURRENT",
                        "totalInstanceCount" : 1,
                        "totalActiveInstanceCount" : 0,
                        "instances" : [ {
                          "certificateInstanceId" : "73ee0cb0-da21-11ed-befa-05892b4b966e",
                          "certificateId" : "73e38560-da21-11ed-befa-05892b4b966e",
                          "ipAddress" : "254.254.254.254",
                          "hostname" : " ",
                          "port" : 443,
                          "instanceChainValidationStatus" : [ ],
                          "modificationDate" : "2023-04-21T00:06:17.601+00:00",
                          "deploymentStatus" : "SUPERSEDED"
                        } ]
                      } ]
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Certificate was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificates/managed/{id}" : {
      "get" : {
        "tags" : [ "Certificates" ],
        "summary" : "Get a certificate's details by its managed ID",
        "description" : "Retrieves the details of the certificate that has the specified managed `id`.",
        "operationId" : "certificates_getByManagedCertificateId",
        "parameters" : [ {
          "name" : "ownershipTree",
          "in" : "query",
          "description" : "Indicates whether response should include nested ownership data (e.g., `owningContainers`)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "excludeSupersededInstances",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Managed UUID of a Certificate",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Certificate was found; details in response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateResponse"
                },
                "examples" : {
                  "Certificate details response" : {
                    "summary" : "Certificate details",
                    "description" : "Certificate details response",
                    "value" : {
                      "count" : 1,
                      "certificates" : [ {
                        "id" : "3fb83440-dfd8-11ed-b8ab-4788d83ace9f",
                        "companyId" : "2d558b30-da16-11ed-8e4f-8339a1bc8d58",
                        "managedCertificateId" : "3f3e7060-dfd8-11ed-8850-f18176fc5513",
                        "certificateRequestId" : "3f675520-dfd8-11ed-82b4-074391f91f8b",
                        "certificateAuthorityAccountId" : "2ed72220-da16-11ed-b080-e795c8859d29",
                        "fingerprint" : "F3CDE0F7539C331D9EF006092161EC8387320B4B",
                        "certificateName" : "venafi.cloud",
                        "issuerCertificateIds" : [ "73ff23b0-da21-11ed-befa-05892b4b966e", "73e38560-da21-11ed-befa-05892b4b966e" ],
                        "certificateStatus" : "ACTIVE",
                        "modificationDate" : "2023-04-21T00:05:39.397+00:00",
                        "validityStart" : "2023-04-21T00:05:09.000+00:00",
                        "validityEnd" : "2023-07-10T00:05:39.000+00:00",
                        "selfSigned" : false,
                        "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                        "signatureHashAlgorithm" : "SHA256",
                        "encryptionType" : "RSA",
                        "keyStrength" : 4096,
                        "subjectKeyIdentifierHash" : "C1EBF01EB166455AAFB6B8D7EFB5CDF78E7A930B",
                        "authorityKeyIdentifierHash" : "27811CFCA803A90E617FA5D47441649608417DD4",
                        "serialNumber" : "173B8702B939C6E3FF702A1DE8386BF35A24A8B7",
                        "subjectDN" : "cn=venafi.cloud,ou=dev,o=Venafi,c=US,st=Utah,l=Salt Lake City",
                        "subjectCN" : [ "venafi.cloud" ],
                        "subjectO" : "Venafi",
                        "subjectOU" : [ "dev" ],
                        "subjectST" : "Utah",
                        "subjectL" : "Salt Lake City",
                        "subjectC" : "US",
                        "subjectAlternativeNamesByType" : {
                          "dNSName" : [ "venafi.com" ]
                        },
                        "subjectAlternativeNameDns" : [ "venafi.com" ],
                        "issuerDN" : "cn=Dedicated - Venafi Cloud Built-In Intermediate CA - G1,ou=Built-in,o=Venafi, Inc.,c=US",
                        "issuerCN" : [ "Dedicated - Venafi Cloud Built-In Intermediate CA - G1" ],
                        "issuerOU" : [ "Built-in" ],
                        "issuerC" : "US",
                        "keyUsage" : [ "digitalSignature", "keyEncipherment", "keyAgreement" ],
                        "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.1", "1.3.6.1.5.5.7.3.2" ],
                        "ocspNoCheck" : false,
                        "versionType" : "CURRENT",
                        "totalInstanceCount" : 1,
                        "totalActiveInstanceCount" : 0,
                        "instances" : [ {
                          "certificateInstanceId" : "3fba3010-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateId" : "3fb83440-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateSource" : "USER_PROVIDED",
                          "ipAddress" : "254.254.254.254",
                          "hostname" : " ",
                          "port" : 443,
                          "instanceChainValidationStatus" : [ ],
                          "modificationDate" : "2023-04-21T00:05:39.397+00:00",
                          "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ],
                          "deploymentStatus" : "SUPERSEDED"
                        } ],
                        "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ],
                        "issuerCertificates" : [ {
                          "id" : "73ff23b0-da21-11ed-befa-05892b4b966e",
                          "companyId" : "85d375a0-8038-11e5-bf87-317fe88bb23a",
                          "managedCertificateId" : "74463ed0-da21-11ed-a63c-d508f08eeaa0",
                          "fingerprint" : "5B8E151A0D23B0E72505C09F0563108ACCD64B24",
                          "certificateName" : "Dedicated - Venafi Cloud Built-In Intermediate CA - G1",
                          "issuerCertificateIds" : [ "73e38560-da21-11ed-befa-05892b4b966e" ],
                          "certificateStatus" : "ACTIVE",
                          "modificationDate" : "2023-04-21T00:06:17.625+00:00",
                          "validityStart" : "2023-04-13T16:13:22.000+00:00",
                          "validityEnd" : "2028-04-11T16:13:52.000+00:00",
                          "selfSigned" : false,
                          "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                          "signatureHashAlgorithm" : "SHA256",
                          "encryptionType" : "RSA",
                          "keyStrength" : 2048,
                          "subjectKeyIdentifierHash" : "27811CFCA803A90E617FA5D47441649608417DD4",
                          "authorityKeyIdentifierHash" : "EF4E4297B08CCB96978B672FCD52E166B3DC1DE3",
                          "serialNumber" : "1E3DB051E62ACD3FCC15ED326299C692A8F7ECDB",
                          "subjectDN" : "cn=Dedicated - Venafi Cloud Built-In Intermediate CA - G1,ou=Built-in,o=Venafi, Inc.,c=US",
                          "subjectCN" : [ "Dedicated - Venafi Cloud Built-In Intermediate CA - G1" ],
                          "subjectO" : "Venafi, Inc.",
                          "subjectOU" : [ "Built-in" ],
                          "subjectC" : "US",
                          "issuerDN" : "cn=Dedicated - Venafi Cloud Built-In CA,ou=Built-in,o=Venafi, Inc.,c=US",
                          "issuerCN" : [ "Dedicated - Venafi Cloud Built-In CA" ],
                          "issuerOU" : [ "Built-in" ],
                          "issuerC" : "US",
                          "keyUsage" : [ "keyCertSign", "cRLSign" ],
                          "ocspNoCheck" : false,
                          "versionType" : "CURRENT",
                          "totalInstanceCount" : 1,
                          "totalActiveInstanceCount" : 0,
                          "instances" : [ {
                            "certificateInstanceId" : "7401e2d0-da21-11ed-befa-05892b4b966e",
                            "certificateId" : "73ff23b0-da21-11ed-befa-05892b4b966e",
                            "ipAddress" : "254.254.254.254",
                            "hostname" : " ",
                            "port" : 443,
                            "instanceChainValidationStatus" : [ ],
                            "modificationDate" : "2023-04-21T00:06:17.625+00:00",
                            "serviceIds" : [ ],
                            "deploymentStatus" : "SUPERSEDED"
                          } ]
                        }, {
                          "id" : "73e38560-da21-11ed-befa-05892b4b966e",
                          "companyId" : "85d375a0-8038-11e5-bf87-317fe88bb23a",
                          "managedCertificateId" : "740f5050-da21-11ed-a63c-d508f08eeaa0",
                          "fingerprint" : "AE38ABFB40DBB9309E1A6D9F08CF8C02C06F6D85",
                          "certificateName" : "Dedicated - Venafi Cloud Built-In CA",
                          "issuerCertificateIds" : [ ],
                          "certificateStatus" : "ACTIVE",
                          "modificationDate" : "2023-04-21T00:06:17.601+00:00",
                          "validityStart" : "2023-04-13T16:13:21.000+00:00",
                          "validityEnd" : "2033-04-10T16:13:51.000+00:00",
                          "selfSigned" : true,
                          "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                          "signatureHashAlgorithm" : "SHA256",
                          "encryptionType" : "RSA",
                          "keyStrength" : 2048,
                          "subjectKeyIdentifierHash" : "EF4E4297B08CCB96978B672FCD52E166B3DC1DE3",
                          "authorityKeyIdentifierHash" : "EF4E4297B08CCB96978B672FCD52E166B3DC1DE3",
                          "serialNumber" : "080C053247AEFCA09FFF2FE6B4B5AEE6DDA65269",
                          "subjectDN" : "cn=Dedicated - Venafi Cloud Built-In CA,ou=Built-in,o=Venafi, Inc.,c=US",
                          "subjectCN" : [ "Dedicated - Venafi Cloud Built-In CA" ],
                          "subjectO" : "Venafi, Inc.",
                          "subjectOU" : [ "Built-in" ],
                          "subjectC" : "US",
                          "issuerDN" : "cn=Dedicated - Venafi Cloud Built-In CA,ou=Built-in,o=Venafi, Inc.,c=US",
                          "issuerCN" : [ "Dedicated - Venafi Cloud Built-In CA" ],
                          "issuerOU" : [ "Built-in" ],
                          "issuerC" : "US",
                          "keyUsage" : [ "keyCertSign", "cRLSign" ],
                          "ocspNoCheck" : false,
                          "versionType" : "CURRENT",
                          "totalInstanceCount" : 1,
                          "totalActiveInstanceCount" : 0,
                          "instances" : [ {
                            "certificateInstanceId" : "73ee0cb0-da21-11ed-befa-05892b4b966e",
                            "certificateId" : "73e38560-da21-11ed-befa-05892b4b966e",
                            "ipAddress" : "254.254.254.254",
                            "hostname" : " ",
                            "port" : 443,
                            "instanceChainValidationStatus" : [ ],
                            "modificationDate" : "2023-04-21T00:06:17.601+00:00",
                            "serviceIds" : [ ],
                            "deploymentStatus" : "SUPERSEDED"
                          } ]
                        } ]
                      } ]
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Certificate not found. Verify the certificate ID and try again.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificates/{id}/contents" : {
      "get" : {
        "tags" : [ "Certificates" ],
        "summary" : "Download a certificate",
        "description" : "Exports the certificate that has the specified `id` in PEM or DER format. Chain CA certificates are included for PEM format when `chainOrder` is EE_FIRST or ROOT_FIRST.",
        "operationId" : "certificates_getContentsById",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "description" : "Specify an 'accept' header parameter's value",
          "schema" : {
            "type" : "string",
            "enum" : [ "text/plain", "application/octet-stream" ]
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "UUID of a Certificate.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Format of certificate in response.",
          "schema" : {
            "type" : "string",
            "enum" : [ "PEM", "DER" ]
          }
        }, {
          "name" : "chainOrder",
          "in" : "query",
          "description" : "Order of certificates in response.",
          "schema" : {
            "type" : "string",
            "enum" : [ "EE_ONLY", "EE_FIRST", "ROOT_FIRST" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Raw certificate in response body",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Certificate not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificates/{id}/keystore" : {
      "post" : {
        "tags" : [ "Certificates" ],
        "summary" : "Download Keystore By Certificate Id",
        "description" : "Download keystore in specified format",
        "operationId" : "certificates_downloadkeystoreById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateKeystoreRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Keystore matching specified id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Certificate not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request Conditions Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificates/recovery" : {
      "post" : {
        "tags" : [ "Certificates" ],
        "summary" : "Recover a set of certificates",
        "description" : "Recover the certificates specified by `certificateIds`, including any previous versions of those certificates.",
        "operationId" : "certificateretirement_recoverCertificates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateRecoveryRequest"
              },
              "examples" : {
                "Certificate recovery request" : {
                  "summary" : "Certificate recovery",
                  "description" : "Certificate recovery request",
                  "value" : {
                    "certificateIds" : [ "568a0810-dfd8-11ed-b8ab-4788d83ace9f" ],
                    "applicationIds" : [ "9303e940-df9d-11ed-8850-f18176fc5513" ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Certificates were recovered. Total number and details are in the response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateResponse"
                },
                "examples" : {
                  "Certificate recovery details" : {
                    "summary" : "Certificate recovered details",
                    "description" : "Certificate recovery details",
                    "value" : {
                      "count" : 1,
                      "certificates" : [ {
                        "id" : "568a0810-dfd8-11ed-b8ab-4788d83ace9f",
                        "companyId" : "2d558b30-da16-11ed-8e4f-8339a1bc8d58",
                        "managedCertificateId" : "5677dfa0-dfd8-11ed-8850-f18176fc5513",
                        "certificateRequestId" : "567c4c70-dfd8-11ed-82b4-074391f91f8b",
                        "certificateAuthorityAccountId" : "2ed72220-da16-11ed-b080-e795c8859d29",
                        "fingerprint" : "E8635EE689F6DB249CAA284FD8DDE7E09DEE6F00",
                        "certificateName" : "venafi.cloud",
                        "issuerCertificateIds" : [ "73ff23b0-da21-11ed-befa-05892b4b966e", "73e38560-da21-11ed-befa-05892b4b966e" ],
                        "certificateStatus" : "ACTIVE",
                        "statusModificationUserId" : "309e4d90-da16-11ed-8e4f-8339a1bc8d58",
                        "modificationDate" : "2023-04-21T00:52:56.620+00:00",
                        "statusModificationDate" : "2023-04-21T00:52:56.620+00:00",
                        "validityStart" : "2023-04-21T00:05:47.000+00:00",
                        "validityEnd" : "2023-07-10T00:06:17.000+00:00",
                        "selfSigned" : false,
                        "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                        "signatureHashAlgorithm" : "SHA256",
                        "encryptionType" : "RSA",
                        "keyStrength" : 4096,
                        "subjectKeyIdentifierHash" : "ACCCCB504BF86D1FD94F6D9DA2230A2B454EB5FC",
                        "authorityKeyIdentifierHash" : "27811CFCA803A90E617FA5D47441649608417DD4",
                        "serialNumber" : "6CC8CB1433B57D10353284EEC09E5D2D2153F4DC",
                        "subjectDN" : "cn=venafi.cloud,ou=qa,o=Venafi,c=US,st=Utah,l=Salt Lake City",
                        "subjectCN" : [ "venafi.cloud" ],
                        "subjectO" : "Venafi",
                        "subjectOU" : [ "qa" ],
                        "subjectST" : "Utah",
                        "subjectL" : "Salt Lake City",
                        "subjectC" : "US",
                        "subjectAlternativeNamesByType" : {
                          "dNSName" : [ "venafi.cloud" ]
                        },
                        "subjectAlternativeNameDns" : [ "venafi.cloud" ],
                        "issuerDN" : "cn=Dedicated - Venafi Cloud Built-In Intermediate CA - G1,ou=Built-in,o=Venafi, Inc.,c=US",
                        "issuerCN" : [ "Dedicated - Venafi Cloud Built-In Intermediate CA - G1" ],
                        "issuerOU" : [ "Built-in" ],
                        "issuerC" : "US",
                        "keyUsage" : [ "digitalSignature", "keyEncipherment", "keyAgreement" ],
                        "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.1", "1.3.6.1.5.5.7.3.2" ],
                        "ocspNoCheck" : false,
                        "versionType" : "CURRENT",
                        "totalInstanceCount" : 1,
                        "totalActiveInstanceCount" : 0,
                        "instances" : [ {
                          "certificateInstanceId" : "568af270-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateId" : "568a0810-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateSource" : "USER_PROVIDED",
                          "ipAddress" : "254.254.254.254",
                          "hostname" : " ",
                          "port" : 443,
                          "instanceChainValidationStatus" : [ ],
                          "modificationDate" : "2023-04-21T00:52:19.940+00:00",
                          "applicationIds" : [ "9303e940-df9d-11ed-8850-f18176fc5513" ],
                          "deploymentStatus" : "SUPERSEDED"
                        } ],
                        "applicationIds" : [ "9303e940-df9d-11ed-8850-f18176fc5513" ]
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificates/retirement" : {
      "post" : {
        "tags" : [ "Certificates" ],
        "summary" : "Retire certificates",
        "description" : "This endpoint retires one or more certificates by using the **certificateIds** parameter to match a specified value.",
        "operationId" : "certificateretirement_retireCertificates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateRetirementRequest"
              },
              "examples" : {
                "Certificate retirement request" : {
                  "summary" : "Certificate retirement",
                  "description" : "Certificate retirement request",
                  "value" : {
                    "certificateIds" : [ "3fb83440-dfd8-11ed-b8ab-4788d83ace9f" ],
                    "addToBlocklist" : false
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Certificate retirement response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateResponse"
                },
                "examples" : {
                  "Certificate retirement response" : {
                    "summary" : "Certificate retirement",
                    "description" : "Certificate retirement response",
                    "value" : {
                      "count" : 1,
                      "certificates" : [ {
                        "id" : "3fb83440-dfd8-11ed-b8ab-4788d83ace9f",
                        "companyId" : "2d558b30-da16-11ed-8e4f-8339a1bc8d58",
                        "managedCertificateId" : "3f3e7060-dfd8-11ed-8850-f18176fc5513",
                        "certificateRequestId" : "3f675520-dfd8-11ed-82b4-074391f91f8b",
                        "certificateAuthorityAccountId" : "2ed72220-da16-11ed-b080-e795c8859d29",
                        "fingerprint" : "F3CDE0F7539C331D9EF006092161EC8387320B4B",
                        "certificateName" : "venafi.cloud",
                        "issuerCertificateIds" : [ "73ff23b0-da21-11ed-befa-05892b4b966e", "73e38560-da21-11ed-befa-05892b4b966e" ],
                        "certificateStatus" : "RETIRED",
                        "statusModificationUserId" : "309e4d90-da16-11ed-8e4f-8339a1bc8d58",
                        "modificationDate" : "2023-04-24T17:36:04.451+00:00",
                        "statusModificationDate" : "2023-04-24T17:36:04.451+00:00",
                        "validityStart" : "2023-04-21T00:05:09.000+00:00",
                        "validityEnd" : "2023-07-10T00:05:39.000+00:00",
                        "selfSigned" : false,
                        "signatureAlgorithm" : "SHA256_WITH_RSA_ENCRYPTION",
                        "signatureHashAlgorithm" : "SHA256",
                        "encryptionType" : "RSA",
                        "keyStrength" : 4096,
                        "subjectKeyIdentifierHash" : "C1EBF01EB166455AAFB6B8D7EFB5CDF78E7A930B",
                        "authorityKeyIdentifierHash" : "27811CFCA803A90E617FA5D47441649608417DD4",
                        "serialNumber" : "173B8702B939C6E3FF702A1DE8386BF35A24A8B7",
                        "subjectDN" : "cn=venafi.cloud,ou=dev,o=Venafi,c=US,st=Utah,l=Salt Lake City",
                        "subjectCN" : [ "venafi.cloud" ],
                        "subjectO" : "Venafi",
                        "subjectOU" : [ "dev" ],
                        "subjectST" : "Utah",
                        "subjectL" : "Salt Lake City",
                        "subjectC" : "US",
                        "subjectAlternativeNamesByType" : {
                          "dNSName" : [ "venafi.com" ]
                        },
                        "subjectAlternativeNameDns" : [ "venafi.com" ],
                        "issuerDN" : "cn=Dedicated - Venafi Cloud Built-In Intermediate CA - G1,ou=Built-in,o=Venafi, Inc.,c=US",
                        "issuerCN" : [ "Dedicated - Venafi Cloud Built-In Intermediate CA - G1" ],
                        "issuerOU" : [ "Built-in" ],
                        "issuerC" : "US",
                        "keyUsage" : [ "digitalSignature", "keyEncipherment", "keyAgreement" ],
                        "extendedKeyUsage" : [ "1.3.6.1.5.5.7.3.1", "1.3.6.1.5.5.7.3.2" ],
                        "ocspNoCheck" : false,
                        "versionType" : "CURRENT",
                        "totalInstanceCount" : 1,
                        "totalActiveInstanceCount" : 0,
                        "instances" : [ {
                          "certificateInstanceId" : "3fba3010-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateId" : "3fb83440-dfd8-11ed-b8ab-4788d83ace9f",
                          "certificateSource" : "USER_PROVIDED",
                          "ipAddress" : "254.254.254.254",
                          "hostname" : " ",
                          "port" : 443,
                          "instanceChainValidationStatus" : [ ],
                          "modificationDate" : "2023-04-24T17:36:04.576+00:00",
                          "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ],
                          "deploymentStatus" : "SUPERSEDED"
                        } ],
                        "applicationIds" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0" ]
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request conditions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/certificates/validation" : {
      "post" : {
        "tags" : [ "Certificates" ],
        "summary" : "Request validation for a set of certificates",
        "description" : "Submits one or more certificates for TLS validation.",
        "operationId" : "certificates_validation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateValidationRequest"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "Certificates submitted for validation response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateValidationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/inventorymonitoringconfig/{type}" : {
      "get" : {
        "tags" : [ "Certificate Monitoring Configuration" ],
        "summary" : "Get the details of the current inventory monitoring configuration",
        "description" : "Retrieves the details of the inventory monitoring configuration by configuration type",
        "operationId" : "inventorymonitoringconfiguration_getByType",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Configuration type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Configuration type",
            "enum" : [ "CERTIFICATE_EXPIRATION" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of inventory monitoring configuration in response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryMonitoringConfigurationResponse"
                },
                "examples" : {
                  "Retrieves the details of the inventory monitoring configuration." : {
                    "summary" : "Retrieves the details of the inventory monitoring configuration.",
                    "description" : "Retrieves the details of the inventory monitoring configuration.",
                    "value" : {
                      "inventoryMonitoringConfiguration" : {
                        "inventoryMonitoringConfigurationType" : "CERTIFICATE_EXPIRATION",
                        "enabled" : true,
                        "thresholds" : [ 7, 14, 30 ],
                        "applicationIds" : [ ],
                        "includeUnassignedCertificates" : true
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Inventory monitoring configuration not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Certificate Monitoring Configuration" ],
        "summary" : "Updates existing inventory monitoring configuration",
        "description" : "Updates existing inventory monitoring configuration",
        "operationId" : "inventorymonitoringconfiguration_update",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Configuration type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Type of the configuration",
            "enum" : [ "CERTIFICATE_EXPIRATION" ]
          }
        } ],
        "requestBody" : {
          "description" : "Updates properties of the inventory monitoring configuration.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InventoryMonitoringConfigRequest"
              },
              "examples" : {
                "An example for disabling the configuration." : {
                  "description" : "An example for disabling the configuration.",
                  "value" : {
                    "inventoryMonitoringConfiguration" : {
                      "inventoryMonitoringConfigurationType" : "CERTIFICATE_EXPIRATION",
                      "enabled" : false,
                      "thresholds" : [ ],
                      "applicationIds" : [ ],
                      "includeUnassignedCertificates" : true
                    }
                  }
                },
                "An example for enabling the configuration." : {
                  "description" : "An example for enabling the configuration.",
                  "value" : {
                    "inventoryMonitoringConfiguration" : {
                      "inventoryMonitoringConfigurationType" : "CERTIFICATE_EXPIRATION",
                      "enabled" : true,
                      "thresholds" : [ 7, 14, 30 ],
                      "applicationIds" : [ ],
                      "includeUnassignedCertificates" : true
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Inventory monitoring configuration was updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryMonitoringConfigurationResponse"
                },
                "examples" : {
                  "Updates properties of the inventory monitoring configuration." : {
                    "summary" : "Updates properties of the inventory monitoring configuration.",
                    "description" : "Updates properties of the inventory monitoring configuration.",
                    "value" : {
                      "inventoryMonitoringConfiguration" : {
                        "inventoryMonitoringConfigurationType" : "CERTIFICATE_EXPIRATION",
                        "enabled" : true,
                        "thresholds" : [ 7, 14, 30 ],
                        "applicationIds" : [ ],
                        "includeUnassignedCertificates" : true
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/inventorymonitoringconfig/{type}/scheduler" : {
      "put" : {
        "tags" : [ "Certificate Monitoring Configuration" ],
        "summary" : "Update inventory monitoring scheduler by type",
        "description" : "Update inventory monitoring scheduler by type",
        "operationId" : "inventorymonitoringconfigurationscheduler_update",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Configuration type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Configuration type",
            "enum" : [ "CERTIFICATE_EXPIRATION" ]
          }
        }, {
          "name" : "runNow",
          "in" : "query",
          "description" : "Start the scheduler now",
          "schema" : {
            "type" : "boolean",
            "description" : "Start the scheduler now",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Inventory monitoring scheduler was updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryMonitoringSchedulerInformation"
                }
              }
            }
          },
          "400" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Incomplete or malformed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/savedsearches" : {
      "get" : {
        "tags" : [ "Saved Search" ],
        "summary" : "Retrieve Saved Searches",
        "description" : "Retrieve all Saved Searches for a user. ",
        "operationId" : "savedSearch_getAll",
        "responses" : {
          "200" : {
            "description" : "Saved Search Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavedSearchResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request Conditions Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request Conditions Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Saved Search" ],
        "summary" : "Create saved search",
        "description" : "Create saved search for user",
        "operationId" : "saveSearch_create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SavedSearchRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Saved Search Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavedSearchResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Saved Search Exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request Conditions Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request Conditions Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    },
    "/v1/savedsearches/{id}" : {
      "get" : {
        "tags" : [ "Saved Search" ],
        "summary" : "Retrieve saved search",
        "description" : "Retrieve saved search by id",
        "operationId" : "savedSearch_getById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "SavedSearch ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "SavedSearch ID",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Saved Search",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavedSearchInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "Saved Search not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request Conditions Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request Conditions Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Saved Search" ],
        "summary" : "Update Saved Search",
        "description" : "Update Saved Search by id",
        "operationId" : "savedSearch_update",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "SavedSearch ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "SavedSearch ID",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/SavedSearchRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Saved Search Updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavedSearchInfo"
                }
              }
            }
          },
          "404" : {
            "description" : "Saved Search Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request Conditions Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request Conditions Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Saved Search" ],
        "summary" : "Delete Saved Search",
        "description" : "Delete Saved Search",
        "operationId" : "savedSearch_delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "SavedSearch ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "SavedSearch ID",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Saved Search Deleted"
          },
          "404" : {
            "description" : "Saved Search Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Request Conditions Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "412" : {
            "description" : "Request Conditions Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "tppl-api-key" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "AnyValue" : {
        "description" : "Can be any value - string, number, boolean, array or object."
      },
      "ApplicationsAssignResponse" : {
        "type" : "object",
        "properties" : {
          "certificates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CertificateInformation"
            }
          }
        }
      },
      "CertificateInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "UUID of a certificate",
            "format" : "uuid",
            "example" : "2eb29780-9046-11ed-8e50-b994b27d2ece"
          },
          "companyId" : {
            "type" : "string",
            "description" : "UUID  of a company",
            "format" : "uuid",
            "example" : "85595df0-8e14-11ed-87e3-755db050f29d"
          },
          "managedCertificateId" : {
            "type" : "string",
            "description" : "UUID  of a managed certificate",
            "format" : "uuid",
            "example" : "2f0e7320-9046-11ed-8ab8-19e0a618d9cd"
          },
          "certificateRequestId" : {
            "type" : "string",
            "description" : "UUID  of a certificate request",
            "format" : "uuid",
            "example" : "2e8964a0-9046-11ed-8e50-b994b27d2ece"
          },
          "certificateAuthorityAccountId" : {
            "type" : "string",
            "description" : "UUID  of a certificate authority account",
            "format" : "uuid"
          },
          "fingerprint" : {
            "type" : "string",
            "description" : "A certificate fingerprint",
            "example" : "6D4C95512C117B004191F1A096ECAD13242FCD9F"
          },
          "certificateName" : {
            "type" : "string",
            "description" : "A certificate name",
            "example" : "venafi.com"
          },
          "issuerCertificateIds" : {
            "type" : "array",
            "description" : "A collection of issuer certificate IDs",
            "example" : [ "2e8964a0-9046-11ed-8e50-b994b27d2ece", "d5b418a0-297e-11eb-bc4c-8b24e5a66fb6" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "certificateStatus" : {
            "type" : "string",
            "description" : "Certificate's status",
            "example" : "ACTIVE",
            "enum" : [ "ACTIVE", "RETIRED", "DELETED" ]
          },
          "statusModificationUserId" : {
            "type" : "string",
            "description" : "UUID of the user that modified the certificate installation",
            "format" : "uuid",
            "example" : "3c9964a0-9046-11ed-8e50-b994b27d2ece"
          },
          "modificationDate" : {
            "type" : "string",
            "description" : "The last date a certificate was modified",
            "format" : "date-time",
            "example" : "2022-03-24T09:12:28Z"
          },
          "archivedDate" : {
            "type" : "string",
            "description" : "The date a certificate was archived",
            "format" : "date-time",
            "example" : "2022-05-24T09:12:28Z"
          },
          "statusModificationDate" : {
            "type" : "string",
            "description" : "The date a certificate's status was modified",
            "format" : "date-time",
            "example" : "2022-04-24T09:12:28Z"
          },
          "validityStart" : {
            "type" : "string",
            "description" : "The date a certificate validity starts",
            "format" : "date-time",
            "example" : "2022-01-24T09:12:28Z"
          },
          "validityEnd" : {
            "type" : "string",
            "description" : "The date a certificate validity ends",
            "format" : "date-time",
            "example" : "2023-01-24T09:12:28Z"
          },
          "selfSigned" : {
            "type" : "boolean",
            "description" : "If the certificate is self singed",
            "example" : true
          },
          "signatureAlgorithm" : {
            "type" : "string",
            "description" : "A certificate signature algorithm",
            "example" : "SHA256_WITH_RSA_ENCRYPTION",
            "enum" : [ "MD2_WITH_RSA_ENCRYPTION", "MD5_WITH_RSA_ENCRYPTION", "SHA1_WITH_RSA_ENCRYPTION", "SHA1_WITH_RSA_ENCRYPTION2", "SHA256_WITH_RSA_ENCRYPTION", "SHA384_WITH_RSA_ENCRYPTION", "SHA512_WITH_RSA_ENCRYPTION", "ID_DSA_WITH_SHA1", "dsaWithSHA1", "EC_DSA_WITH_SHA1", "EC_DSA_WITH_SHA224", "EC_DSA_WITH_SHA256", "EC_DSA_WITH_SHA384", "EC_DSA_WITH_SHA512", "UNKNOWN", "SHA1_WITH_RSAandMGF1", "GOST_R3411_94_WITH_GOST_R3410_2001", "GOST_R3411_94_WITH_GOST_R3410_94" ]
          },
          "signatureHashAlgorithm" : {
            "type" : "string",
            "description" : "A certificate signature hash algorithm",
            "example" : "SHA256",
            "enum" : [ "MD5", "SHA1", "MD2", "SHA224", "SHA256", "SHA384", "SHA512", "UNKNOWN", "GOSTR3411_94" ]
          },
          "encryptionType" : {
            "type" : "string",
            "description" : "A certificate encryption type",
            "example" : "EC",
            "enum" : [ "RSA", "DSA", "EC", "GOST3410", "ECGOST3410", "RESERVED3", "UNKNOWN" ]
          },
          "keyStrength" : {
            "type" : "integer",
            "description" : "A certificate key strength",
            "format" : "int32",
            "example" : 2048
          },
          "keyCurve" : {
            "type" : "string",
            "description" : "A certificate key curve",
            "example" : "P256",
            "enum" : [ "P256", "P384", "P521", "ED25519", "UNKNOWN" ]
          },
          "subjectKeyIdentifierHash" : {
            "type" : "string",
            "description" : "A subject key identifier hash",
            "example" : "4E0CE93D3240561F468C33A85F08FCD3B04CC9DC"
          },
          "authorityKeyIdentifierHash" : {
            "type" : "string",
            "description" : "An authority key identifier hash",
            "example" : "40572B10F85DDAF18BFF987372178532AB875BCA"
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "A certificate serial number",
            "example" : "0C51A562B02A19A222FFB4730C47A8E2"
          },
          "subjectDN" : {
            "type" : "string",
            "description" : "A certificate subject DN",
            "example" : "cn=www.venafi.com,o=Venafi, Inc.,c=US,st=Utah,l=Salt Lake City"
          },
          "subjectCN" : {
            "type" : "array",
            "description" : "A collection of certificate subject CNs",
            "example" : [ "venafi.com", "cloud.venafi" ],
            "items" : {
              "type" : "string"
            }
          },
          "subjectO" : {
            "type" : "string",
            "description" : "A certificate subject Organization",
            "example" : "Venafi, Inc."
          },
          "subjectOU" : {
            "type" : "array",
            "description" : "A collection of certificate subject Organization units",
            "example" : [ "devops", "test" ],
            "items" : {
              "type" : "string"
            }
          },
          "subjectST" : {
            "type" : "string",
            "description" : "A certificate subject State",
            "example" : "Utah"
          },
          "subjectL" : {
            "type" : "string",
            "description" : "A certificate subject Locality",
            "example" : "Salt Lake City"
          },
          "subjectC" : {
            "type" : "string",
            "description" : "A certificate subject Country",
            "example" : "US"
          },
          "subjectAlternativeNamesByType" : {
            "$ref" : "#/components/schemas/GeneralNamesData"
          },
          "subjectAlternativeNameDns" : {
            "type" : "array",
            "description" : "A collection of certificate subject alternative names DNs",
            "example" : [ "venafi.com", "www.venafi.com" ],
            "items" : {
              "type" : "string"
            }
          },
          "subjectAlternativeNameNonDns" : {
            "type" : "array",
            "description" : "A collection of certificate subject alternative name none DNs",
            "example" : [ "venafi domain" ],
            "items" : {
              "type" : "string"
            }
          },
          "issuerDN" : {
            "type" : "string",
            "description" : "A certificate issue DN",
            "example" : "cn=HydrantID SSL CA G3,o=HydrantID (Avalanche Cloud Corporation),c=US"
          },
          "issuerCN" : {
            "type" : "array",
            "description" : "A collection of certificate issuer Common names",
            "example" : [ "HydrantID SSL CA G3" ],
            "items" : {
              "type" : "string"
            }
          },
          "issuerOU" : {
            "type" : "array",
            "description" : "A collection of certificate issuer Organization units",
            "example" : [ "Issuer CA" ],
            "items" : {
              "type" : "string"
            }
          },
          "issuerST" : {
            "type" : "string",
            "description" : "A certificate issuer State",
            "example" : "Utah"
          },
          "issuerL" : {
            "type" : "string",
            "description" : "A certificate issues Locality",
            "example" : "Salt Lake City"
          },
          "issuerC" : {
            "type" : "string",
            "description" : "A certificate issues Country",
            "example" : "US"
          },
          "issuerAlternativeNameDns" : {
            "type" : "array",
            "description" : "A collection of certificate issuer alternative names DNs",
            "example" : [ "venafi.com", "www.venafi.com" ],
            "items" : {
              "type" : "string"
            }
          },
          "issuerAlternativeNameNonDns" : {
            "type" : "array",
            "description" : "A collection of certificate issuer alternative name none DNs",
            "example" : [ "venafi issuer doman" ],
            "items" : {
              "type" : "string"
            }
          },
          "keyUsage" : {
            "type" : "array",
            "description" : "A collection of certificate key usages",
            "example" : [ "digitalSignature", "keyEncipherment" ],
            "items" : {
              "type" : "string"
            }
          },
          "extendedKeyUsage" : {
            "type" : "array",
            "description" : "A collection of certificate extended key usages",
            "example" : [ "1.3.6.1.5.5.7.3.2", "1.3.6.1.5.5.7.3.1" ],
            "items" : {
              "type" : "string"
            }
          },
          "pathLength" : {
            "type" : "integer",
            "description" : "A certificate path length",
            "format" : "int32",
            "example" : 3
          },
          "ocspNoCheck" : {
            "type" : "boolean",
            "description" : "If a certificate no ocsp check",
            "example" : false
          },
          "requireExplicitPolicy" : {
            "type" : "integer",
            "description" : "Required explicit policy is required",
            "format" : "int32",
            "example" : 1
          },
          "inhibitPolicyMapping" : {
            "type" : "integer",
            "description" : "Inhibit policy mapping",
            "format" : "int32",
            "example" : 200
          },
          "inhibitAnyPolicy" : {
            "type" : "integer",
            "description" : "Inhibit any policy",
            "format" : "int32",
            "example" : 150
          },
          "versionType" : {
            "type" : "string",
            "description" : "A certificate version type",
            "example" : "CURRENT",
            "enum" : [ "OLD", "CURRENT" ]
          },
          "totalInstanceCount" : {
            "type" : "integer",
            "description" : "total instances of a certificate",
            "format" : "int32",
            "example" : 100
          },
          "totalActiveInstanceCount" : {
            "type" : "integer",
            "description" : "total active instances of a certificate",
            "format" : "int32",
            "example" : 50
          },
          "instances" : {
            "type" : "array",
            "description" : "A collection of certificate instances information",
            "example" : [ {
              "certificateInstanceId" : "7ec1bc50-9051-11ed-8e50-b994b27d2ece",
              "certificateId" : "7ec12010-9051-11ed-8e50-b994b27d2ece",
              "certificateSource" : "USER_SCAN",
              "ipAddress" : "23.185.0.2",
              "hostname" : "venafi.com",
              "port" : 443,
              "instanceChainValidationStatus" : [ "OK" ],
              "sslValidationStatus" : "OK",
              "sslValidationErrorArguments" : [ ],
              "sslProtocols" : [ "TLSv1.3", "TLSv1.2" ],
              "lastScanDate" : "2023-01-09T19:12:05.314+00:00",
              "lastValidatedAttempt" : "2023-01-09T19:12:05.446+00:00",
              "modificationDate" : "2023-01-09T19:12:14.865+00:00",
              "serviceIds" : [ "1d61e9e0-9046-11ed-bf12-53a1b041cf25" ],
              "deploymentStatus" : "IN_USE"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/CertificateInstanceInformation"
            }
          },
          "dekHash" : {
            "type" : "string",
            "description" : "A certificate dek hash",
            "example" : "RaBDrLmQ69hACXOrPU6542RBT-M-yZOkw4XKsT-r55i="
          },
          "applicationIds" : {
            "type" : "array",
            "description" : "A collection of application IDs",
            "example" : [ "561baf7c-98b7-49af-ab9c-7b3a9fea3028", "4adeba6f-0c94-4595-a5b6-babea458249f" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "tags" : {
            "type" : "array",
            "description" : "A collection of tags",
            "example" : [ "owner:test.user", "90-day" ],
            "items" : {
              "type" : "string"
            }
          },
          "ownership" : {
            "$ref" : "#/components/schemas/CertificateOwnership"
          },
          "lastNotification" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CertificateInstanceInformation" : {
        "type" : "object",
        "properties" : {
          "certificateInstanceId" : {
            "type" : "string",
            "description" : "UUID of a certificate instance",
            "format" : "uuid",
            "example" : "f68daf30-4690-45bc-85b3-bb327024735e"
          },
          "certificateId" : {
            "type" : "string",
            "description" : "UUID of a certificate",
            "format" : "uuid",
            "example" : "2eb29780-9046-11ed-8e50-b994b27d2ece"
          },
          "certificateSource" : {
            "type" : "string",
            "description" : "Certificate source",
            "example" : "USER_SCAN",
            "enum" : [ "UNKNOWN", "USER_PROVIDED", "USER_IMPORTED", "USER_SCAN", "TRUSTNET_SCAN", "ON_PREM_CA_IMPORT", "EXTERNAL_CA_IMPORT", "FILE_IMPORT", "EXTERNAL_SCAN", "DOMAIN_SCAN", "SMART_SCAN_INTERNAL", "SMART_SCAN_EXTERNAL", "SMART_VALIDATION_INTERNAL", "SMART_VALIDATION_EXTERNAL", "MACHINE_DISCOVERY", "KUBERNETES_DISCOVERY", "AWS_DISCOVERY", "AKAMAI_DISCOVERY", "AZURE_DISCOVERY", "GCP_DISCOVERY" ]
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "An ip address",
            "example" : "14.183.1.32"
          },
          "hostname" : {
            "type" : "string",
            "description" : "A hostname",
            "example" : "venafi.com"
          },
          "port" : {
            "type" : "integer",
            "description" : "A port number",
            "format" : "int32",
            "example" : 443
          },
          "instanceChainValidationStatus" : {
            "type" : "array",
            "description" : "A collection of the instance chain validation status",
            "example" : [ "OK" ],
            "items" : {
              "type" : "string",
              "enum" : [ "OK", "CHAIN_BUILDING_FAILED", "INCOMPLETE_CHAIN", "CHAIN_EXPIRE_BEFORE_EE", "DISTRUSTED", "UNKNOWN_ERROR", "SELF_SIGNED" ]
            }
          },
          "sslValidationStatus" : {
            "type" : "string",
            "description" : "SSL validation status",
            "example" : "OK",
            "enum" : [ "HOSTNAME_NOT_RESOLVABLE", "NO_CERTIFICATE_PRESENTED", "INVALID_CERTIFICATE_FOUND", "UNEXPECTED_CERTIFICATE_FOUND", "OLD_VERSION_CERTIFICATE_FOUND", "TARGET_UNREACHABLE", "UNKNOWN_ERROR", "OK" ]
          },
          "sslValidationStatusMessage" : {
            "type" : "string",
            "description" : "SSL validation status message",
            "example" : "Certificate installation is using older versions of certificate"
          },
          "sslValidationErrorArguments" : {
            "type" : "array",
            "description" : "A collection of ssl validation error arguments",
            "example" : [ "B69950CC5F51EDDF55F36AD2BC898767BC43CC2A", "24E5796GA7298E78EDE47D6FAED0790E8F464G54" ],
            "items" : {
              "type" : "string"
            }
          },
          "sslProtocols" : {
            "type" : "array",
            "description" : "A collection of ssl protocols",
            "example" : [ "TLSv1.1", "TLSv1.2" ],
            "items" : {
              "type" : "string"
            }
          },
          "lastScanDate" : {
            "type" : "string",
            "description" : "The last scan date",
            "format" : "date-time",
            "example" : "2023-01-10T09:12:28Z"
          },
          "lastValidatedAttempt" : {
            "type" : "string",
            "description" : "The last validation attempt date",
            "format" : "date-time",
            "example" : "2023-01-11T09:12:28Z"
          },
          "modificationDate" : {
            "type" : "string",
            "description" : "The last modification date",
            "format" : "date-time",
            "example" : "2023-01-10T09:12:28Z"
          },
          "applicationIds" : {
            "type" : "array",
            "description" : "A collection of application IDs",
            "example" : [ "d3cce873-6957-4071-a65e-7676c0ae1123", "322bcd99-286a-47ea-8dcd-8291ec5bff14" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "serviceIds" : {
            "type" : "array",
            "description" : "A collection of service IDs",
            "example" : [ "1d61e9e0-9046-11ed-bf12-53a1b041cf2" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "deploymentStatus" : {
            "type" : "string",
            "description" : "The deployment status",
            "example" : "IN_USE",
            "enum" : [ "UNKNOWN", "IN_USE", "SUPERSEDED" ]
          }
        }
      },
      "CertificateOwnership" : {
        "type" : "object",
        "properties" : {
          "owningContainers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedApplicationOwnership"
            }
          }
        }
      },
      "ExtendedApplicationOwnership" : {
        "type" : "object",
        "properties" : {
          "owningUsers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "owningTeams" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "GeneralNamesData" : {
        "type" : "object",
        "properties" : {
          "otherName" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "rfc822Name" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "dNSName" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "x400Address" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "directoryName" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ediPartyName" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "uniformResourceIdentifier" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "iPAddress" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "registeredID" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A certificate subject alternative name by type",
        "example" : {
          "dNSName" : [ "www.venafi.com", "venafi.com" ]
        }
      },
      "ErrorInformation" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          },
          "args" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnyValue"
            }
          }
        }
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorInformation"
            }
          }
        }
      },
      "ApplicationsAssignRequest" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "enum" : [ "REPLACE", "ADD", "DELETE", "DELETE_ALL" ]
          },
          "certificateIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "targetedApplicationIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      },
      "CertificateAuthorityProductInformation" : {
        "type" : "object",
        "properties" : {
          "productName" : {
            "type" : "string"
          },
          "productTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SSL", "CODESIGN" ]
            }
          },
          "validityPeriod" : {
            "type" : "string",
            "description" : "ISO8601 Period Format",
            "example" : "PnYnMnDTnHnMnS"
          },
          "certificateType" : {
            "type" : "string",
            "enum" : [ "OTHER", "DOMAIN_VALIDATED_SSL" ]
          },
          "hashAlgorithm" : {
            "type" : "string",
            "enum" : [ "MD5", "SHA1", "MD2", "SHA224", "SHA256", "SHA384", "SHA512", "UNKNOWN", "GOSTR3411_94" ]
          }
        }
      },
      "CertificateIssuingTemplateInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "certificateAuthority" : {
            "type" : "string",
            "enum" : [ "MOCKCA", "DIGICERT", "GLOBALSIGN", "BUILTIN", "ENTRUST", "MICROSOFT", "ACME", "ZTPKI", "GLOBALSIGNMSSL", "TPP", "CONNECTOR" ]
          },
          "certificateAuthorityAccountId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "certificateAuthorityProductOptionId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "product" : {
            "$ref" : "#/components/schemas/CertificateAuthorityProductInformation"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "systemGenerated" : {
            "type" : "boolean"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "AVAILABLE", "UNAVAILABLE" ]
          },
          "reason" : {
            "type" : "string"
          },
          "subjectCNRegexes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "subjectORegexes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "subjectOURegexes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "subjectSTRegexes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "subjectLRegexes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "subjectCValues" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sanRegexes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sanDnsNameRegexes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sanRfc822NameRegexes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sanIpAddressRegexes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sanUniformResourceIdentifierRegexes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "keyTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyTypeInformation"
            }
          },
          "keyReuse" : {
            "type" : "boolean"
          },
          "csrUploadAllowed" : {
            "type" : "boolean"
          },
          "keyGeneratedByVenafiAllowed" : {
            "type" : "boolean"
          },
          "recommendedSettings" : {
            "$ref" : "#/components/schemas/RecommendedSettingsInformation"
          },
          "productEntitlement" : {
            "type" : "string",
            "enum" : [ "ANY", "MIRA", "DEVOPS", "OUTAGE_DETECTION", "CODESIGN" ]
          },
          "resourceConsumerUserIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "resourceConsumerTeamIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "everyoneIsConsumer" : {
            "type" : "boolean"
          },
          "validityPeriod" : {
            "type" : "string",
            "description" : "ISO8601 Period Format",
            "example" : "PnYnMnDTnHnMnS"
          },
          "productEntitlements" : {
            "type" : "string",
            "writeOnly" : true,
            "enum" : [ "ANY", "MIRA", "DEVOPS", "OUTAGE_DETECTION", "CODESIGN" ]
          }
        }
      },
      "ECKeyTypeInformation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/KeyTypeInformation"
        }, {
          "type" : "object",
          "properties" : {
            "keyCurves" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "P256", "P384", "P521", "ED25519", "UNKNOWN" ]
              }
            }
          }
        } ]
      },
      "KeyTypeInformation" : {
        "type" : "object",
        "properties" : {
          "keyType" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "keyType"
        }
      },
      "RSAKeyTypeInformation" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/KeyTypeInformation"
        }, {
          "type" : "object",
          "properties" : {
            "keyLengths" : {
              "type" : "array",
              "items" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          }
        } ]
      },
      "RecommendedSettingsInformation" : {
        "type" : "object",
        "properties" : {
          "subjectCNRegexes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "subjectOValue" : {
            "type" : "string"
          },
          "subjectOUValue" : {
            "type" : "string"
          },
          "subjectSTValue" : {
            "type" : "string"
          },
          "subjectLValue" : {
            "type" : "string"
          },
          "subjectCValue" : {
            "type" : "string"
          },
          "sanRegexes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "key" : {
            "$ref" : "#/components/schemas/RecommendedSettingsKeyTypeInformation"
          }
        }
      },
      "RecommendedSettingsKeyTypeInformation" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "RSA", "EC" ]
          },
          "length" : {
            "type" : "integer",
            "format" : "int32"
          },
          "curve" : {
            "type" : "string",
            "enum" : [ "P256", "P384", "P521", "ED25519", "UNKNOWN" ]
          }
        }
      },
      "ApplicationInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "ownerIdsAndTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OwnerIdAndType"
            }
          },
          "owningUsers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserInformation"
            }
          },
          "owningTeams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TeamInformation"
            }
          },
          "owningServiceAccounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceAccountInformation"
            }
          },
          "fullyQualifiedDomainNames" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ipRanges" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ports" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "certificateIssuingTemplateAliasIdMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ownership" : {
            "$ref" : "#/components/schemas/ApplicationOwnership"
          }
        }
      },
      "ApplicationOwnership" : {
        "type" : "object",
        "properties" : {
          "owningUsers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "owningTeams" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      },
      "ApplicationResponse" : {
        "type" : "object",
        "properties" : {
          "applications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApplicationInformation"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ownershipCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "OwnerIdAndType" : {
        "required" : [ "ownerId", "ownerType" ],
        "type" : "object",
        "properties" : {
          "ownerId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ownerType" : {
            "type" : "string",
            "enum" : [ "USER", "TEAM", "SERVICE_ACCOUNT" ]
          }
        }
      },
      "ServiceAccountInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "authenticationType" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "owner" : {
            "type" : "string",
            "format" : "uuid"
          },
          "applications" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "applicationsAdded" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "applicationsRemoved" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "roles" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tenantId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "authType" : {
            "type" : "string"
          },
          "ownership" : {
            "type" : "object",
            "additionalProperties" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "uuid"
              }
            }
          },
          "urlprefix" : {
            "type" : "string"
          },
          "serviceAccount" : {
            "type" : "boolean"
          },
          "userAccount" : {
            "type" : "boolean"
          }
        }
      },
      "TeamInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "systemRoles" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SYSTEM_ADMIN", "CONDOR_METRICS" ]
            }
          },
          "productRoles" : {
            "type" : "object",
            "additionalProperties" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "SECURITY_ADMIN", "DEVOPS_LEAD", "DEVOPS_USER", "OUTAGEDETECTION_ADMIN", "RESOURCE_OWNER", "PKI_ADMIN", "GUEST", "PLATFORM_ADMIN" ]
              }
            }
          },
          "members" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "owners" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ownership" : {
            "type" : "object",
            "additionalProperties" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "uuid"
              }
            }
          }
        }
      },
      "UserInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "username" : {
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "userStatus" : {
            "type" : "string"
          },
          "userType" : {
            "type" : "string"
          },
          "userAccountType" : {
            "type" : "string"
          },
          "systemRoles" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SYSTEM_ADMIN", "CONDOR_METRICS" ]
            }
          },
          "productRoles" : {
            "type" : "object",
            "additionalProperties" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "SECURITY_ADMIN", "DEVOPS_LEAD", "DEVOPS_USER", "OUTAGEDETECTION_ADMIN", "RESOURCE_OWNER", "PKI_ADMIN", "GUEST", "PLATFORM_ADMIN" ]
              }
            }
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ownedTeams" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "memberedTeams" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "admin" : {
            "type" : "boolean"
          },
          "resourceOwner" : {
            "type" : "boolean"
          },
          "teamsIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "serviceAccount" : {
            "type" : "boolean"
          }
        }
      },
      "ApplicationRequest" : {
        "required" : [ "name", "ownerIdsAndTypes" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "An application name",
            "example" : "dev app"
          },
          "ownerIdsAndTypes" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "Represents a collection of ownership UUIDs and types.",
            "example" : [ {
              "ownerId" : "f94c36a4-31b3-4aaf-a5c9-83fc7277db9f",
              "ownerType" : "USER"
            }, {
              "ownerId" : "2f796153-33e8-48d6-82e0-cc3b259f78ec",
              "ownerType" : "TEAM"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/OwnerIdAndType"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "A description for an applications",
            "example" : "this application will hold dev certificates"
          },
          "fqdns" : {
            "type" : "array",
            "description" : "A collection of FQDNs",
            "example" : [ "venafi.docs.com", "api.venafi" ],
            "items" : {
              "type" : "string"
            }
          },
          "internalFqdns" : {
            "type" : "array",
            "description" : "Represents a collection of fully qualified domain names (FQDNs) used for internal purposes.",
            "example" : [ "internal.venafi.docs", "internal.api.venafi" ],
            "items" : {
              "type" : "string"
            }
          },
          "internalIpRanges" : {
            "type" : "array",
            "description" : "epresents a collection of internal IP ranges.",
            "example" : [ "127.254.0.0/16", "127.2.3.0/32" ],
            "items" : {
              "type" : "string"
            }
          },
          "externalIpRanges" : {
            "type" : "array",
            "description" : "Represents a collection of external IP ranges.",
            "example" : [ "127.254.0.0/16", "192.2.3.0/32" ],
            "items" : {
              "type" : "string"
            }
          },
          "internalPorts" : {
            "type" : "array",
            "description" : "Represents a collection of external ports.",
            "example" : [ "8080", "9090" ],
            "items" : {
              "type" : "string"
            }
          },
          "fullyQualifiedDomainNames" : {
            "type" : "array",
            "description" : "Represents a collection of fully qualified domain names (FQDNs).",
            "example" : [ "internal.venafi.docs", "internal.api.venafi" ],
            "items" : {
              "type" : "string"
            }
          },
          "ipRanges" : {
            "type" : "array",
            "description" : "Represents a collection of CIDR (Classless Inter-Domain Routing) ranges.",
            "example" : [ "127.254.0.0/16", "192.2.3.0/32" ],
            "items" : {
              "type" : "string"
            }
          },
          "ports" : {
            "type" : "array",
            "description" : "Represents a collection of network ports.",
            "example" : [ "443", "7776" ],
            "items" : {
              "type" : "string"
            }
          },
          "certificateIssuingTemplateAliasIdMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Represents a mapping of certificate issuing template aliases to their UUIDs.",
              "format" : "uuid"
            },
            "description" : "Represents a mapping of certificate issuing template aliases to their UUIDs.",
            "example" : {
              "qa-cit" : "448de2a0-1159-40f0-b3ae-e4f712577e87",
              "dev-cit" : "20bcb9a1-0f9c-407e-9673-b048c3d6479d"
            }
          },
          "startTargetedDiscovery" : {
            "type" : "boolean",
            "description" : "Specifies whether to start target discovery."
          }
        }
      },
      "MetadataInformation" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "productEntitlement" : {
            "type" : "string",
            "enum" : [ "ANY", "MIRA", "DEVOPS", "OUTAGE_DETECTION", "CODESIGN" ]
          }
        }
      },
      "ProviderConfigInformation" : {
        "type" : "object",
        "properties" : {
          "api_key" : {
            "type" : "string"
          },
          "endpoint" : {
            "type" : "string"
          }
        }
      },
      "ProviderInformation" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "config" : {
            "$ref" : "#/components/schemas/ProviderConfigInformation"
          },
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderInputInformation"
            }
          }
        }
      },
      "ProviderInputInformation" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "subnet" : {
            "type" : "string"
          },
          "hosts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ports" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ScanafiConfigResponseV1" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/MetadataInformation"
          },
          "provider" : {
            "$ref" : "#/components/schemas/ProviderInformation"
          }
        }
      },
      "InvitationInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "productRoles" : {
            "type" : "object",
            "additionalProperties" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "SECURITY_ADMIN", "DEVOPS_LEAD", "DEVOPS_USER", "OUTAGEDETECTION_ADMIN", "RESOURCE_OWNER", "PKI_ADMIN", "GUEST", "PLATFORM_ADMIN" ]
              }
            }
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "InvitationResponse" : {
        "type" : "object",
        "properties" : {
          "invitations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InvitationInformation"
            }
          }
        }
      },
      "InvitationRequest" : {
        "required" : [ "role" ],
        "type" : "object",
        "properties" : {
          "role" : {
            "type" : "string",
            "enum" : [ "SECURITY_ADMIN", "DEVOPS_LEAD", "DEVOPS_USER", "OUTAGEDETECTION_ADMIN", "RESOURCE_OWNER", "PKI_ADMIN", "GUEST", "PLATFORM_ADMIN" ]
          }
        }
      },
      "CertificateAggregatesResponse" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string",
            "description" : "UUID of a company.",
            "format" : "uuid"
          },
          "certificateAggregatesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/CertificateCategoryInformation"
            }
          }
        }
      },
      "CertificateCategoryInformation" : {
        "type" : "object",
        "properties" : {
          "certificatesCount" : {
            "type" : "integer",
            "description" : "Total number of certificate installations.",
            "format" : "int64"
          },
          "certificateCategoryAggregatesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "CertificateAggregatesRangeResponse" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string",
            "description" : "UUID of a company.",
            "format" : "uuid"
          },
          "certificateAggregatesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "Bucket" : {
        "type" : "object",
        "properties" : {
          "first" : {
            "type" : "string"
          },
          "second" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NestedFacet"
            }
          }
        }
      },
      "FacetResponse" : {
        "type" : "object",
        "properties" : {
          "aggregates" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "buckets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Bucket"
            }
          }
        }
      },
      "NestedBucket" : {
        "type" : "object",
        "properties" : {
          "first" : {
            "type" : "string"
          },
          "second" : {
            "type" : "array",
            "description" : "Nested buckets of facets",
            "items" : {
              "$ref" : "#/components/schemas/AnyValue"
            }
          }
        }
      },
      "NestedFacet" : {
        "type" : "object",
        "properties" : {
          "aggregates" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "buckets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NestedBucket"
            }
          }
        }
      },
      "CertificateAggregationsRequest" : {
        "required" : [ "facet" ],
        "type" : "object",
        "properties" : {
          "expression" : {
            "$ref" : "#/components/schemas/Expression"
          },
          "facet" : {
            "$ref" : "#/components/schemas/Facet"
          },
          "includeRetired" : {
            "type" : "boolean",
            "description" : "Displays list of retired certificates matching the criteria. The default is false (exclude retired certificates)."
          }
        }
      },
      "Expression" : {
        "type" : "object"
      },
      "Facet" : {
        "type" : "object",
        "properties" : {
          "facets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Facet"
            }
          },
          "domain" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AnyValue"
            }
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "CertificateInstallationsUsageResponse" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UnassignedCertificateAggregatesResponse" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string",
            "description" : "UUID of a company.",
            "format" : "uuid"
          },
          "certificateAggregatesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "ExtendedCertificateInstanceInformation" : {
        "type" : "object",
        "properties" : {
          "certificateInstanceId" : {
            "type" : "string",
            "description" : "UUID of a certificate instance",
            "format" : "uuid",
            "example" : "f68daf30-4690-45bc-85b3-bb327024735e"
          },
          "certificateId" : {
            "type" : "string",
            "description" : "UUID of a certificate",
            "format" : "uuid",
            "example" : "2eb29780-9046-11ed-8e50-b994b27d2ece"
          },
          "certificateSource" : {
            "type" : "string",
            "description" : "Certificate source",
            "example" : "USER_SCAN",
            "enum" : [ "UNKNOWN", "USER_PROVIDED", "USER_IMPORTED", "USER_SCAN", "TRUSTNET_SCAN", "ON_PREM_CA_IMPORT", "EXTERNAL_CA_IMPORT", "FILE_IMPORT", "EXTERNAL_SCAN", "DOMAIN_SCAN", "SMART_SCAN_INTERNAL", "SMART_SCAN_EXTERNAL", "SMART_VALIDATION_INTERNAL", "SMART_VALIDATION_EXTERNAL", "MACHINE_DISCOVERY", "KUBERNETES_DISCOVERY", "AWS_DISCOVERY", "AKAMAI_DISCOVERY", "AZURE_DISCOVERY", "GCP_DISCOVERY" ]
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "An ip address",
            "example" : "14.183.1.32"
          },
          "hostname" : {
            "type" : "string",
            "description" : "A hostname",
            "example" : "venafi.com"
          },
          "port" : {
            "type" : "integer",
            "description" : "A port number",
            "format" : "int32",
            "example" : 443
          },
          "instanceChainValidationStatus" : {
            "type" : "array",
            "description" : "A collection of the instance chain validation status",
            "example" : [ "OK" ],
            "items" : {
              "type" : "string",
              "enum" : [ "OK", "CHAIN_BUILDING_FAILED", "INCOMPLETE_CHAIN", "CHAIN_EXPIRE_BEFORE_EE", "DISTRUSTED", "UNKNOWN_ERROR", "SELF_SIGNED" ]
            }
          },
          "sslValidationStatus" : {
            "type" : "string",
            "description" : "SSL validation status",
            "example" : "OK",
            "enum" : [ "HOSTNAME_NOT_RESOLVABLE", "NO_CERTIFICATE_PRESENTED", "INVALID_CERTIFICATE_FOUND", "UNEXPECTED_CERTIFICATE_FOUND", "OLD_VERSION_CERTIFICATE_FOUND", "TARGET_UNREACHABLE", "UNKNOWN_ERROR", "OK" ]
          },
          "sslValidationStatusMessage" : {
            "type" : "string",
            "description" : "SSL validation status message",
            "example" : "Certificate installation is using older versions of certificate"
          },
          "sslValidationErrorArguments" : {
            "type" : "array",
            "description" : "A collection of ssl validation error arguments",
            "example" : [ "B69950CC5F51EDDF55F36AD2BC898767BC43CC2A", "24E5796GA7298E78EDE47D6FAED0790E8F464G54" ],
            "items" : {
              "type" : "string"
            }
          },
          "sslProtocols" : {
            "type" : "array",
            "description" : "A collection of ssl protocols",
            "example" : [ "TLSv1.1", "TLSv1.2" ],
            "items" : {
              "type" : "string"
            }
          },
          "lastScanDate" : {
            "type" : "string",
            "description" : "The last scan date",
            "format" : "date-time",
            "example" : "2023-01-10T09:12:28Z"
          },
          "lastValidatedAttempt" : {
            "type" : "string",
            "description" : "The last validation attempt date",
            "format" : "date-time",
            "example" : "2023-01-11T09:12:28Z"
          },
          "modificationDate" : {
            "type" : "string",
            "description" : "The last modification date",
            "format" : "date-time",
            "example" : "2023-01-10T09:12:28Z"
          },
          "applicationIds" : {
            "type" : "array",
            "description" : "A collection of application IDs",
            "example" : [ "d3cce873-6957-4071-a65e-7676c0ae1123", "322bcd99-286a-47ea-8dcd-8291ec5bff14" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "serviceIds" : {
            "type" : "array",
            "description" : "A collection of service IDs",
            "example" : [ "1d61e9e0-9046-11ed-bf12-53a1b041cf2" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "deploymentStatus" : {
            "type" : "string",
            "description" : "The deployment status",
            "example" : "IN_USE",
            "enum" : [ "UNKNOWN", "IN_USE", "SUPERSEDED" ]
          },
          "certificate" : {
            "$ref" : "#/components/schemas/CertificateInformation"
          }
        }
      },
      "ExtendedCertificateInstanceResponse" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "instances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedCertificateInstanceInformation"
            }
          }
        }
      },
      "BaseFilter" : {
        "type" : "object",
        "description" : "Root expression for filtering",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/FilterOperands"
        }, {
          "$ref" : "#/components/schemas/FilterOperand"
        }, {
          "$ref" : "#/components/schemas/Condition"
        } ]
      },
      "BaseOrdering" : {
        "type" : "object",
        "properties" : {
          "orders" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Order"
            }
          }
        },
        "description" : "Specify the ordering of a search result"
      },
      "Condition" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string",
            "description" : "Represents a field for filtering",
            "example" : "certificateName"
          },
          "operator" : {
            "type" : "string",
            "description" : "An operator for filtering",
            "example" : "EQ",
            "enum" : [ "EQ", "LT", "LTE", "GT", "GTE", "MATCH", "FIND", "IN" ]
          },
          "values" : {
            "type" : "array",
            "description" : "represents a field's values",
            "example" : [ "venafi.com", "www.venafi.com" ],
            "items" : {
              "type" : "string"
            }
          },
          "value" : {
            "type" : "string",
            "description" : "represents a field's value",
            "example" : "venafi.com"
          }
        },
        "description" : "A Condition for filtering"
      },
      "Filter" : {
        "type" : "object",
        "properties" : {
          "expression" : {
            "$ref" : "#/components/schemas/BaseFilter"
          },
          "ordering" : {
            "$ref" : "#/components/schemas/BaseOrdering"
          },
          "paging" : {
            "$ref" : "#/components/schemas/Page"
          }
        }
      },
      "FilterOperand" : {
        "type" : "object",
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "An operator for filtering",
            "example" : "NOT",
            "enum" : [ "NOT" ]
          },
          "operand" : {
            "$ref" : "#/components/schemas/Condition"
          }
        }
      },
      "FilterOperands" : {
        "type" : "object",
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "An operator for filtering",
            "example" : "OR",
            "enum" : [ "AND", "OR" ]
          },
          "operands" : {
            "type" : "array",
            "description" : "A list of conditions that will be used for filtering",
            "example" : [ {
              "field" : "certificateStatus",
              "operator" : "EQ",
              "value" : "ACTIVE"
            }, {
              "field" : "certificateName",
              "operator" : "EQ",
              "value" : "venafi.com"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/BaseFilter"
            }
          }
        }
      },
      "Order" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string",
            "description" : "A field, that will be used for ordering",
            "example" : "modificationDate"
          },
          "direction" : {
            "type" : "string",
            "description" : "An ordering direction",
            "example" : "DESC",
            "enum" : [ "ASC", "DESC" ]
          }
        }
      },
      "Page" : {
        "type" : "object",
        "properties" : {
          "pageSize" : {
            "type" : "integer",
            "description" : "page size",
            "format" : "int32",
            "example" : 10
          },
          "pageNumber" : {
            "type" : "integer",
            "description" : "page number",
            "format" : "int32",
            "example" : 0
          }
        },
        "description" : "Specify pagination on the search request"
      },
      "CertificateInstanceSearchRequest" : {
        "type" : "object",
        "properties" : {
          "expression" : {
            "$ref" : "#/components/schemas/Expression"
          },
          "ordering" : {
            "$ref" : "#/components/schemas/Ordering"
          },
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          }
        }
      },
      "OrderObject" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string"
          },
          "direction" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          }
        }
      },
      "Ordering" : {
        "type" : "object",
        "properties" : {
          "orders" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrderObject"
            }
          }
        }
      },
      "Paging" : {
        "type" : "object",
        "properties" : {
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EntityTag" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "weak" : {
            "type" : "boolean"
          }
        }
      },
      "Link" : {
        "type" : "object",
        "properties" : {
          "rel" : {
            "type" : "string"
          },
          "uriBuilder" : {
            "$ref" : "#/components/schemas/UriBuilder"
          },
          "rels" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "title" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "uri" : {
            "type" : "string",
            "format" : "uri"
          },
          "params" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "MediaType" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "subtype" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "wildcardType" : {
            "type" : "boolean"
          },
          "wildcardSubtype" : {
            "type" : "boolean"
          }
        }
      },
      "MultivaluedMapStringObject" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/AnyValue"
          }
        }
      },
      "MultivaluedMapStringString" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "NewCookie" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "path" : {
            "type" : "string"
          },
          "domain" : {
            "type" : "string"
          },
          "comment" : {
            "type" : "string"
          },
          "maxAge" : {
            "type" : "integer",
            "format" : "int32"
          },
          "expiry" : {
            "type" : "string",
            "format" : "date-time"
          },
          "secure" : {
            "type" : "boolean"
          },
          "httpOnly" : {
            "type" : "boolean"
          },
          "sameSite" : {
            "type" : "string",
            "enum" : [ "NONE", "LAX", "STRICT" ]
          }
        }
      },
      "Response" : {
        "type" : "object",
        "properties" : {
          "entityTag" : {
            "$ref" : "#/components/schemas/EntityTag"
          },
          "stringHeaders" : {
            "type" : "object",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "mediaType" : {
            "$ref" : "#/components/schemas/MediaType"
          },
          "status" : {
            "type" : "integer",
            "format" : "int32"
          },
          "entity" : {
            "$ref" : "#/components/schemas/AnyValue"
          },
          "length" : {
            "type" : "integer",
            "format" : "int32"
          },
          "location" : {
            "type" : "string",
            "format" : "uri"
          },
          "language" : {
            "type" : "object",
            "properties" : {
              "language" : {
                "type" : "string"
              },
              "displayName" : {
                "type" : "string"
              },
              "country" : {
                "type" : "string"
              },
              "variant" : {
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              },
              "unicodeLocaleAttributes" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "unicodeLocaleKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "displayLanguage" : {
                "type" : "string"
              },
              "displayScript" : {
                "type" : "string"
              },
              "displayCountry" : {
                "type" : "string"
              },
              "displayVariant" : {
                "type" : "string"
              },
              "extensionKeys" : {
                "uniqueItems" : true,
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "iso3Language" : {
                "type" : "string"
              },
              "iso3Country" : {
                "type" : "string"
              }
            }
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModified" : {
            "type" : "string",
            "format" : "date-time"
          },
          "closed" : {
            "type" : "boolean"
          },
          "links" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Link"
            }
          },
          "metadata" : {
            "type" : "object",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AnyValue"
              }
            }
          },
          "cookies" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/NewCookie"
            }
          },
          "statusInfo" : {
            "$ref" : "#/components/schemas/StatusType"
          },
          "allowedMethods" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "headers" : {
            "type" : "object",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AnyValue"
              }
            }
          }
        }
      },
      "StatusType" : {
        "type" : "object",
        "properties" : {
          "reasonPhrase" : {
            "type" : "string"
          },
          "family" : {
            "type" : "string",
            "enum" : [ "INFORMATIONAL", "SUCCESSFUL", "REDIRECTION", "CLIENT_ERROR", "SERVER_ERROR", "OTHER" ]
          },
          "statusCode" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UriBuilder" : {
        "type" : "object"
      },
      "CertificateInstanceValidationRequest" : {
        "required" : [ "instanceIds" ],
        "type" : "object",
        "properties" : {
          "instanceIds" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "Unique certificate instance id(s) containing numbers, letters and dashes.",
            "example" : [ "7860eedb-c140-4354-b0ad-991cc7a7b4d1", "0b0f6424-30bc-4ed8-ae83-cdeca3eaf60e" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      },
      "CertificateRequestDocumentInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "UUID of a certificate request",
            "format" : "uuid",
            "example" : "fa4a2210-9135-11ed-a8f1-bf0e7991f912"
          },
          "companyId" : {
            "type" : "string",
            "description" : "UUID of a company",
            "format" : "uuid",
            "example" : "85595df0-8e14-11ed-87e3-755db050f29d"
          },
          "applicationId" : {
            "type" : "string",
            "description" : "UUID of an application ID",
            "format" : "uuid",
            "example" : "dc6eb020-9131-11ed-9ce4-1d9554d648cd"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the certificate request",
            "example" : "ISSUED",
            "enum" : [ "NEW", "PENDING", "PENDING_APPROVAL", "PENDING_FINAL_APPROVAL", "REJECTED_APPROVAL", "REQUESTED", "ISSUED", "REJECTED", "CANCELLED", "REVOKED", "FAILED", "DELETED" ]
          },
          "errorInformation" : {
            "$ref" : "#/components/schemas/ErrorInformation"
          },
          "certificateOwnerUserId" : {
            "type" : "string",
            "description" : "UUID of the certificate request's owner",
            "format" : "uuid",
            "example" : "88932c30-8e14-11ed-87e3-755db050f29d"
          },
          "certificateIssuingTemplateId" : {
            "type" : "string",
            "description" : "UUID of certificate issuing template",
            "format" : "uuid",
            "example" : "ce9c2cc0-9131-11ed-a8f1-bf0e7991f912"
          },
          "caOrderId" : {
            "type" : "string",
            "description" : "A CA order ID",
            "example" : "63364861"
          },
          "certificateIds" : {
            "type" : "array",
            "description" : "A collection of certificate ids",
            "example" : [ "1441c6f0-9136-11ed-bd65-ed926a033704", "12257370-9132-11ed-bd65-ed926a033704" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "subjectDN" : {
            "type" : "string",
            "description" : "Certificate request subject DN",
            "example" : "cn=venafi.com,ou=devops,o=venafi,c=US,st=Utah,l=Salt Lake City"
          },
          "subjectCN" : {
            "type" : "string",
            "description" : "Certificate request subject CN",
            "example" : "venafi.com"
          },
          "customAttributes" : {
            "$ref" : "#/components/schemas/CustomAttributes"
          },
          "keyLength" : {
            "type" : "integer",
            "description" : "Certificate request key length",
            "format" : "int32",
            "example" : 2048
          },
          "keyCurve" : {
            "type" : "string",
            "description" : "Certificate request key curve",
            "example" : "P521",
            "enum" : [ "P256", "P384", "P521", "ED25519", "UNKNOWN" ]
          },
          "keyType" : {
            "type" : "string",
            "description" : "Certificate request key type",
            "example" : "RSA",
            "enum" : [ "RSA", "DSA", "EC", "GOST3410", "ECGOST3410", "RESERVED3", "UNKNOWN" ]
          },
          "creationDate" : {
            "type" : "string",
            "description" : "The date a certificate request was created",
            "format" : "date-time",
            "example" : "2022-01-20T09:12:28Z"
          },
          "modificationDate" : {
            "type" : "string",
            "description" : "The date a certificate request was modified",
            "format" : "date-time",
            "example" : "2023-01-24T09:12:28Z"
          },
          "subjectAlternativeNamesByType" : {
            "$ref" : "#/components/schemas/GeneralNamesData"
          },
          "validityPeriod" : {
            "type" : "string",
            "description" : "ISO8601 Period Format",
            "example" : "P10M"
          },
          "tags" : {
            "type" : "array",
            "description" : "A collection of tags",
            "example" : [ "test", "category:security" ],
            "items" : {
              "type" : "string"
            }
          },
          "approverUserIds" : {
            "type" : "array",
            "description" : "A collection of all user IDs that are configured as approvers",
            "example" : "[f196eb0-71cb-11ed-9749-93c174f3c18d, f196eb0-81av-11ed-9749-93c174f3c18d]",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "approverTeamIds" : {
            "type" : "array",
            "description" : "A collection of all team IDs that are configured as approvers",
            "example" : "[f196eb0-71cb-11ed-9749-93c174f3c18d, f196eb0-81av-11ed-9749-93c174f3c18d]",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "finalApproverId" : {
            "type" : "string",
            "description" : "UUID of the final approver if configured",
            "format" : "uuid",
            "example" : "dc6eb020-9131-11ed-9ce4-1d9554d648cd"
          },
          "approvedIds" : {
            "type" : "array",
            "description" : "A collection of IDs of all users that have already approved",
            "example" : "[f196eb0-71cb-11ed-9749-93c174f3c18d, f196eb0-81av-11ed-9749-93c174f3c18d]",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      },
      "CertificateRequestDocumentResponse" : {
        "type" : "object",
        "properties" : {
          "numFound" : {
            "type" : "integer",
            "description" : "The number of certificate requests that were found",
            "format" : "int64",
            "example" : 10
          },
          "certificateRequests" : {
            "type" : "array",
            "description" : "A collection of certificate request information",
            "example" : [ {
              "id" : "a1c0c690-c357-11ed-a00c-e3953fcf04eb",
              "companyId" : "98996d90-b797-11ed-a508-c13aa0641666",
              "applicationId" : "813700b0-c357-11ed-aea1-99c5a9067cde",
              "status" : "ISSUED",
              "certificateOwnerUserId" : "9bf1e760-b797-11ed-a508-c13aa0641666",
              "certificateIssuingTemplateId" : "73a22290-c357-11ed-a00c-e3953fcf04eb",
              "caOrderId" : "3a:5f:7e:9f:8c:e4:b6:f7:25:a7:81:0d:f0:ac:28:ec:fe:05:9b:30",
              "certificateIds" : [ "a27dfc10-c357-11ed-946f-7db55f9ae03e", "a275beb0-c357-11ed-946f-7db55f9ae03e", "a24c16a0-c357-11ed-946f-7db55f9ae03e" ],
              "subjectDN" : "cn=localhost,ou=devops,o=venafi,c=MX,st=Yucatan,l=Merida",
              "subjectCN" : "localhost",
              "keyLength" : 4096,
              "keyType" : "RSA",
              "creationDate" : "2023-03-15T17:34:26.466+00:00",
              "modificationDate" : "2023-03-15T17:34:27.479+00:00",
              "subjectAlternativeNamesByType" : {
                "dNSName" : [ "localhost" ]
              },
              "validityPeriod" : "P10D"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/CertificateRequestDocumentInformation"
            }
          }
        }
      },
      "CustomAttributes" : {
        "type" : "object",
        "properties" : {
          "dnsNames" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "overwriteSans" : {
            "type" : "boolean"
          }
        },
        "description" : "Certificate request custom attributes",
        "example" : {
          "dnsNames" : [ "www.venafi.com", "venafi.com" ]
        }
      },
      "CertificateRequestsSearchRequest" : {
        "type" : "object",
        "properties" : {
          "expression" : {
            "$ref" : "#/components/schemas/Expression"
          },
          "ordering" : {
            "$ref" : "#/components/schemas/Ordering"
          },
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          }
        }
      },
      "ApiClientInformation" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Client type",
            "example" : "Venafi VCert CLI"
          },
          "identifier" : {
            "type" : "string",
            "description" : "Client identifier",
            "example" : "199.121.8.74"
          }
        },
        "description" : "Represents the information of the client that is calling the API",
        "example" : {
          "type" : "Venafi VCert CLI",
          "identifier" : "192.168.1.63"
        }
      },
      "CertificateRequestInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "UUID of a certificate request",
            "format" : "uuid",
            "example" : "fa4a2210-9135-11ed-a8f1-bf0e7991f912"
          },
          "companyId" : {
            "type" : "string",
            "description" : "UUID of a company",
            "format" : "uuid",
            "example" : "85595df0-8e14-11ed-87e3-755db050f29d"
          },
          "applicationId" : {
            "type" : "string",
            "description" : "UUID of an application ID",
            "format" : "uuid",
            "example" : "dc6eb020-9131-11ed-9ce4-1d9554d648cd"
          },
          "creationDate" : {
            "type" : "string",
            "description" : "The date a certificate request was created",
            "format" : "date-time",
            "example" : "2023-01-10T09:12:28Z"
          },
          "modificationDate" : {
            "type" : "string",
            "description" : "The date a certificate request was modified",
            "format" : "date-time",
            "example" : "2023-01-11T09:12:28Z"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of a certificate request",
            "example" : "ISSUED",
            "enum" : [ "NEW", "PENDING", "PENDING_APPROVAL", "PENDING_FINAL_APPROVAL", "REJECTED_APPROVAL", "REQUESTED", "ISSUED", "REJECTED", "CANCELLED", "REVOKED", "FAILED", "DELETED" ]
          },
          "errorInformation" : {
            "$ref" : "#/components/schemas/ErrorInformation"
          },
          "certificateOwnerUserId" : {
            "type" : "string",
            "description" : "UUID of the certificate request's owner",
            "format" : "uuid",
            "example" : "88932c30-8e14-11ed-87e3-755db050f29d"
          },
          "certificateIssuingTemplateId" : {
            "type" : "string",
            "description" : "UUID of a certificate issuing template",
            "format" : "uuid",
            "example" : "ce9c2cc0-9131-11ed-a8f1-bf0e7991f912"
          },
          "caOrderId" : {
            "type" : "string",
            "description" : "A CA order ID",
            "example" : "63364861"
          },
          "certificateIds" : {
            "type" : "array",
            "description" : "A collection of certificate IDs",
            "example" : [ "1441c6f0-9136-11ed-bd65-ed926a033704", "12257370-9132-11ed-bd65-ed926a033704" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "certificateSigningRequest" : {
            "type" : "string",
            "description" : "A certificate signing request (CSR) in PEM format"
          },
          "subjectDN" : {
            "type" : "string",
            "description" : "Certificate request subject DN",
            "example" : "cn=venafi.com,ou=devops,o=venafi,c=US,st=Utah,l=Salt Lake City"
          },
          "keyCurve" : {
            "type" : "string",
            "description" : "Certificate request key curve",
            "example" : "P521",
            "enum" : [ "P256", "P384", "P521", "ED25519", "UNKNOWN" ]
          },
          "keyLength" : {
            "type" : "integer",
            "description" : "Certificate request key length",
            "format" : "int32",
            "example" : 2048
          },
          "keyType" : {
            "type" : "string",
            "description" : "Certificate request key type",
            "example" : "RSA",
            "enum" : [ "RSA", "DSA", "EC", "GOST3410", "ECGOST3410", "RESERVED3", "UNKNOWN" ]
          },
          "subjectAlternativeNamesByType" : {
            "$ref" : "#/components/schemas/GeneralNamesData"
          },
          "customAttributesInformation" : {
            "$ref" : "#/components/schemas/CustomAttributesInformation"
          },
          "apiClientInformation" : {
            "$ref" : "#/components/schemas/ApiClientInformation"
          },
          "certificateUsageMetadata" : {
            "type" : "array",
            "description" : "A collection of certificate request metadata",
            "example" : [ {
              "appName" : "venafi app1",
              "nodeName" : "venafi node 007",
              "automationMetadata" : "automation data 008"
            }, {
              "appName" : "venafi app2",
              "nodeName" : "venafi node 005",
              "automationMetadata" : "automation data 0013"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/CertificateUsageMetadata"
            }
          },
          "validityPeriod" : {
            "type" : "string",
            "description" : "ISO8601 Period Format",
            "example" : "P10M"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A collection of tags",
            "example" : [ "test", "category:security" ],
            "items" : {
              "type" : "string"
            }
          },
          "approverUserIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A collection of all user IDs that are configured as approvers",
            "example" : "[f196eb0-71cb-11ed-9749-93c174f3c18d, f196eb0-81av-11ed-9749-93c174f3c18d]",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "approverTeamIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A collection of all team IDs that are configured as approvers",
            "example" : "[f196eb0-71cb-11ed-9749-93c174f3c18d, f196eb0-81av-11ed-9749-93c174f3c18d]",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "finalApproverId" : {
            "type" : "string",
            "description" : "UUID of the final approver if configured",
            "format" : "uuid",
            "example" : "dc6eb020-9131-11ed-9ce4-1d9554d648cd"
          },
          "approvedIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A collection of IDs of all users that have already approved",
            "example" : "[f196eb0-71cb-11ed-9749-93c174f3c18d, f196eb0-81av-11ed-9749-93c174f3c18d]",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      },
      "CertificateRequestResponse" : {
        "type" : "object",
        "properties" : {
          "certificateRequests" : {
            "type" : "array",
            "description" : "A collection of certificate information",
            "example" : [ {
              "id" : "a1c0c690-c357-11ed-a00c-e3953fcf04eb",
              "companyId" : "98996d90-b797-11ed-a508-c13aa0641666",
              "applicationId" : "813700b0-c357-11ed-aea1-99c5a9067cde",
              "status" : "ISSUED",
              "certificateOwnerUserId" : "9bf1e760-b797-11ed-a508-c13aa0641666",
              "certificateIssuingTemplateId" : "73a22290-c357-11ed-a00c-e3953fcf04eb",
              "caOrderId" : "3a:5f:7e:9f:8c:e4:b6:f7:25:a7:81:0d:f0:ac:28:ec:fe:05:9b:30",
              "certificateIds" : [ "a27dfc10-c357-11ed-946f-7db55f9ae03e", "a275beb0-c357-11ed-946f-7db55f9ae03e", "a24c16a0-c357-11ed-946f-7db55f9ae03e" ],
              "subjectDN" : "cn=localhost,ou=devops,o=venafi,c=MX,st=Yucatan,l=Merida",
              "subjectCN" : "localhost",
              "keyLength" : 4096,
              "keyType" : "RSA",
              "creationDate" : "2023-03-15T17:34:26.466+00:00",
              "modificationDate" : "2023-03-15T17:34:27.479+00:00",
              "subjectAlternativeNamesByType" : {
                "dNSName" : [ "localhost" ]
              },
              "validityPeriod" : "P10D"
            }, {
              "id" : "b7502f50-c357-11ed-a00c-e3953fcf04eb",
              "companyId" : "98996d90-b797-11ed-a508-c13aa0641666",
              "applicationId" : "813700b0-c357-11ed-aea1-99c5a9067cde",
              "status" : "ISSUED",
              "certificateOwnerUserId" : "9bf1e760-b797-11ed-a508-c13aa0641666",
              "certificateIssuingTemplateId" : "73a22290-c357-11ed-a00c-e3953fcf04eb",
              "caOrderId" : "6f:b7:27:c8:2c:bd:1a:b0:6f:43:fb:8a:6b:5b:a3:a6:c2:52:38:85",
              "certificateIds" : [ "b767aef0-c357-11ed-946f-7db55f9ae03e", "a275beb0-c357-11ed-946f-7db55f9ae03e", "a24c16a0-c357-11ed-946f-7db55f9ae03e" ],
              "subjectDN" : "cn=venafi.com,ou=devops,o=venafi,c=MX,st=Yucatan,l=Merida",
              "subjectCN" : "venafi.com",
              "keyLength" : 4096,
              "keyType" : "RSA",
              "creationDate" : "2023-03-15T17:35:02.384+00:00",
              "modificationDate" : "2023-03-15T17:35:02.544+00:00",
              "subjectAlternativeNamesByType" : {
                "dNSName" : [ "venafi.com" ]
              },
              "validityPeriod" : "P12D"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/CertificateRequestInformation"
            }
          }
        }
      },
      "CertificateUsageMetadata" : {
        "type" : "object",
        "properties" : {
          "appName" : {
            "type" : "string"
          },
          "nodeName" : {
            "type" : "string"
          },
          "automationMetadata" : {
            "type" : "string"
          }
        }
      },
      "CustomAttributesInformation" : {
        "required" : [ "dnsNames" ],
        "type" : "object",
        "properties" : {
          "dnsNames" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "overwriteSans" : {
            "type" : "boolean",
            "description" : "Defines if the csr sans should be overwritten by the custom attributes dns sans"
          }
        },
        "description" : "Represents custom attributes for certificate requests",
        "example" : "        {\n            \"dnsNames\": [venafi.com, venafi.eu],\n            \"overwriteSans\": true,\n        }\n"
      },
      "CSRAttributesInformation" : {
        "type" : "object",
        "properties" : {
          "commonName" : {
            "type" : "string"
          },
          "organization" : {
            "type" : "string"
          },
          "organizationalUnits" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "locality" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "subjectAlternativeNamesByType" : {
            "$ref" : "#/components/schemas/SubjectAlternativeNamesByType"
          },
          "keyTypeParameters" : {
            "$ref" : "#/components/schemas/KeyTypeParameters"
          }
        },
        "description" : "Represents CSR attributes for certificate requests. Required when isVaaSGenerated is set to true and reuseCSR to false.",
        "example" : {
          "commonName" : "localhost",
          "organization" : "venafi",
          "organizationalUnits" : [ "devops" ],
          "locality" : "Merida",
          "state" : "Yucatan",
          "country" : "MX",
          "subjectAlternativeNamesByType" : {
            "dnsNames" : [ "localhost" ]
          },
          "keyTypeParameters" : {
            "keyType" : "RSA",
            "keyLength" : 4096,
            "keyCurve" : "P256"
          }
        }
      },
      "CertificateRequestRequest" : {
        "required" : [ "isVaaSGenerated" ],
        "type" : "object",
        "properties" : {
          "isVaaSGenerated" : {
            "type" : "boolean",
            "description" : "Specify whether VaaS should generate the request.",
            "example" : true
          },
          "csrAttributes" : {
            "$ref" : "#/components/schemas/CSRAttributesInformation"
          },
          "customAttributes" : {
            "$ref" : "#/components/schemas/CustomAttributesInformation"
          },
          "certificateSigningRequest" : {
            "type" : "string",
            "description" : "A certificate signing request(CSR) in PEM format. Required when reuseCSR and isVaaSGenerated are set to false."
          },
          "applicationId" : {
            "type" : "string",
            "description" : "Application UUID",
            "format" : "uuid",
            "example" : "b00701b0-886f-11ed-9f39-3d586ab80cf2"
          },
          "certificateIssuingTemplateId" : {
            "type" : "string",
            "description" : "Certificate issuing template UUID",
            "format" : "uuid",
            "example" : "a305d810-886f-11ed-9ccf-0dbf748eb1ae"
          },
          "certificateOwnerUserId" : {
            "type" : "string",
            "description" : "Certificate owner UUID",
            "format" : "uuid",
            "example" : "a305d810-886f-11ed-9ccf-0dbf748eb1ae"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A collection of tags",
            "example" : [ "test", "category:security" ],
            "items" : {
              "type" : "string"
            }
          },
          "existingCertificateId" : {
            "type" : "string",
            "description" : "Existing certificate UUID. Required when reuseCSR is set to true.",
            "format" : "uuid",
            "example" : "b505d810-886f-11ed-9ccf-0dbf748eb1ae"
          },
          "apiClientInformation" : {
            "$ref" : "#/components/schemas/ApiClientInformation"
          },
          "certificateUsageMetadata" : {
            "type" : "array",
            "description" : "A collection of certificate request metadata",
            "example" : [ {
              "appName" : "venafi app1",
              "nodeName" : "venafi node 007",
              "automationMetadata" : "automation data 008"
            }, {
              "appName" : "venafi app2",
              "nodeName" : "venafi node 005",
              "automationMetadata" : "automation data 0013"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/CertificateUsageMetadata"
            }
          },
          "reuseCSR" : {
            "type" : "boolean",
            "description" : "Specifies whether an existing CSR is reused",
            "example" : true
          },
          "validityPeriod" : {
            "type" : "string",
            "description" : "ISO8601 Period Format",
            "example" : "P10M"
          }
        }
      },
      "KeyTypeParameters" : {
        "required" : [ "keyType" ],
        "type" : "object",
        "properties" : {
          "keyType" : {
            "type" : "string",
            "enum" : [ "RSA", "EC" ]
          },
          "keyLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "keyCurve" : {
            "type" : "string",
            "enum" : [ "P256", "P384", "P521", "ED25519", "UNKNOWN" ]
          }
        }
      },
      "SubjectAlternativeNamesByType" : {
        "type" : "object",
        "properties" : {
          "dnsNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "rfc822Names" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ipAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "uniformResourceIdentifiers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CertificateRequestResubmissionRequest" : {
        "type" : "object",
        "properties" : {
          "certificateIssuingTemplateId" : {
            "type" : "string",
            "description" : "Certificate issuing template UUID",
            "format" : "uuid",
            "example" : "a305d810-886f-11ed-9ccf-dbf748eb1ae0"
          },
          "certificateOwnerUserId" : {
            "type" : "string",
            "description" : "Certificate owner UUID",
            "format" : "uuid",
            "example" : "a305d810-886f-11ed-4bbe-dbf748eb1ae0"
          },
          "certificateUsageMetadata" : {
            "type" : "array",
            "description" : "A collection of certificate request metadata",
            "example" : [ {
              "appName" : "venafi app1",
              "nodeName" : "venafi node 007",
              "automationMetadata" : "automation data 008"
            }, {
              "appName" : "venafi app2",
              "nodeName" : "venafi node 005",
              "automationMetadata" : "automation data 0013"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/CertificateUsageMetadata"
            }
          },
          "validityPeriod" : {
            "type" : "string",
            "description" : "ISO8601 Period Format",
            "example" : "P10M"
          }
        }
      },
      "CertificationRequestInformation" : {
        "type" : "object",
        "properties" : {
          "subjectDN" : {
            "type" : "string",
            "description" : "A certificate request subject DN",
            "example" : "cn=www.venafi.com,o=Venafi, Inc.,c=US,st=Utah,l=Salt Lake City"
          },
          "keyCurve" : {
            "type" : "string",
            "description" : "Certificate request key length",
            "example" : "P256",
            "enum" : [ "P256", "P384", "P521", "ED25519", "UNKNOWN" ]
          },
          "keyLength" : {
            "type" : "integer",
            "description" : "Certificate request key length",
            "format" : "int32",
            "example" : 2048
          },
          "keyType" : {
            "type" : "string",
            "description" : "Certificate request key type",
            "example" : "RSA",
            "enum" : [ "RSA", "DSA", "EC", "GOST3410", "ECGOST3410", "RESERVED3", "UNKNOWN" ]
          },
          "subjectAlternativeNamesByType" : {
            "$ref" : "#/components/schemas/GeneralNamesData"
          },
          "signatureAlgorithm" : {
            "type" : "string",
            "description" : "A certificate request signature algorithm",
            "example" : "SHA256_WITH_RSA_ENCRYPTION",
            "enum" : [ "MD2_WITH_RSA_ENCRYPTION", "MD5_WITH_RSA_ENCRYPTION", "SHA1_WITH_RSA_ENCRYPTION", "SHA1_WITH_RSA_ENCRYPTION2", "SHA256_WITH_RSA_ENCRYPTION", "SHA384_WITH_RSA_ENCRYPTION", "SHA512_WITH_RSA_ENCRYPTION", "ID_DSA_WITH_SHA1", "dsaWithSHA1", "EC_DSA_WITH_SHA1", "EC_DSA_WITH_SHA224", "EC_DSA_WITH_SHA256", "EC_DSA_WITH_SHA384", "EC_DSA_WITH_SHA512", "UNKNOWN", "SHA1_WITH_RSAandMGF1", "GOST_R3411_94_WITH_GOST_R3410_2001", "GOST_R3411_94_WITH_GOST_R3410_94" ]
          },
          "hashAlgorithm" : {
            "type" : "string",
            "description" : "A certificate request signature hash algorithm",
            "example" : "SHA256",
            "enum" : [ "MD5", "SHA1", "MD2", "SHA224", "SHA256", "SHA384", "SHA512", "UNKNOWN", "GOSTR3411_94" ]
          },
          "publicKeyHash" : {
            "type" : "string",
            "description" : "A certificate request public hash key",
            "example" : "0048AA1D7E2F0017F9CA2E687D8776A1A340553D"
          }
        }
      },
      "CertificateResponse" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The number of certificates.",
            "format" : "int32",
            "example" : 2
          },
          "certificates" : {
            "type" : "array",
            "description" : "A collection of certificates",
            "items" : {
              "$ref" : "#/components/schemas/CertificateInformation"
            }
          }
        }
      },
      "CertificateSearchRequest" : {
        "type" : "object",
        "properties" : {
          "expression" : {
            "$ref" : "#/components/schemas/Expression"
          },
          "ordering" : {
            "$ref" : "#/components/schemas/Ordering"
          },
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          }
        }
      },
      "CertificateImportResponse" : {
        "type" : "object",
        "properties" : {
          "certificateInformations" : {
            "type" : "array",
            "description" : "A collection of information about certificates that were newly imported.",
            "items" : {
              "$ref" : "#/components/schemas/ImportedCertificateInformation"
            }
          },
          "statistics" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "description" : "Certificate import statistics",
              "format" : "int32"
            },
            "description" : "Certificate import statistics"
          }
        }
      },
      "ImportedCertificateInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "UUID of a Certificate",
            "format" : "uuid",
            "example" : "16cb6940-e2de-11ed-a644-4fab0ea00b60"
          },
          "managedCertificateId" : {
            "type" : "string",
            "description" : "UUID of a managed certificate",
            "format" : "uuid",
            "example" : "17488880-e2de-11ed-aed6-79d407efea73"
          },
          "companyId" : {
            "type" : "string",
            "description" : "UUID of a company",
            "format" : "uuid",
            "example" : "2d558b30-da16-11ed-8e4f-8339a1bc8d58"
          },
          "fingerprint" : {
            "type" : "string",
            "description" : "A certificate fingerprint",
            "example" : "2C85B0AD64F55AA70BAC75F69711578DC505C3F9"
          },
          "base64Certificate" : {
            "type" : "string",
            "description" : "Certificate base64 encoded format (PEM without header/footer"
          },
          "issuerCertificateIds" : {
            "type" : "array",
            "description" : "A collection of issuer certificates",
            "example" : [ "Venafi issuer", "QA Venafi issuer" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "certificateSource" : {
            "type" : "string",
            "description" : "A certificate source",
            "example" : "USER_PROVIDED",
            "enum" : [ "UNKNOWN", "USER_PROVIDED", "USER_IMPORTED", "USER_SCAN", "TRUSTNET_SCAN", "ON_PREM_CA_IMPORT", "EXTERNAL_CA_IMPORT", "FILE_IMPORT", "EXTERNAL_SCAN", "DOMAIN_SCAN", "SMART_SCAN_INTERNAL", "SMART_SCAN_EXTERNAL", "SMART_VALIDATION_INTERNAL", "SMART_VALIDATION_EXTERNAL", "MACHINE_DISCOVERY", "KUBERNETES_DISCOVERY", "AWS_DISCOVERY", "AKAMAI_DISCOVERY", "AZURE_DISCOVERY", "GCP_DISCOVERY" ]
          },
          "apiClientInformation" : {
            "$ref" : "#/components/schemas/ApiClientInformation"
          },
          "certificateUsageMetadata" : {
            "type" : "array",
            "description" : "A collection of certificate request metadata",
            "example" : [ {
              "appName" : "venafi app1",
              "nodeName" : "venafi node 007",
              "automationMetadata" : "automation data 008"
            }, {
              "appName" : "venafi app2",
              "nodeName" : "venafi node 005",
              "automationMetadata" : "automation data 0013"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/CertificateUsageMetadata"
            }
          }
        }
      },
      "CertificateImportInfo" : {
        "required" : [ "certificate" ],
        "type" : "object",
        "properties" : {
          "certificate" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Certificate base64 encoded format (PEM without header/footer"
          },
          "issuerCertificates" : {
            "type" : "array",
            "description" : "A collection of issuer certificates",
            "example" : [ "Venafi issuer", "QA Venafi issuer" ],
            "items" : {
              "type" : "string"
            }
          },
          "applicationIds" : {
            "type" : "array",
            "description" : "A collection of application IDs",
            "example" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0", "9303e940-df9d-11ed-8850-f18176fc5513" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "apiClientInformation" : {
            "$ref" : "#/components/schemas/ApiClientInformation"
          },
          "certificateUsageMetadata" : {
            "type" : "array",
            "description" : "A collection of certificate request metadata",
            "example" : [ {
              "appName" : "venafi app1",
              "nodeName" : "venafi node 007",
              "automationMetadata" : "automation data 008"
            }, {
              "appName" : "venafi app2",
              "nodeName" : "venafi node 005",
              "automationMetadata" : "automation data 0013"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/CertificateUsageMetadata"
            }
          }
        },
        "description" : "Base64 encoding certificate content."
      },
      "CertificateImportRequest" : {
        "required" : [ "certificates" ],
        "type" : "object",
        "properties" : {
          "certificates" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "Base64 encoding certificate content.",
            "items" : {
              "$ref" : "#/components/schemas/CertificateImportInfo"
            }
          },
          "overrideBlocklist" : {
            "type" : "boolean",
            "description" : "Imports the certificate even if it's present in the Certificates blocklist."
          }
        }
      },
      "CertificateDeletionRequest" : {
        "required" : [ "certificateIds" ],
        "type" : "object",
        "properties" : {
          "certificateIds" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A collection of certificates UUIDs",
            "example" : [ "f2b42d60-df9c-11ed-b8ab-4788d83ace9f", "f2c173d0-df9c-11ed-b8ab-4788d83ace9f" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      },
      "ExtendedCertificateInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "UUID of a certificate",
            "format" : "uuid",
            "example" : "2eb29780-9046-11ed-8e50-b994b27d2ece"
          },
          "companyId" : {
            "type" : "string",
            "description" : "UUID  of a company",
            "format" : "uuid",
            "example" : "85595df0-8e14-11ed-87e3-755db050f29d"
          },
          "managedCertificateId" : {
            "type" : "string",
            "description" : "UUID  of a managed certificate",
            "format" : "uuid",
            "example" : "2f0e7320-9046-11ed-8ab8-19e0a618d9cd"
          },
          "certificateRequestId" : {
            "type" : "string",
            "description" : "UUID  of a certificate request",
            "format" : "uuid",
            "example" : "2e8964a0-9046-11ed-8e50-b994b27d2ece"
          },
          "certificateAuthorityAccountId" : {
            "type" : "string",
            "description" : "UUID  of a certificate authority account",
            "format" : "uuid"
          },
          "fingerprint" : {
            "type" : "string",
            "description" : "A certificate fingerprint",
            "example" : "6D4C95512C117B004191F1A096ECAD13242FCD9F"
          },
          "certificateName" : {
            "type" : "string",
            "description" : "A certificate name",
            "example" : "venafi.com"
          },
          "issuerCertificateIds" : {
            "type" : "array",
            "description" : "A collection of issuer certificate IDs",
            "example" : [ "2e8964a0-9046-11ed-8e50-b994b27d2ece", "d5b418a0-297e-11eb-bc4c-8b24e5a66fb6" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "certificateStatus" : {
            "type" : "string",
            "description" : "Certificate's status",
            "example" : "ACTIVE",
            "enum" : [ "ACTIVE", "RETIRED", "DELETED" ]
          },
          "statusModificationUserId" : {
            "type" : "string",
            "description" : "UUID of the user that modified the certificate installation",
            "format" : "uuid",
            "example" : "3c9964a0-9046-11ed-8e50-b994b27d2ece"
          },
          "modificationDate" : {
            "type" : "string",
            "description" : "The last date a certificate was modified",
            "format" : "date-time",
            "example" : "2022-03-24T09:12:28Z"
          },
          "archivedDate" : {
            "type" : "string",
            "description" : "The date a certificate was archived",
            "format" : "date-time",
            "example" : "2022-05-24T09:12:28Z"
          },
          "statusModificationDate" : {
            "type" : "string",
            "description" : "The date a certificate's status was modified",
            "format" : "date-time",
            "example" : "2022-04-24T09:12:28Z"
          },
          "validityStart" : {
            "type" : "string",
            "description" : "The date a certificate validity starts",
            "format" : "date-time",
            "example" : "2022-01-24T09:12:28Z"
          },
          "validityEnd" : {
            "type" : "string",
            "description" : "The date a certificate validity ends",
            "format" : "date-time",
            "example" : "2023-01-24T09:12:28Z"
          },
          "selfSigned" : {
            "type" : "boolean",
            "description" : "If the certificate is self singed",
            "example" : true
          },
          "signatureAlgorithm" : {
            "type" : "string",
            "description" : "A certificate signature algorithm",
            "example" : "SHA256_WITH_RSA_ENCRYPTION",
            "enum" : [ "MD2_WITH_RSA_ENCRYPTION", "MD5_WITH_RSA_ENCRYPTION", "SHA1_WITH_RSA_ENCRYPTION", "SHA1_WITH_RSA_ENCRYPTION2", "SHA256_WITH_RSA_ENCRYPTION", "SHA384_WITH_RSA_ENCRYPTION", "SHA512_WITH_RSA_ENCRYPTION", "ID_DSA_WITH_SHA1", "dsaWithSHA1", "EC_DSA_WITH_SHA1", "EC_DSA_WITH_SHA224", "EC_DSA_WITH_SHA256", "EC_DSA_WITH_SHA384", "EC_DSA_WITH_SHA512", "UNKNOWN", "SHA1_WITH_RSAandMGF1", "GOST_R3411_94_WITH_GOST_R3410_2001", "GOST_R3411_94_WITH_GOST_R3410_94" ]
          },
          "signatureHashAlgorithm" : {
            "type" : "string",
            "description" : "A certificate signature hash algorithm",
            "example" : "SHA256",
            "enum" : [ "MD5", "SHA1", "MD2", "SHA224", "SHA256", "SHA384", "SHA512", "UNKNOWN", "GOSTR3411_94" ]
          },
          "encryptionType" : {
            "type" : "string",
            "description" : "A certificate encryption type",
            "example" : "EC",
            "enum" : [ "RSA", "DSA", "EC", "GOST3410", "ECGOST3410", "RESERVED3", "UNKNOWN" ]
          },
          "keyStrength" : {
            "type" : "integer",
            "description" : "A certificate key strength",
            "format" : "int32",
            "example" : 2048
          },
          "keyCurve" : {
            "type" : "string",
            "description" : "A certificate key curve",
            "example" : "P256",
            "enum" : [ "P256", "P384", "P521", "ED25519", "UNKNOWN" ]
          },
          "subjectKeyIdentifierHash" : {
            "type" : "string",
            "description" : "A subject key identifier hash",
            "example" : "4E0CE93D3240561F468C33A85F08FCD3B04CC9DC"
          },
          "authorityKeyIdentifierHash" : {
            "type" : "string",
            "description" : "An authority key identifier hash",
            "example" : "40572B10F85DDAF18BFF987372178532AB875BCA"
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "A certificate serial number",
            "example" : "0C51A562B02A19A222FFB4730C47A8E2"
          },
          "subjectDN" : {
            "type" : "string",
            "description" : "A certificate subject DN",
            "example" : "cn=www.venafi.com,o=Venafi, Inc.,c=US,st=Utah,l=Salt Lake City"
          },
          "subjectCN" : {
            "type" : "array",
            "description" : "A collection of certificate subject CNs",
            "example" : [ "venafi.com", "cloud.venafi" ],
            "items" : {
              "type" : "string"
            }
          },
          "subjectO" : {
            "type" : "string",
            "description" : "A certificate subject Organization",
            "example" : "Venafi, Inc."
          },
          "subjectOU" : {
            "type" : "array",
            "description" : "A collection of certificate subject Organization units",
            "example" : [ "devops", "test" ],
            "items" : {
              "type" : "string"
            }
          },
          "subjectST" : {
            "type" : "string",
            "description" : "A certificate subject State",
            "example" : "Utah"
          },
          "subjectL" : {
            "type" : "string",
            "description" : "A certificate subject Locality",
            "example" : "Salt Lake City"
          },
          "subjectC" : {
            "type" : "string",
            "description" : "A certificate subject Country",
            "example" : "US"
          },
          "subjectAlternativeNamesByType" : {
            "$ref" : "#/components/schemas/GeneralNamesData"
          },
          "subjectAlternativeNameDns" : {
            "type" : "array",
            "description" : "A collection of certificate subject alternative names DNs",
            "example" : [ "venafi.com", "www.venafi.com" ],
            "items" : {
              "type" : "string"
            }
          },
          "subjectAlternativeNameNonDns" : {
            "type" : "array",
            "description" : "A collection of certificate subject alternative name none DNs",
            "example" : [ "venafi domain" ],
            "items" : {
              "type" : "string"
            }
          },
          "issuerDN" : {
            "type" : "string",
            "description" : "A certificate issue DN",
            "example" : "cn=HydrantID SSL CA G3,o=HydrantID (Avalanche Cloud Corporation),c=US"
          },
          "issuerCN" : {
            "type" : "array",
            "description" : "A collection of certificate issuer Common names",
            "example" : [ "HydrantID SSL CA G3" ],
            "items" : {
              "type" : "string"
            }
          },
          "issuerOU" : {
            "type" : "array",
            "description" : "A collection of certificate issuer Organization units",
            "example" : [ "Issuer CA" ],
            "items" : {
              "type" : "string"
            }
          },
          "issuerST" : {
            "type" : "string",
            "description" : "A certificate issuer State",
            "example" : "Utah"
          },
          "issuerL" : {
            "type" : "string",
            "description" : "A certificate issues Locality",
            "example" : "Salt Lake City"
          },
          "issuerC" : {
            "type" : "string",
            "description" : "A certificate issues Country",
            "example" : "US"
          },
          "issuerAlternativeNameDns" : {
            "type" : "array",
            "description" : "A collection of certificate issuer alternative names DNs",
            "example" : [ "venafi.com", "www.venafi.com" ],
            "items" : {
              "type" : "string"
            }
          },
          "issuerAlternativeNameNonDns" : {
            "type" : "array",
            "description" : "A collection of certificate issuer alternative name none DNs",
            "example" : [ "venafi issuer doman" ],
            "items" : {
              "type" : "string"
            }
          },
          "keyUsage" : {
            "type" : "array",
            "description" : "A collection of certificate key usages",
            "example" : [ "digitalSignature", "keyEncipherment" ],
            "items" : {
              "type" : "string"
            }
          },
          "extendedKeyUsage" : {
            "type" : "array",
            "description" : "A collection of certificate extended key usages",
            "example" : [ "1.3.6.1.5.5.7.3.2", "1.3.6.1.5.5.7.3.1" ],
            "items" : {
              "type" : "string"
            }
          },
          "pathLength" : {
            "type" : "integer",
            "description" : "A certificate path length",
            "format" : "int32",
            "example" : 3
          },
          "ocspNoCheck" : {
            "type" : "boolean",
            "description" : "If a certificate no ocsp check",
            "example" : false
          },
          "requireExplicitPolicy" : {
            "type" : "integer",
            "description" : "Required explicit policy is required",
            "format" : "int32",
            "example" : 1
          },
          "inhibitPolicyMapping" : {
            "type" : "integer",
            "description" : "Inhibit policy mapping",
            "format" : "int32",
            "example" : 200
          },
          "inhibitAnyPolicy" : {
            "type" : "integer",
            "description" : "Inhibit any policy",
            "format" : "int32",
            "example" : 150
          },
          "versionType" : {
            "type" : "string",
            "description" : "A certificate version type",
            "example" : "CURRENT",
            "enum" : [ "OLD", "CURRENT" ]
          },
          "totalInstanceCount" : {
            "type" : "integer",
            "description" : "total instances of a certificate",
            "format" : "int32",
            "example" : 100
          },
          "totalActiveInstanceCount" : {
            "type" : "integer",
            "description" : "total active instances of a certificate",
            "format" : "int32",
            "example" : 50
          },
          "instances" : {
            "type" : "array",
            "description" : "A collection of certificate instances information",
            "example" : [ {
              "certificateInstanceId" : "7ec1bc50-9051-11ed-8e50-b994b27d2ece",
              "certificateId" : "7ec12010-9051-11ed-8e50-b994b27d2ece",
              "certificateSource" : "USER_SCAN",
              "ipAddress" : "23.185.0.2",
              "hostname" : "venafi.com",
              "port" : 443,
              "instanceChainValidationStatus" : [ "OK" ],
              "sslValidationStatus" : "OK",
              "sslValidationErrorArguments" : [ ],
              "sslProtocols" : [ "TLSv1.3", "TLSv1.2" ],
              "lastScanDate" : "2023-01-09T19:12:05.314+00:00",
              "lastValidatedAttempt" : "2023-01-09T19:12:05.446+00:00",
              "modificationDate" : "2023-01-09T19:12:14.865+00:00",
              "serviceIds" : [ "1d61e9e0-9046-11ed-bf12-53a1b041cf25" ],
              "deploymentStatus" : "IN_USE"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/CertificateInstanceInformation"
            }
          },
          "dekHash" : {
            "type" : "string",
            "description" : "A certificate dek hash",
            "example" : "RaBDrLmQ69hACXOrPU6542RBT-M-yZOkw4XKsT-r55i="
          },
          "applicationIds" : {
            "type" : "array",
            "description" : "A collection of application IDs",
            "example" : [ "561baf7c-98b7-49af-ab9c-7b3a9fea3028", "4adeba6f-0c94-4595-a5b6-babea458249f" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "tags" : {
            "type" : "array",
            "description" : "A collection of tags",
            "example" : [ "owner:test.user", "90-day" ],
            "items" : {
              "type" : "string"
            }
          },
          "ownership" : {
            "$ref" : "#/components/schemas/CertificateOwnership"
          },
          "lastNotification" : {
            "type" : "integer",
            "format" : "int32"
          },
          "issuerCertificates" : {
            "type" : "array",
            "description" : "A collection of certificate information",
            "items" : {
              "$ref" : "#/components/schemas/CertificateInformation"
            }
          }
        }
      },
      "CertificateKeystoreRequest" : {
        "type" : "object",
        "properties" : {
          "exportFormat" : {
            "type" : "string",
            "description" : "The export format",
            "example" : "JKS",
            "enum" : [ "JKS", "PKCS12", "PEM" ]
          },
          "encryptedPrivateKeyPassphrase" : {
            "type" : "string",
            "description" : "Encrypted private key passphrase",
            "example" : "EUBVIROdr5XZaK1Q9wF7f2HOXxqdCixmWkPko2AnDkFrdAwpX2"
          },
          "encryptedKeystorePassphrase" : {
            "type" : "string",
            "description" : "Encrypted keystore passphrase",
            "example" : "rseKy/Qj/euvEwRcPUE9YJDnZVLYvzYiPCRuiFOlMWHa9vjR4fu4gH9CZC5Pu6KK1uet4CIs"
          },
          "certificateLabel" : {
            "type" : "string",
            "description" : "Certificate label",
            "example" : "QA certificate"
          },
          "useLegacyFormat" : {
            "type" : "boolean",
            "description" : "Legacy PKCS12 format"
          }
        }
      },
      "CertificateRecoveryRequest" : {
        "required" : [ "certificateIds" ],
        "type" : "object",
        "properties" : {
          "certificateIds" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A collection of certificates UUIDs",
            "example" : [ "f2b42d60-df9c-11ed-b8ab-4788d83ace9f", "f2c173d0-df9c-11ed-b8ab-4788d83ace9f" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "applicationIds" : {
            "type" : "array",
            "description" : "A collection of applications UUIDs",
            "example" : [ "47c9d920-da21-11ed-a63c-d508f08eeaa0", "9303e940-df9d-11ed-8850-f18176fc5513" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      },
      "CertificateRetirementRequest" : {
        "required" : [ "certificateIds" ],
        "type" : "object",
        "properties" : {
          "certificateIds" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A collection of certificates UUIDs",
            "example" : [ "f2b42d60-df9c-11ed-b8ab-4788d83ace9f", "f2c173d0-df9c-11ed-b8ab-4788d83ace9f" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "addToBlocklist" : {
            "type" : "boolean",
            "description" : "This parameter ensures the deleted certificate will not be discovered again.",
            "example" : true
          }
        }
      },
      "CertificateValidationResponse" : {
        "type" : "object",
        "properties" : {
          "fingerprints" : {
            "type" : "array",
            "description" : "A collection of certificate's fingerprints",
            "example" : [ "2C85B0AD64F55AA70BAC75F69711578DC505C3F9", "051ECFBD202B0383A7745F479F978C8E9FA9ADE1" ],
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CertificateValidationRequest" : {
        "required" : [ "certificateIds" ],
        "type" : "object",
        "properties" : {
          "certificateIds" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A collection of certificates UUIDs  ",
            "example" : [ "f2b42d60-df9c-11ed-b8ab-4788d83ace9f", "f2c173d0-df9c-11ed-b8ab-4788d83ace9f" ],
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      },
      "CertificateExpirationInventoryMonitoringConfiguration" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/InventoryMonitoringConfiguration"
        }, {
          "type" : "object",
          "properties" : {
            "enabled" : {
              "type" : "boolean"
            },
            "thresholds" : {
              "maxItems" : 3,
              "minItems" : 0,
              "type" : "array",
              "items" : {
                "type" : "integer",
                "format" : "int32"
              }
            },
            "applicationIds" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "uuid"
              }
            },
            "includeUnassignedCertificates" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "InventoryMonitoringConfiguration" : {
        "required" : [ "inventoryMonitoringConfigurationType" ],
        "type" : "object",
        "properties" : {
          "inventoryMonitoringConfigurationType" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "inventoryMonitoringConfigurationType"
        }
      },
      "InventoryMonitoringConfigurationResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "UUID of the configuration",
            "format" : "uuid",
            "example" : "2e8d71a0-74ce-11ed-9051-cfa579eae364"
          },
          "companyId" : {
            "type" : "string",
            "description" : "UUID specific to your company",
            "format" : "uuid",
            "example" : "2b391680-74ce-11ed-bf7a-a3d5ccdf275c"
          },
          "configuration" : {
            "$ref" : "#/components/schemas/InventoryMonitoringConfiguration"
          }
        }
      },
      "CertificateExpirationInventoryMonitoringConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/InventoryMonitoringConfig"
        }, {
          "type" : "object",
          "properties" : {
            "enabled" : {
              "type" : "boolean",
              "description" : "Enables or disables webhook messages."
            },
            "thresholds" : {
              "type" : "array",
              "description" : "Array of certificate expiration thresholds, in days, for when notifications will be sent. Limit is 3 values.",
              "items" : {
                "type" : "integer",
                "description" : "Array of certificate expiration thresholds, in days, for when notifications will be sent. Limit is 3 values.",
                "format" : "int32"
              }
            },
            "applicationIds" : {
              "uniqueItems" : true,
              "type" : "array",
              "description" : "Application IDs that the webhook applies to",
              "items" : {
                "type" : "string",
                "description" : "Application IDs that the webhook applies to",
                "format" : "uuid"
              }
            },
            "includeUnassignedCertificates" : {
              "type" : "boolean",
              "description" : "Enables or disables notifications for unassigned certificates."
            }
          }
        } ]
      },
      "InventoryMonitoringConfig" : {
        "type" : "object",
        "properties" : {
          "inventoryMonitoringConfigurationType" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "inventoryMonitoringConfigurationType",
          "mapping" : {
            "CERTIFICATE_EXPIRATION" : "#/components/schemas/CertificateExpirationInventoryMonitoringConfig"
          }
        }
      },
      "InventoryMonitoringConfigRequest" : {
        "type" : "object",
        "properties" : {
          "inventoryMonitoringConfiguration" : {
            "type" : "object",
            "oneOf" : [ {
              "$ref" : "#/components/schemas/CertificateExpirationInventoryMonitoringConfig"
            } ]
          }
        }
      },
      "InventoryMonitoringConfigurationRequest" : {
        "required" : [ "inventoryMonitoringConfiguration" ],
        "type" : "object",
        "properties" : {
          "inventoryMonitoringConfiguration" : {
            "$ref" : "#/components/schemas/InventoryMonitoringConfiguration"
          }
        }
      },
      "InventoryMonitoringSchedulerInformation" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the configuration"
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the configuration",
            "enum" : [ "PENDING", "RUNNING", "DONE", "FAILED" ]
          }
        }
      },
      "FlattenedCertificateSavedSearch" : {
        "type" : "object",
        "properties" : {
          "expression" : {
            "$ref" : "#/components/schemas/Expression"
          },
          "ordering" : {
            "$ref" : "#/components/schemas/Ordering"
          },
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          }
        }
      },
      "SavedSearchInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "userId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "companyId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string"
          },
          "searchDetails" : {
            "$ref" : "#/components/schemas/FlattenedCertificateSavedSearch"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PREDEFINED_FILTER", "FULL_TEXT" ]
          },
          "isDefault" : {
            "type" : "boolean"
          }
        }
      },
      "SavedSearchResponse" : {
        "type" : "object",
        "properties" : {
          "savedSearchInfo" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavedSearchInfo"
            }
          }
        }
      },
      "SavedSearchRequest" : {
        "required" : [ "expression", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "minLength" : 1,
            "type" : "string"
          },
          "expression" : {
            "$ref" : "#/components/schemas/Expression"
          },
          "ordering" : {
            "$ref" : "#/components/schemas/Ordering"
          },
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PREDEFINED_FILTER", "FULL_TEXT" ]
          },
          "isDefault" : {
            "type" : "boolean"
          }
        }
      }
    },
    "securitySchemes" : {
      "tppl-api-key" : {
        "type" : "apiKey",
        "name" : "tppl-api-key",
        "in" : "header"
      }
    }
  }
}